{"version":3,"sources":["bokeh-tables.min.js","tree/models/widgets/tables/cell_editors.js","tree/models/widgets/tables/cell_formatters.js","tree/models/widgets/tables/data_table.js","tree/models/widgets/tables/index.js","tree/models/widgets/tables/main.js","tree/models/widgets/tables/table_column.js","tree/models/widgets/tables/table_widget.js","tree/models/widgets/widget.js","../../node_modules/jquery/dist/jquery.js","../../node_modules/slickgrid/lib/jquery.event.drag-2.3.0.js","../../node_modules/slickgrid/lib/jquery.event.drop-2.3.0.js","../../node_modules/slickgrid/plugins/slick.checkboxselectcolumn.js","../../node_modules/slickgrid/plugins/slick.rowselectionmodel.js","../../node_modules/slickgrid/slick.core.js","../../node_modules/slickgrid/slick.grid.js","../../node_modules/slickgrid/slick.jquery.js","../../node_modules/underscore.template/lib/index.js","../../node_modules/underscore.template/lib/underscore.template.js"],"names":["root","factory","this","Bokeh","define","modules","aliases","entry","register_plugin","Error","402","require","module","exports","Object","defineProperty","value","extend1","child","parent","ctor","constructor","key","hasProp","call","prototype","__super__","hasOwnProperty","p","dom_1","object_1","dom_view_1","model_1","data_table_1","CellEditorView","superClass","options","args","extend","model","column","editor","className","inputEl","emptyValue","defaultValue","initialize","render","container","appendChild","el","renderEditor","disableNavigation","addEventListener","_this","event","keyCode","Keys","Left","Right","Up","Down","PageUp","PageDown","stopImmediatePropagation","destroy","remove","focus","show","hide","position","getValue","setValue","val","serializeValue","isValueChanged","applyValue","item","state","grid","getData","setField","DTINDEX_NAME","field","loadValue","validateValue","result","validator","valid","msg","validate","DOMView","CellEditor","apply","arguments","type","default_view","Model","StringEditorView","input","select","StringEditor","completions","Array","TextEditorView","TextEditor","SelectEditorView","i","len","ref","length","option","SelectEditor","PercentEditorView","PercentEditor","CheckboxEditorView","checked","CheckboxEditor","IntEditorView","parseInt","isNaN","IntEditor","step","Number","NumberEditorView","parseFloat","NumberEditor","TimeEditorView","TimeEditor","DateEditorView","Date","calendarOpen","DateEditor","403","Numbro","compile_template","tz","types_1","CellFormatter","doFormat","row","cell","columnDef","dataContext","replace","StringFormatter","font_style","FontStyle","text_align","TextAlign","text_color","Color","text","span","style","fontWeight","fontStyle","textAlign","color","outerHTML","NumberFormatter","format","String","language","rounding","Math","round","floor","ceil","BooleanFormatter","icon","class","DateFormatter","getFormat","fmt","date","isString","HTMLTemplateFormatter","template","compiled_template","404","slickgrid_1","slick_rowselectionmodel_1","slick_checkboxselectcolumn_1","hittest","string_1","array_1","logging_1","table_widget_1","widget_1","DataProvider","source","view","data","index","indices","getLength","getItem","offset","j","keys","setItem","_update_source_inplace","getField","getItemMetadata","getRecords","results","push","sort","columns","cols","old_index","records","sortCol","sortAsc","slice","i1","i2","sign","value1","value2","indexOf","properties","change","emit","attributes","DataTableView","in_selection_update","connect_signals","connect","updateGrid","streaming","patching","updateSelection","compute_indices","invalidate","cur_grid_range","min_index","permuted_indices","selected","selected_indices","x","setSelectedRows","getViewport","scroll_to_selection","any","top","bottom","max","min","scrollRowToTop","newIndexColumn","id","uniqueId","name","width","behavior","cannotTriggerInsert","resizable","selectable","sortable","cssClass","checkboxSelector","reorderable","toColumn","CheckboxSelectColumn","unshift","getColumnDefinition","row_headers","$","fn","logger","warn","enableCellNavigation","enableColumnReorder","forceFitColumns","fit_columns","autoHeight","height","multiColumnSort","editable","autoEdit","default_width","Grid","onSort","subscribe","sortCols","setSelectionModel","RowSelectionModel","selectActiveRow","registerPlugin","onSelectedRowsChanged","create_hit_test_result","ref1","rows","WidgetView","DataTable","Bool","override","internal","TableWidget","405","tslib_1","__exportStar","table_column_1","TableColumn","406","Tables","base_1","register_models","407","cell_formatters_1","cell_editors_1","title","formatter","Instance","default_sort","bind","defaultSortAsc","408","cds_view_1","CDSView","Widget","409","layout_dom_1","_render_classes","LayoutDOMView","LayoutDOM","410","global","document","w","window","noGlobal","DOMEval","code","doc","script","createElement","head","parentNode","removeChild","isArrayLike","obj","jQuery","isWindow","nodeName","elem","toLowerCase","winnow","elements","qualifier","not","isFunction","grep","nodeType","risSimple","test","filter","sibling","cur","dir","createOptions","object","each","match","rnothtmlwhite","_","flag","Identity","v","Thrower","ex","adoptValue","resolve","reject","noValue","method","promise","done","fail","then","undefined","completed","removeEventListener","ready","Data","expando","uid","rbrace","JSON","parse","dataAttr","rmultiDash","getAttribute","e","dataUser","set","adjustCSS","prop","valueParts","tween","adjusted","scale","maxIterations","currentValue","css","initial","unit","cssNumber","initialInUnit","rcssNum","exec","start","end","getDefaultDisplay","temp","ownerDocument","display","defaultDisplayMap","body","showHide","values","dataPriv","get","isHiddenWithinTree","getAll","context","tag","ret","getElementsByTagName","querySelectorAll","merge","setGlobalEval","elems","refElements","l","buildFragment","scripts","selection","ignored","tmp","wrap","contains","fragment","createDocumentFragment","nodes","rhtml","rtagName","wrapMap","_default","innerHTML","htmlPrefilter","lastChild","childNodes","firstChild","textContent","createTextNode","inArray","rscriptType","returnTrue","returnFalse","safeActiveElement","activeElement","err","on","types","selector","one","origFn","off","guid","add","manipulationTarget","content","disableScript","restoreScript","rscriptTypeMasked","removeAttribute","cloneCopyEvent","src","dest","pdataOld","pdataCur","udataOld","udataCur","events","hasData","access","handle","fixInput","rcheckableType","domManip","collection","callback","concat","first","hasScripts","node","iNoClone","support","checkClone","rchecked","self","eq","html","map","clone","_evalUrl","rcleanScript","keepData","cleanData","curCSS","computed","minWidth","maxWidth","getStyles","getPropertyValue","pixelMarginRight","rnumnonpx","rmargin","addGetHookIf","conditionFn","hookFn","vendorPropName","emptyStyle","capName","toUpperCase","cssPrefixes","finalPropName","cssProps","setPositiveNumber","subtract","matches","augmentWidthOrHeight","extra","isBorderBox","styles","cssExpand","getWidthOrHeight","valueIsBorderBox","boxSizingReliable","Tween","easing","init","schedule","inProgress","hidden","requestAnimationFrame","setTimeout","fx","interval","tick","createFxNow","fxNow","now","genFx","includeWidth","which","attrs","opacity","createTween","animation","Animation","tweeners","defaultPrefilter","props","opts","toggle","hooks","oldfire","propTween","restoreDisplay","isBox","anim","orig","dataShow","queue","_queueHooks","unqueued","empty","fire","always","rfxtypes","isEmptyObject","overflow","overflowX","overflowY","propFilter","specialEasing","camelCase","isArray","cssHooks","expand","stopped","prefilters","deferred","Deferred","currentTime","remaining","startTime","duration","percent","tweens","run","notifyWith","resolveWith","originalProperties","originalOptions","stop","gotoEnd","rejectWith","proxy","progress","complete","timer","stripAndCollapse","tokens","join","getClass","buildParams","prefix","traditional","rbracket","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspect","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","target","deep","flatOptions","ajaxSettings","ajaxHandleResponses","s","responses","ct","finalDataType","firstDataType","contents","shift","mimeType","getResponseHeader","converters","ajaxConvert","response","isSuccess","conv2","current","conv","prev","responseFields","dataFilter","split","error","arr","getProto","getPrototypeOf","class2type","toString","hasOwn","fnToString","ObjectFunctionString","version","rtrim","rmsPrefix","rdashAlpha","fcamelCase","all","letter","jquery","toArray","num","pushStack","prevObject","last","splice","copy","copyIsArray","isPlainObject","random","isReady","noop","isNumeric","proto","Ctor","globalEval","string","trim","makeArray","second","invert","callbackInverse","callbackExpect","arg","Symbol","iterator","Sizzle","seed","m","nid","groups","newSelector","newContext","preferredDoc","setDocument","documentIsHTML","rquickExpr","getElementById","getElementsByClassName","qsa","compilerCache","rbuggyQSA","rcssescape","fcssescape","setAttribute","tokenize","toSelector","rsibling","testContext","qsaError","createCache","cache","Expr","cacheLength","markFunction","assert","addHandle","handler","attrHandle","siblingCheck","a","b","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createDisabledPseudo","disabled","isDisabled","disabledAncestor","createPositionalPseudo","argument","matchIndexes","setFilters","addCombinator","matcher","combinator","base","skip","next","checkNonElements","doneName","xml","oldCache","uniqueCache","outerCache","newCache","dirruns","uniqueID","elementMatcher","matchers","multipleContexts","contexts","condense","unmatched","newUnmatched","mapped","setMatcher","preFilter","postFilter","postFinder","postSelector","preMap","postMap","preexisting","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","find","dirrunsUnique","pop","uniqueSort","getText","isXML","compile","sortInput","hasDuplicate","docElem","rbuggyMatches","classCache","tokenCache","sortOrder","push_native","list","booleans","whitespace","identifier","pseudos","rwhitespace","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","runescape","funescape","escaped","escapedWhitespace","high","fromCharCode","ch","asCodePoint","charCodeAt","unloadHandler","els","documentElement","hasCompare","subWindow","defaultView","attachEvent","createComment","getById","getElementsByName","attrId","getAttributeNode","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","expr","attr","specified","escape","sel","duplicates","detectDuplicates","sortStable","nodeValue","selectors","createPseudo",">"," ","+","~","excess","unquoted","nodeNameSelector","pattern","operator","check","what","simple","forward","ofType","nodeIndex","useCache","pseudo","idx","matched","has","innerText","lang","elemLang","hash","location","hasFocus","href","tabIndex","enabled","selectedIndex","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","filters","parseOnly","soFar","preFilters","cached","token","compiled","unique","isXMLDoc","escapeSelector","until","truncate","is","siblings","n","rneedsContext","rsingleTag","rootjQuery","parseHTML","rparentsprev","guaranteedUnique","children","targets","closest","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","reverse","Callbacks","firing","memory","fired","locked","firingIndex","once","stopOnFalse","disable","lock","fireWith","tuples","catch","pipe","fns","newDefer","tuple","returned","notify","onFulfilled","onRejected","onProgress","depth","special","that","mightThrow","maxDepth","TypeError","process","exceptionHook","stackTrace","getStackHook","stateString","when","singleValue","resolveContexts","resolveValues","master","updateFunc","rerrorNames","stack","console","message","readyException","readyList","readyWait","wait","readyState","doScroll","chainable","emptyGet","raw","bulk","acceptData","owner","configurable","removeData","_data","_removeData","dequeue","startLength","setter","clearQueue","count","defer","pnum","swap","old","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","div","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","handleObjIn","eventHandle","t","handleObj","handlers","namespaces","origType","elemData","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","preventDefault","stopPropagation","postDispatch","matchedHandlers","matchedSelectors","addProp","hook","Event","enumerable","originalEvent","writable","load","noBubble","trigger","blur","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","isSimulated","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","char","charCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","mouseenter","mouseleave","pointerenter","pointerleave","related","rxhtmlTag","rnoInnerhtml","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","original","insert","opener","getComputedStyle","computeStyleTests","cssText","divStyle","pixelPositionVal","reliableMarginLeftVal","marginLeft","boxSizingReliableVal","marginRight","pixelMarginRightVal","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginLeft","rdisplayswap","rcustomProp","cssShow","visibility","cssNormalTransform","letterSpacing","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","float","origName","isCustomProp","setProperty","isFinite","getClientRects","getBoundingClientRect","left","margin","padding","border","suffix","expanded","parts","propHooks","eased","pos","scrollTop","scrollLeft","linear","swing","cos","PI","rrun","*","tweener","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","radioValue","boolHook","removeAttr","nType","attrHooks","attrNames","getter","lowercaseName","rfocusable","rclickable","removeProp","propFix","tabindex","for","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","classNames","hasClass","rreturn","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","parentWindow","simulate","triggerHandler","hover","fnOver","fnOut","focusin","attaches","nonce","rquery","parseXML","DOMParser","parseFromString","rCRLF","rsubmitterTypes","rsubmittable","param","valueOrFunction","encodeURIComponent","serialize","serializeArray","r20","rhash","rantiCache","rheaders","rlocalProtocol","rnoContent","rprotocol","allTypes","originAnchor","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","json","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","status","nativeStatusText","headers","success","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","fireGlobals","globalEventContext","completeDeferred","responseHeaders","urlAnchor","uncached","requestHeaders","requestHeadersNames","strAbort","getAllResponseHeaders","setRequestHeader","overrideMimeType","abort","finalText","crossDomain","host","hasContent","beforeSend","send","getJSON","getScript","throws","wrapAll","firstElementChild","wrapInner","unwrap","visible","offsetWidth","offsetHeight","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","open","username","xhrFields","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","createHTMLDocument","implementation","keepScripts","parsed","params","animated","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","rect","win","pageYOffset","clientTop","pageXOffset","clientLeft","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","unbind","delegate","undelegate","holdReady","hold","parseJSON","amd","_jQuery","_$","noConflict","411","drag","str","$event","$special","defaults","distance","drop","datakey","def","dontstart","textselect","detachEvent","touched","dd","propagates","mousedown","interactions","interaction","dragging","hijack","flatten","live","droppable","pow","getTime","ia","mode","cancelled","subject","element","update","startX","startY","deltaX","deltaY","originalX","originalY","available","member","unselectable","locate","$dispatch","draginit","dragstart","dragend","412","multi","Infinity","tolerance","anyactive","winner","$targets","tolerate","$elem","posi","outerHeight","outerWidth","right","modes","intersect","overlap","fit","middle","drp","drg","xy","dropinit","dropstart","dropend","413","_grid","_handler","handleSelectedRowsChanged","onClick","handleClick","onHeaderClick","handleHeaderClick","onKeyDown","handleKeyDown","unsubscribeAll","selectedRows","getSelectedRows","lookup","_selectedRowsLookup","invalidateRow","getDataLength","updateColumnHeader","_options","columnId","toolTip","getColumns","getEditorLock","isActive","commitCurrentEdit","toggleRowSelection","selectRows","rowArray","addRows","deSelectRows","removeRows","checkboxSelectionFormatter","Slick","EventHandler","_defaults","414","onActiveCellChanged","wrapHandler","handleActiveCellChange","_inHandler","rangesToRows","ranges","fromRow","toRow","rowsToRanges","lastCell","Range","getRowsRange","from","_ranges","setSelectedRanges","_self","onSelectedRangesChanged","getSelectedRanges","activeRow","getActiveCell","y","scrollRowIntoView","tempRanges","getCellFromEvent","canCellBeActive","getOptions","multiSelect","setActiveCell","o","415","EventData","unsubscribe","scope","fromCell","toCell","isSingleRow","isSingleCell","NonDataItem","__nonDataRow","Group","__group","level","collapsed","selectChecked","totals","groupingKey","GroupTotals","__groupTotals","group","initialized","EditorLock","activeEditController","editController","activate","cancelCurrentEdit","deactivate","equals","NonDataRow","GlobalEditorLock","BACKSPACE","DELETE","DOWN","END","ENTER","ESCAPE","ESC","HOME","INSERT","LEFT","PAGE_DOWN","PAGE_UP","RIGHT","TAB","UP","C","V","preClickClassName","416","SlickGrid","$container","cacheCssForHiddenInit","maxSupportedCssHeight","getMaxSupportedCssHeight","scrollbarDimensions","measureScrollbar","validateAndEnforceOptions","columnDefaults","defaultColumnWidth","columnsById","$focusSink","createPreHeaderPanel","$preHeaderPanelScroller","$preHeaderPanel","$preHeaderPanelSpacer","getCanvasWidth","showPreHeaderPanel","$headerScroller","$headers","getHeadersWidth","$headerRowScroller","$headerRow","$headerRowSpacer","$topPanelScroller","$topPanel","showTopPanel","showHeaderRow","$viewport","$canvas","createFooterRow","$footerRowScroller","$footerRow","$footerRowSpacer","showFooterRow","numberedMultiColumnSort","sortIndicatorCssClass","$focusSink2","explicitInitialization","finishInitialization","viewportW","measureCellPaddingAndBorder","disableSelection","enableTextSelectionOnCells","updateColumnCaches","createColumnHeaders","setupColumnSort","createCssRules","resizeCanvas","bindAncestorScrollEvents","handleScroll","handleHeaderContextMenu","handleHeaderMouseEnter","handleHeaderMouseLeave","handleHeaderRowScroll","handleFooterRowScroll","handlePreHeaderPanelScroll","handleDblClick","handleContextMenu","handleDragInit","handleDragStart","handleDrag","handleDragEnd","handleMouseEnter","handleMouseLeave","navigator","userAgent","handleMouseWheel","restoreCssFromHiddenInit","$hiddenParents","oldProps","plugin","plugins","unregisterPlugin","selectionModel","handleSelectedRangesChanged","getSelectionModel","getCanvasNode","$c","dim","clientWidth","clientHeight","getColumnTotalWidth","includeScrollbar","totalWidth","ii","headersWidth","availableWidth","viewportHasVScroll","rowWidth","fullWidthRows","updateCanvasWidth","forceColumnWidthsUpdate","oldCanvasWidth","canvasWidth","viewportHasHScroll","applyColumnWidths","$target","supportedHeight","testUpTo","getUID","getHeaderColumnWidthDiff","headerColumnWidthDiff","getScrollbarDimensions","scrollWidth","scrollHeight","$boundAncestors","handleActiveCellPositionChange","unbindAncestorScrollEvents","getColumnIndex","$header","onBeforeHeaderCellDestroy","onHeaderCellRendered","getHeaderRow","getFooterRow","getPreHeaderPanel","getHeaderRowColumn","getFooterRowColumn","$footer","onMouseEnter","onMouseLeave","onBeforeHeaderRowCellDestroy","onBeforeFooterRowCellDestroy","headerCssClass","headerRowCell","onHeaderRowCellRendered","footerRowCell","onFooterRowCellRendered","setSortColumns","sortColumns","setupColumnResize","setColumns","setupColumnReorder","$col","sortColumn","hadSortCol","tristateMultiColumnSort","containment","axis","cursor","helper","placeholder","ui","beforeStop","reorderedIds","reorderedColumns","onColumnsReordered","c","columnElements","minPageX","maxPageX","firstResizable","lastResizable","shrinkLeewayOnRight","stretchLeewayOnRight","previousWidth","absoluteColumnMinWidth","shrinkLeewayOnLeft","stretchLeewayOnLeft","actualMinWidth","d","applyColumnHeaderWidths","syncColumnCellResize","newWidth","rerenderOnResize","invalidateAllRows","onColumnsResized","getVBoxDelta","$el","delta","h","verArray","jQueryNewWidthBehaviour","headerColumnHeightDiff","r","cellWidthDiff","cellHeightDiff","$style","rowHeight","rules","topPanelHeight","preHeaderPanelHeight","headerRowHeight","footerRowHeight","styleSheet","getColumnCssRules","stylesheet","sheets","styleSheets","ownerNode","owningElement","columnCssRulesL","columnCssRulesR","columnIdx","cssRules","selectorText","substr","removeCssRules","onBeforeDestroy","editorLock","getEditController","autosizeColumns","prevTotal","widths","shrinkLeeway","total","availWidth","shrinkProportion","absMinWidth","shrinkSize","growProportion","growSize","currentWidth","reRender","rule","setSortColumn","ascending","numberCols","headerColumnEls","sortIndicatorEl","columnIndex","getSortColumns","k","canCellBeSelected","selectedCellCssClass","setCellCssStyles","columnPosLeft","columnPosRight","columnDefinitions","setOptions","suppressRender","makeActiveCellNormal","enableAddRow","leaveSpaceForNewRows","setData","newData","scrollToTop","updateRowCount","getDataLengthIncludingAddNew","pagingActive","pagingIsLastPage","getDataItem","getTopPanel","setTopPanelVisibility","setHeaderRowVisibility","setFooterRowVisibility","setPreHeaderPanelVisibility","getContainerNode","getRowTop","getRowFromPosition","viewportH","oldOffset","page","ph","cj","newScrollTop","range","getVisibleRange","cleanupRows","updateRowPositions","prevScrollTop","vScrollDir","lastRenderedScrollTop","onViewportChanged","defaultFormatter","getFormatter","rowMetadata","columnOverrides","formatterFactory","getEditor","columnMetadata","editorFactory","getDataItemValueForColumn","dataItemColumnValueExtractor","appendRowHtml","stringArray","dataLength","dataLoading","rowCss","addNewRowCssClass","metadata","cssClasses","colspan","columnData","leftPx","rightPx","appendCellHtml","cellCss","activeCell","cellCssClasses","formatterResult","addlCssClasses","onBeforeAppendCell","addClasses","rowsCache","cellRenderQueue","cellColSpans","rangeToKeep","removeRowFromCache","enableAsyncPostRenderCleanup","startPostProcessingCleanup","currentEditor","queuePostProcessedRowForCleanup","cacheEntry","postProcessedRow","rowIdx","postProcessgroupId","postProcessedCleanupQueue","actionType","groupId","cellNodesByColumnIdx","rowNode","queuePostProcessedCellForCleanup","cellnode","rowNodeFromLastMouseWheelEvent","zombieRowNodeFromLastMouseWheelEvent","zombieRowCacheFromLastMouseWheelEvent","zombieRowPostProcessedFromLastMouseWheelEvent","postProcessedRows","renderedRows","counter_rows_removed","invalidateRows","rl","applyFormatResultToCellNode","cellNode","suppressRemove","removeClasses","updateCell","getCellNode","invalidatePostProcessingResults","updateRow","ensureCellNodesInRowsCache","getViewportHeight","numVisibleRows","lastRenderedScrollLeft","updatePagingStatusFromView","pagingInfo","pageSize","pageNum","totalPages","dataLengthIncludingAddNew","numberOfRows","oldViewportHasVScroll","r1","activeCellNode","resetActiveCell","oldH","oldScrollTopInRange","viewportTop","viewportLeft","getRenderedRange","buffer","minBuffer","previousSibling","cleanUpCells","totalCellsRemoved","cellsToRemove","cellToRemove","cleanUpAndRenderCells","cellsAdded","processedRows","totalCellsAdded","btm","processedRow","renderRows","needToReselectCell","counter_rows_rendered","startPostProcessing","enableAsyncPostRender","h_postrender","asyncPostProcessRows","asyncPostRenderDelay","h_postrenderCleanup","asyncPostProcessCleanupRows","asyncPostRenderCleanupDelay","postProcessFromRow","postProcessToRow","rendered","h_render","vScrollDist","abs","hScrollDist","prevScrollLeft","forceSyncScrolling","onScroll","processedStatus","asyncPostRender","asyncPostRenderCleanup","updateCellCssStylesOnRenderedRows","addedHash","removedHash","addedRowHash","removedRowHash","addCellCssStyles","onCellCssStylesChanged","removeCellCssStyles","prevHash","getCellCssStyles","flashCell","$cell","toggleCellClass","times","cellFlashingCssClass","cellExists","retval","onDragInit","onDragStart","onDrag","onDragEnd","handled","navigatePrev","keyCaptureList","cancelEditAndSetFocus","navigatePageDown","navigatePageUp","navigateLeft","navigateRight","navigateUp","navigateDown","navigateNext","commitEditAndSetFocus","makeActiveCellEditable","setFocus","preClickModeOn","setActiveCellInternal","onContextMenu","onDblClick","gotoCell","onHeaderMouseEnter","onHeaderMouseLeave","onHeaderContextMenu","getCellFromPoint","getCellFromNode","cls","getRowFromNode","getCellNodeBox","y1","y2","x1","x2","tabbingDirection","scrollCellIntoView","doPaging","getColspan","internalScrollColumnIntoView","scrollRight","scrollColumnIntoView","newCell","opt_editMode","suppressActiveCellChangedEvent","activePosX","showCellSelection","isCellPotentiallyEditable","h_editorLoader","asyncEditorLoading","asyncEditorLoadDelay","clearTextSelection","getSelection","removeAllRanges","onBeforeCellEditorDestroy","onBeforeEditCell","useEditor","suppressClearOnEdit","gridPosition","absBox","commitChanges","cancelChanges","preClick","serializedEditorValue","box","offsetTop","offsetLeft","getActiveCellPosition","getGridPosition","onActiveCellPositionChanged","cellBox","getCellEditor","getActiveCellNode","rowAtTop","rowAtBottom","scrollPage","deltaRows","prevCell","prevActivePosX","findFirstFocusableCell","findLastFocusableCell","lastFocusableCell","gotoRight","posX","gotoLeft","firstFocusableCell","gotoDown","gotoUp","gotoNext","gotoPrev","lastSelectableCell","navigate","tabbingDirections","up","down","stepFunctions","stepFn","isAddNewRow","focusable","forceEdit","validationResults","editCommand","serializedValue","prevSerializedValue","execute","onCellChange","undo","editCommandHandler","newItem","onAddNewRow","onValidationError","preserveCopiedSelectionOnPaste","debug","alert","eval","slickGridVersion","editActiveCell","417","418","Template","UnderscoreTemplate","419","breaker","ArrayProto","ObjProto","nativeForEach","forEach","nativeKeys","nativeIsArray","path","entityMap","&","<","\"","'","entityRegexes","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n","\t"," "," ","escaper","variable","Function","models/widgets/tables/cell_editors","models/widgets/tables/cell_formatters","models/widgets/tables/data_table","models/widgets/tables/index","models/widgets/tables/main","models/widgets/tables/table_column","models/widgets/tables/table_widget","models/widgets/widget"],"mappings":"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","file":"bokeh-tables.min.js","sourcesContent":["(function(root, factory) {\n//  if(typeof exports === 'object' && typeof module === 'object')\n//    factory(require(\"Bokeh\"));\n//  else if(typeof define === 'function' && define.amd)\n//    define([\"Bokeh\"], factory);\n//  else if(typeof exports === 'object')\n//    factory(require(\"Bokeh\"));\n//  else\n    factory(root[\"Bokeh\"]);\n})(this, function(Bokeh) {\n  var define;\n  return (function(modules, aliases, entry) {\n    if (Bokeh != null) {\n      return Bokeh.register_plugin(modules, aliases, entry);\n    } else {\n      throw new Error(\"Cannot find Bokeh. You have to load it prior to loading plugins.\");\n    }\n  })\n({\n402: /* models/widgets/tables/cell_editors */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar extend1 = function (child, parent) {\n        for (var key in parent) {\n            if (hasProp.call(parent, key))\n                child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\nvar p = require(14    /* core/properties */);\nvar dom_1 = require(5    /* core/dom */);\nvar object_1 = require(29    /* core/util/object */);\nvar dom_view_1 = require(6    /* core/dom_view */);\nvar model_1 = require(49    /* ../../../model */);\nvar data_table_1 = require(404    /* ./data_table */);\nexports.CellEditorView = function (superClass) {\n    extend1(CellEditorView, superClass);\n    CellEditorView.prototype.className = 'bk-cell-editor';\n    CellEditorView.prototype.inputEl = null;\n    CellEditorView.prototype.emptyValue = null;\n    CellEditorView.prototype.defaultValue = null;\n    function CellEditorView(options) {\n        this.args = options;\n        CellEditorView.__super__.constructor.call(this, object_1.extend({ model: options.column.editor }, options));\n    }\n    CellEditorView.prototype.initialize = function (options) {\n        CellEditorView.__super__.initialize.call(this, options);\n        return this.render();\n    };\n    CellEditorView.prototype.render = function () {\n        CellEditorView.__super__.render.call(this);\n        this.args.container.appendChild(this.el);\n        this.el.appendChild(this.inputEl);\n        this.renderEditor();\n        this.disableNavigation();\n        return this;\n    };\n    CellEditorView.prototype.renderEditor = function () {\n    };\n    CellEditorView.prototype.disableNavigation = function () {\n        return this.inputEl.addEventListener('keydown', function (_this) {\n            return function (event) {\n                switch (event.keyCode) {\n                case dom_1.Keys.Left:\n                case dom_1.Keys.Right:\n                case dom_1.Keys.Up:\n                case dom_1.Keys.Down:\n                case dom_1.Keys.PageUp:\n                case dom_1.Keys.PageDown:\n                    return event.stopImmediatePropagation();\n                }\n            };\n        }(this));\n    };\n    CellEditorView.prototype.destroy = function () {\n        return this.remove();\n    };\n    CellEditorView.prototype.focus = function () {\n        return this.inputEl.focus();\n    };\n    CellEditorView.prototype.show = function () {\n    };\n    CellEditorView.prototype.hide = function () {\n    };\n    CellEditorView.prototype.position = function () {\n    };\n    CellEditorView.prototype.getValue = function () {\n        return this.inputEl.value;\n    };\n    CellEditorView.prototype.setValue = function (val) {\n        return this.inputEl.value = val;\n    };\n    CellEditorView.prototype.serializeValue = function () {\n        return this.getValue();\n    };\n    CellEditorView.prototype.isValueChanged = function () {\n        return !(this.getValue() === '' && this.defaultValue == null) && this.getValue() !== this.defaultValue;\n    };\n    CellEditorView.prototype.applyValue = function (item, state) {\n        return this.args.grid.getData().setField(item[data_table_1.DTINDEX_NAME], this.args.column.field, state);\n    };\n    CellEditorView.prototype.loadValue = function (item) {\n        var value;\n        value = item[this.args.column.field];\n        this.defaultValue = value != null ? value : this.emptyValue;\n        return this.setValue(this.defaultValue);\n    };\n    CellEditorView.prototype.validateValue = function (value) {\n        var result;\n        if (this.args.column.validator) {\n            result = this.args.column.validator(value);\n            if (!result.valid) {\n                return result;\n            }\n        }\n        return {\n            valid: true,\n            msg: null\n        };\n    };\n    CellEditorView.prototype.validate = function () {\n        return this.validateValue(this.getValue());\n    };\n    return CellEditorView;\n}(dom_view_1.DOMView);\nexports.CellEditor = function (superClass) {\n    extend1(CellEditor, superClass);\n    function CellEditor() {\n        return CellEditor.__super__.constructor.apply(this, arguments);\n    }\n    CellEditor.prototype.type = 'CellEditor';\n    CellEditor.prototype.default_view = exports.CellEditorView;\n    return CellEditor;\n}(model_1.Model);\nexports.StringEditorView = function (superClass) {\n    extend1(StringEditorView, superClass);\n    function StringEditorView() {\n        return StringEditorView.__super__.constructor.apply(this, arguments);\n    }\n    StringEditorView.prototype.emptyValue = '';\n    StringEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\n    StringEditorView.prototype.renderEditor = function () {\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    StringEditorView.prototype.loadValue = function (item) {\n        StringEditorView.__super__.loadValue.call(this, item);\n        this.inputEl.defaultValue = this.defaultValue;\n        return this.inputEl.select();\n    };\n    return StringEditorView;\n}(exports.CellEditorView);\nexports.StringEditor = function (superClass) {\n    extend1(StringEditor, superClass);\n    function StringEditor() {\n        return StringEditor.__super__.constructor.apply(this, arguments);\n    }\n    StringEditor.prototype.type = 'StringEditor';\n    StringEditor.prototype.default_view = exports.StringEditorView;\n    StringEditor.define({\n        completions: [\n            p.Array,\n            []\n        ]\n    });\n    return StringEditor;\n}(exports.CellEditor);\nexports.TextEditorView = function (superClass) {\n    extend1(TextEditorView, superClass);\n    function TextEditorView() {\n        return TextEditorView.__super__.constructor.apply(this, arguments);\n    }\n    return TextEditorView;\n}(exports.CellEditorView);\nexports.TextEditor = function (superClass) {\n    extend1(TextEditor, superClass);\n    function TextEditor() {\n        return TextEditor.__super__.constructor.apply(this, arguments);\n    }\n    TextEditor.prototype.type = 'TextEditor';\n    TextEditor.prototype.default_view = exports.TextEditorView;\n    return TextEditor;\n}(exports.CellEditor);\nexports.SelectEditorView = function (superClass) {\n    extend1(SelectEditorView, superClass);\n    function SelectEditorView() {\n        return SelectEditorView.__super__.constructor.apply(this, arguments);\n    }\n    SelectEditorView.prototype.inputEl = dom_1.select();\n    SelectEditorView.prototype.renderEditor = function () {\n        var i, len, ref;\n        ref = this.model.options;\n        for (i = 0, len = ref.length; i < len; i++) {\n            dom_1.option = ref[i];\n            this.inputEl.appendChild(dom_1.option({ value: dom_1.option }, dom_1.option));\n        }\n        return this.focus();\n    };\n    SelectEditorView.prototype.loadValue = function (item) {\n        SelectEditorView.__super__.loadValue.call(this, item);\n        return this.inputEl.select();\n    };\n    return SelectEditorView;\n}(exports.CellEditorView);\nexports.SelectEditor = function (superClass) {\n    extend1(SelectEditor, superClass);\n    function SelectEditor() {\n        return SelectEditor.__super__.constructor.apply(this, arguments);\n    }\n    SelectEditor.prototype.type = 'SelectEditor';\n    SelectEditor.prototype.default_view = exports.SelectEditorView;\n    SelectEditor.define({\n        options: [\n            p.Array,\n            []\n        ]\n    });\n    return SelectEditor;\n}(exports.CellEditor);\nexports.PercentEditorView = function (superClass) {\n    extend1(PercentEditorView, superClass);\n    function PercentEditorView() {\n        return PercentEditorView.__super__.constructor.apply(this, arguments);\n    }\n    return PercentEditorView;\n}(exports.CellEditorView);\nexports.PercentEditor = function (superClass) {\n    extend1(PercentEditor, superClass);\n    function PercentEditor() {\n        return PercentEditor.__super__.constructor.apply(this, arguments);\n    }\n    PercentEditor.prototype.type = 'PercentEditor';\n    PercentEditor.prototype.default_view = exports.PercentEditorView;\n    return PercentEditor;\n}(exports.CellEditor);\nexports.CheckboxEditorView = function (superClass) {\n    extend1(CheckboxEditorView, superClass);\n    function CheckboxEditorView() {\n        return CheckboxEditorView.__super__.constructor.apply(this, arguments);\n    }\n    CheckboxEditorView.prototype.inputEl = dom_1.input({\n        type: 'checkbox',\n        value: 'true'\n    });\n    CheckboxEditorView.prototype.renderEditor = function () {\n        return this.focus();\n    };\n    CheckboxEditorView.prototype.loadValue = function (item) {\n        this.defaultValue = !!item[this.args.column.field];\n        return this.inputEl.checked = this.defaultValue;\n    };\n    CheckboxEditorView.prototype.serializeValue = function () {\n        return this.inputEl.checked;\n    };\n    return CheckboxEditorView;\n}(exports.CellEditorView);\nexports.CheckboxEditor = function (superClass) {\n    extend1(CheckboxEditor, superClass);\n    function CheckboxEditor() {\n        return CheckboxEditor.__super__.constructor.apply(this, arguments);\n    }\n    CheckboxEditor.prototype.type = 'CheckboxEditor';\n    CheckboxEditor.prototype.default_view = exports.CheckboxEditorView;\n    return CheckboxEditor;\n}(exports.CellEditor);\nexports.IntEditorView = function (superClass) {\n    extend1(IntEditorView, superClass);\n    function IntEditorView() {\n        return IntEditorView.__super__.constructor.apply(this, arguments);\n    }\n    IntEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\n    IntEditorView.prototype.renderEditor = function () {\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    IntEditorView.prototype.remove = function () {\n        return IntEditorView.__super__.remove.call(this);\n    };\n    IntEditorView.prototype.serializeValue = function () {\n        return parseInt(this.getValue(), 10) || 0;\n    };\n    IntEditorView.prototype.loadValue = function (item) {\n        IntEditorView.__super__.loadValue.call(this, item);\n        this.inputEl.defaultValue = this.defaultValue;\n        return this.inputEl.select();\n    };\n    IntEditorView.prototype.validateValue = function (value) {\n        if (isNaN(value)) {\n            return {\n                valid: false,\n                msg: 'Please enter a valid integer'\n            };\n        } else {\n            return IntEditorView.__super__.validateValue.call(this, value);\n        }\n    };\n    return IntEditorView;\n}(exports.CellEditorView);\nexports.IntEditor = function (superClass) {\n    extend1(IntEditor, superClass);\n    function IntEditor() {\n        return IntEditor.__super__.constructor.apply(this, arguments);\n    }\n    IntEditor.prototype.type = 'IntEditor';\n    IntEditor.prototype.default_view = exports.IntEditorView;\n    IntEditor.define({\n        step: [\n            p.Number,\n            1\n        ]\n    });\n    return IntEditor;\n}(exports.CellEditor);\nexports.NumberEditorView = function (superClass) {\n    extend1(NumberEditorView, superClass);\n    function NumberEditorView() {\n        return NumberEditorView.__super__.constructor.apply(this, arguments);\n    }\n    NumberEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\n    NumberEditorView.prototype.renderEditor = function () {\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    NumberEditorView.prototype.remove = function () {\n        return NumberEditorView.__super__.remove.call(this);\n    };\n    NumberEditorView.prototype.serializeValue = function () {\n        return parseFloat(this.getValue()) || 0;\n    };\n    NumberEditorView.prototype.loadValue = function (item) {\n        NumberEditorView.__super__.loadValue.call(this, item);\n        this.inputEl.defaultValue = this.defaultValue;\n        return this.inputEl.select();\n    };\n    NumberEditorView.prototype.validateValue = function (value) {\n        if (isNaN(value)) {\n            return {\n                valid: false,\n                msg: 'Please enter a valid number'\n            };\n        } else {\n            return NumberEditorView.__super__.validateValue.call(this, value);\n        }\n    };\n    return NumberEditorView;\n}(exports.CellEditorView);\nexports.NumberEditor = function (superClass) {\n    extend1(NumberEditor, superClass);\n    function NumberEditor() {\n        return NumberEditor.__super__.constructor.apply(this, arguments);\n    }\n    NumberEditor.prototype.type = 'NumberEditor';\n    NumberEditor.prototype.default_view = exports.NumberEditorView;\n    NumberEditor.define({\n        step: [\n            p.Number,\n            0.01\n        ]\n    });\n    return NumberEditor;\n}(exports.CellEditor);\nexports.TimeEditorView = function (superClass) {\n    extend1(TimeEditorView, superClass);\n    function TimeEditorView() {\n        return TimeEditorView.__super__.constructor.apply(this, arguments);\n    }\n    return TimeEditorView;\n}(exports.CellEditorView);\nexports.TimeEditor = function (superClass) {\n    extend1(TimeEditor, superClass);\n    function TimeEditor() {\n        return TimeEditor.__super__.constructor.apply(this, arguments);\n    }\n    TimeEditor.prototype.type = 'TimeEditor';\n    TimeEditor.prototype.default_view = exports.TimeEditorView;\n    return TimeEditor;\n}(exports.CellEditor);\nexports.DateEditorView = function (superClass) {\n    extend1(DateEditorView, superClass);\n    function DateEditorView() {\n        return DateEditorView.__super__.constructor.apply(this, arguments);\n    }\n    DateEditorView.prototype.emptyValue = new Date();\n    DateEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\n    DateEditorView.prototype.renderEditor = function () {\n        this.calendarOpen = false;\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    DateEditorView.prototype.destroy = function () {\n        return DateEditorView.__super__.destroy.call(this);\n    };\n    DateEditorView.prototype.show = function () {\n        return DateEditorView.__super__.show.call(this);\n    };\n    DateEditorView.prototype.hide = function () {\n        return DateEditorView.__super__.hide.call(this);\n    };\n    DateEditorView.prototype.position = function (position) {\n        return DateEditorView.__super__.position.call(this);\n    };\n    DateEditorView.prototype.getValue = function () {\n    };\n    DateEditorView.prototype.setValue = function (val) {\n    };\n    return DateEditorView;\n}(exports.CellEditorView);\nexports.DateEditor = function (superClass) {\n    extend1(DateEditor, superClass);\n    function DateEditor() {\n        return DateEditor.__super__.constructor.apply(this, arguments);\n    }\n    DateEditor.prototype.type = 'DateEditor';\n    DateEditor.prototype.default_view = exports.DateEditorView;\n    return DateEditor;\n}(exports.CellEditor);    \n},\n403: /* models/widgets/tables/cell_formatters */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar extend1 = function (child, parent) {\n        for (var key in parent) {\n            if (hasProp.call(parent, key))\n                child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\nvar Numbro = require(329    /* numbro */);\nvar compile_template = require(418    /* underscore.template */);\nvar tz = require(360    /* timezone */);\nvar p = require(14    /* core/properties */);\nvar dom_1 = require(5    /* core/dom */);\nvar object_1 = require(29    /* core/util/object */);\nvar types_1 = require(41    /* core/util/types */);\nvar model_1 = require(49    /* ../../../model */);\nexports.CellFormatter = function (superClass) {\n    extend1(CellFormatter, superClass);\n    function CellFormatter() {\n        return CellFormatter.__super__.constructor.apply(this, arguments);\n    }\n    CellFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        if (value == null) {\n            return '';\n        } else {\n            return (value + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n    };\n    return CellFormatter;\n}(model_1.Model);\nexports.StringFormatter = function (superClass) {\n    extend1(StringFormatter, superClass);\n    function StringFormatter() {\n        return StringFormatter.__super__.constructor.apply(this, arguments);\n    }\n    StringFormatter.prototype.type = 'StringFormatter';\n    StringFormatter.define({\n        font_style: [\n            p.FontStyle,\n            'normal'\n        ],\n        text_align: [\n            p.TextAlign,\n            'left'\n        ],\n        text_color: [p.Color]\n    });\n    StringFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var font_style, text, text_align, text_color;\n        font_style = this.font_style;\n        text_align = this.text_align;\n        text_color = this.text_color;\n        text = dom_1.span({}, value == null ? '' : '' + value);\n        switch (font_style) {\n        case 'bold':\n            text.style.fontWeight = 'bold';\n            break;\n        case 'italic':\n            text.style.fontStyle = 'italic';\n        }\n        if (text_align != null) {\n            text.style.textAlign = text_align;\n        }\n        if (text_color != null) {\n            text.style.color = text_color;\n        }\n        text = text.outerHTML;\n        return text;\n    };\n    return StringFormatter;\n}(exports.CellFormatter);\nexports.NumberFormatter = function (superClass) {\n    extend1(NumberFormatter, superClass);\n    function NumberFormatter() {\n        return NumberFormatter.__super__.constructor.apply(this, arguments);\n    }\n    NumberFormatter.prototype.type = 'NumberFormatter';\n    NumberFormatter.define({\n        format: [\n            p.String,\n            '0,0'\n        ],\n        language: [\n            p.String,\n            'en'\n        ],\n        rounding: [\n            p.String,\n            'round'\n        ]\n    });\n    NumberFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var format, language, rounding;\n        format = this.format;\n        language = this.language;\n        rounding = function () {\n            switch (this.rounding) {\n            case 'round':\n            case 'nearest':\n                return Math.round;\n            case 'floor':\n            case 'rounddown':\n                return Math.floor;\n            case 'ceil':\n            case 'roundup':\n                return Math.ceil;\n            }\n        }.call(this);\n        value = Numbro.format(value, format, language, rounding);\n        return NumberFormatter.__super__.doFormat.call(this, row, cell, value, columnDef, dataContext);\n    };\n    return NumberFormatter;\n}(exports.StringFormatter);\nexports.BooleanFormatter = function (superClass) {\n    extend1(BooleanFormatter, superClass);\n    function BooleanFormatter() {\n        return BooleanFormatter.__super__.constructor.apply(this, arguments);\n    }\n    BooleanFormatter.prototype.type = 'BooleanFormatter';\n    BooleanFormatter.define({\n        icon: [\n            p.String,\n            'check'\n        ]\n    });\n    BooleanFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        if (!!value) {\n            return dom_1.i({ 'class': this.icon }).outerHTML;\n        } else {\n            return '';\n        }\n    };\n    return BooleanFormatter;\n}(exports.CellFormatter);\nexports.DateFormatter = function (superClass) {\n    extend1(DateFormatter, superClass);\n    function DateFormatter() {\n        return DateFormatter.__super__.constructor.apply(this, arguments);\n    }\n    DateFormatter.prototype.type = 'DateFormatter';\n    DateFormatter.define({\n        format: [\n            p.String,\n            'ISO-8601'\n        ]\n    });\n    DateFormatter.prototype.getFormat = function () {\n        var fmt;\n        fmt = function () {\n            switch (this.format) {\n            case 'ATOM':\n            case 'W3C':\n            case 'RFC-3339':\n            case 'ISO-8601':\n                return '%Y-%m-%d';\n            case 'COOKIE':\n                return '%a, %d %b %Y';\n            case 'RFC-850':\n                return '%A, %d-%b-%y';\n            case 'RFC-1123':\n            case 'RFC-2822':\n                return '%a, %e %b %Y';\n            case 'RSS':\n            case 'RFC-822':\n            case 'RFC-1036':\n                return '%a, %e %b %y';\n            case 'TIMESTAMP':\n                return null;\n            default:\n                return '__CUSTOM__';\n            }\n        }.call(this);\n        if (fmt === '__CUSTOM__') {\n            return this.format;\n        } else {\n            return fmt;\n        }\n    };\n    DateFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var date;\n        value = types_1.isString(value) ? parseInt(value, 10) : value;\n        date = tz(value, this.getFormat());\n        return DateFormatter.__super__.doFormat.call(this, row, cell, date, columnDef, dataContext);\n    };\n    return DateFormatter;\n}(exports.CellFormatter);\nexports.HTMLTemplateFormatter = function (superClass) {\n    extend1(HTMLTemplateFormatter, superClass);\n    function HTMLTemplateFormatter() {\n        return HTMLTemplateFormatter.__super__.constructor.apply(this, arguments);\n    }\n    HTMLTemplateFormatter.prototype.type = 'HTMLTemplateFormatter';\n    HTMLTemplateFormatter.define({\n        template: [\n            p.String,\n            '<%= value %>'\n        ]\n    });\n    HTMLTemplateFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var compiled_template, template;\n        template = this.template;\n        if (value === null) {\n            return '';\n        } else {\n            dataContext = object_1.extend({}, dataContext, { value: value });\n            compiled_template = compile_template(template);\n            return compiled_template(dataContext);\n        }\n    };\n    return HTMLTemplateFormatter;\n}(exports.CellFormatter);    \n},\n404: /* models/widgets/tables/data_table */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar extend = function (child, parent) {\n        for (var key in parent) {\n            if (hasProp.call(parent, key))\n                child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\nvar slickgrid_1 = require(416    /* slickgrid */);\nvar slick_rowselectionmodel_1 = require(414    /* slickgrid/plugins/slick.rowselectionmodel */);\nvar slick_checkboxselectcolumn_1 = require(413    /* slickgrid/plugins/slick.checkboxselectcolumn */);\nvar hittest = require(9    /* core/hittest */);\nvar p = require(14    /* core/properties */);\nvar string_1 = require(36    /* core/util/string */);\nvar array_1 = require(21    /* core/util/array */);\nvar logging_1 = require(13    /* core/logging */);\nvar table_widget_1 = require(408    /* ./table_widget */);\nvar widget_1 = require(409    /* ../widget */);\nexports.DTINDEX_NAME = '__bkdt_internal_index__';\nexports.DataProvider = function () {\n    function DataProvider(source, view) {\n        this.source = source;\n        this.view = view;\n        if (exports.DTINDEX_NAME in this.source.data) {\n            throw new Error('special name ' + exports.DTINDEX_NAME + ' cannot be used as a data table column');\n        }\n        this.index = this.view.indices;\n    }\n    DataProvider.prototype.getLength = function () {\n        return this.index.length;\n    };\n    DataProvider.prototype.getItem = function (offset) {\n        var field, item, j, len, ref;\n        item = {};\n        ref = Object.keys(this.source.data);\n        for (j = 0, len = ref.length; j < len; j++) {\n            field = ref[j];\n            item[field] = this.source.data[field][this.index[offset]];\n        }\n        item[exports.DTINDEX_NAME] = this.index[offset];\n        return item;\n    };\n    DataProvider.prototype.setItem = function (offset, item) {\n        var field, value;\n        for (field in item) {\n            value = item[field];\n            if (field !== exports.DTINDEX_NAME) {\n                this.source.data[field][this.index[offset]] = value;\n            }\n        }\n        this._update_source_inplace();\n        return null;\n    };\n    DataProvider.prototype.getField = function (offset, field) {\n        if (field === exports.DTINDEX_NAME) {\n            return this.index[offset];\n        }\n        return this.source.data[field][this.index[offset]];\n    };\n    DataProvider.prototype.setField = function (offset, field, value) {\n        this.source.data[field][this.index[offset]] = value;\n        this._update_source_inplace();\n        return null;\n    };\n    DataProvider.prototype.getItemMetadata = function (index) {\n        return null;\n    };\n    DataProvider.prototype.getRecords = function () {\n        var i;\n        return function () {\n            var j, ref, results;\n            results = [];\n            for (i = j = 0, ref = this.getLength(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                results.push(this.getItem(i));\n            }\n            return results;\n        }.call(this);\n    };\n    DataProvider.prototype.sort = function (columns) {\n        var cols, column, old_index, records;\n        cols = function () {\n            var j, len, results;\n            results = [];\n            for (j = 0, len = columns.length; j < len; j++) {\n                column = columns[j];\n                results.push([\n                    column.sortCol.field,\n                    column.sortAsc ? 1 : -1\n                ]);\n            }\n            return results;\n        }();\n        if (cols.length === 0) {\n            cols = [[\n                    exports.DTINDEX_NAME,\n                    1\n                ]];\n        }\n        records = this.getRecords();\n        old_index = this.index.slice();\n        return this.index.sort(function (i1, i2) {\n            var field, j, len, ref, result, sign, value1, value2;\n            for (j = 0, len = cols.length; j < len; j++) {\n                ref = cols[j], field = ref[0], sign = ref[1];\n                value1 = records[old_index.indexOf(i1)][field];\n                value2 = records[old_index.indexOf(i2)][field];\n                result = value1 === value2 ? 0 : value1 > value2 ? sign : -sign;\n                if (result !== 0) {\n                    return result;\n                }\n            }\n            return 0;\n        });\n    };\n    DataProvider.prototype._update_source_inplace = function () {\n        this.source.properties.data.change.emit(this, this.source.attributes['data']);\n    };\n    return DataProvider;\n}();\nexports.DataTableView = function (superClass) {\n    extend(DataTableView, superClass);\n    function DataTableView() {\n        return DataTableView.__super__.constructor.apply(this, arguments);\n    }\n    DataTableView.prototype.className = 'bk-data-table';\n    DataTableView.prototype.initialize = function (options) {\n        DataTableView.__super__.initialize.call(this, options);\n        return this.in_selection_update = false;\n    };\n    DataTableView.prototype.connect_signals = function () {\n        DataTableView.__super__.connect_signals.call(this);\n        this.connect(this.model.change, function (_this) {\n            return function () {\n                return _this.render();\n            };\n        }(this));\n        this.connect(this.model.source.properties.data.change, function (_this) {\n            return function () {\n                return _this.updateGrid();\n            };\n        }(this));\n        this.connect(this.model.source.streaming, function (_this) {\n            return function () {\n                return _this.updateGrid();\n            };\n        }(this));\n        this.connect(this.model.source.patching, function (_this) {\n            return function () {\n                return _this.updateGrid();\n            };\n        }(this));\n        return this.connect(this.model.source.change, function (_this) {\n            return function () {\n                return _this.updateSelection();\n            };\n        }(this));\n    };\n    DataTableView.prototype.updateGrid = function () {\n        this.model.view.compute_indices();\n        this.data.constructor(this.model.source, this.model.view);\n        this.grid.invalidate();\n        this.grid.render();\n        this.model.source.data = this.model.source.data;\n        return this.model.source.change.emit();\n    };\n    DataTableView.prototype.updateSelection = function () {\n        var cur_grid_range, min_index, permuted_indices, selected, selected_indices, x;\n        if (this.in_selection_update) {\n            return;\n        }\n        selected = this.model.source.selected;\n        selected_indices = selected['1d'].indices;\n        permuted_indices = function () {\n            var j, len, results;\n            results = [];\n            for (j = 0, len = selected_indices.length; j < len; j++) {\n                x = selected_indices[j];\n                results.push(this.data.index.indexOf(x));\n            }\n            return results;\n        }.call(this);\n        this.in_selection_update = true;\n        this.grid.setSelectedRows(permuted_indices);\n        this.in_selection_update = false;\n        cur_grid_range = this.grid.getViewport();\n        if (this.model.scroll_to_selection && !array_1.any(permuted_indices, function (i) {\n                return cur_grid_range.top <= i && i <= cur_grid_range.bottom;\n            })) {\n            min_index = Math.max(0, Math.min.apply(null, permuted_indices) - 1);\n            return this.grid.scrollRowToTop(min_index);\n        }\n    };\n    DataTableView.prototype.newIndexColumn = function () {\n        return {\n            id: string_1.uniqueId(),\n            name: '#',\n            field: exports.DTINDEX_NAME,\n            width: 40,\n            behavior: 'select',\n            cannotTriggerInsert: true,\n            resizable: false,\n            selectable: false,\n            sortable: true,\n            cssClass: 'bk-cell-index'\n        };\n    };\n    DataTableView.prototype.render = function () {\n        var checkboxSelector, column, columns, options, ref, reorderable;\n        columns = function () {\n            var j, len, ref, results;\n            ref = this.model.columns;\n            results = [];\n            for (j = 0, len = ref.length; j < len; j++) {\n                column = ref[j];\n                results.push(column.toColumn());\n            }\n            return results;\n        }.call(this);\n        if (this.model.selectable === 'checkbox') {\n            checkboxSelector = new slick_checkboxselectcolumn_1.CheckboxSelectColumn({ cssClass: 'bk-cell-select' });\n            columns.unshift(checkboxSelector.getColumnDefinition());\n        }\n        if (this.model.row_headers) {\n            columns.unshift(this.newIndexColumn());\n        }\n        reorderable = this.model.reorderable;\n        if (reorderable && (typeof $ !== 'undefined' && $ !== null ? (ref = $.fn) != null ? ref.sortable : void 0 : void 0) == null) {\n            logging_1.logger.warn('jquery-ui is required to enable DataTable.reorderable');\n            reorderable = false;\n        }\n        options = {\n            enableCellNavigation: this.model.selectable !== false,\n            enableColumnReorder: reorderable,\n            forceFitColumns: this.model.fit_columns,\n            autoHeight: this.model.height === 'auto',\n            multiColumnSort: this.model.sortable,\n            editable: this.model.editable,\n            autoEdit: false\n        };\n        if (this.model.width != null) {\n            this.el.style.width = this.model.width + 'px';\n        } else {\n            this.el.style.width = this.model.default_width + 'px';\n        }\n        if (this.model.height != null && this.model.height !== 'auto') {\n            this.el.style.height = this.model.height + 'px';\n        }\n        this.data = new exports.DataProvider(this.model.source, this.model.view);\n        this.grid = new slickgrid_1.Grid(this.el, this.data, columns, options);\n        this.grid.onSort.subscribe(function (_this) {\n            return function (event, args) {\n                columns = args.sortCols;\n                _this.data.sort(columns);\n                _this.grid.invalidate();\n                _this.updateSelection();\n                return _this.grid.render();\n            };\n        }(this));\n        if (this.model.selectable !== false) {\n            this.grid.setSelectionModel(new slick_rowselectionmodel_1.RowSelectionModel({ selectActiveRow: checkboxSelector == null }));\n            if (checkboxSelector != null) {\n                this.grid.registerPlugin(checkboxSelector);\n            }\n            this.grid.onSelectedRowsChanged.subscribe(function (_this) {\n                return function (event, args) {\n                    var i, selected;\n                    if (_this.in_selection_update) {\n                        return;\n                    }\n                    selected = hittest.create_hit_test_result();\n                    selected['1d'].indices = function () {\n                        var j, len, ref1, results;\n                        ref1 = args.rows;\n                        results = [];\n                        for (j = 0, len = ref1.length; j < len; j++) {\n                            i = ref1[j];\n                            results.push(this.data.index[i]);\n                        }\n                        return results;\n                    }.call(_this);\n                    return _this.model.source.selected = selected;\n                };\n            }(this));\n            this.updateSelection();\n        }\n        return this;\n    };\n    return DataTableView;\n}(widget_1.WidgetView);\nexports.DataTable = function (superClass) {\n    extend(DataTable, superClass);\n    function DataTable() {\n        return DataTable.__super__.constructor.apply(this, arguments);\n    }\n    DataTable.prototype.type = 'DataTable';\n    DataTable.prototype.default_view = exports.DataTableView;\n    DataTable.define({\n        columns: [\n            p.Array,\n            []\n        ],\n        fit_columns: [\n            p.Bool,\n            true\n        ],\n        sortable: [\n            p.Bool,\n            true\n        ],\n        reorderable: [\n            p.Bool,\n            true\n        ],\n        editable: [\n            p.Bool,\n            false\n        ],\n        selectable: [\n            p.Bool,\n            true\n        ],\n        row_headers: [\n            p.Bool,\n            true\n        ],\n        scroll_to_selection: [\n            p.Bool,\n            true\n        ]\n    });\n    DataTable.override({ height: 400 });\n    DataTable.internal({\n        default_width: [\n            p.Number,\n            600\n        ]\n    });\n    return DataTable;\n}(table_widget_1.TableWidget);    \n},\n405: /* models/widgets/tables/index */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(361    /* tslib */);\ntslib_1.__exportStar(require(402    /* ./cell_editors */), exports);\ntslib_1.__exportStar(require(403    /* ./cell_formatters */), exports);\nvar data_table_1 = require(404    /* ./data_table */);\nexports.DataTable = data_table_1.DataTable;\nvar table_column_1 = require(407    /* ./table_column */);\nexports.TableColumn = table_column_1.TableColumn;\nvar table_widget_1 = require(408    /* ./table_widget */);\nexports.TableWidget = table_widget_1.TableWidget;    \n},\n406: /* models/widgets/tables/main */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar Tables = require(405    /* ./index */);\nexports.Tables = Tables;\nvar base_1 = require(0    /* ../../../base */);\nbase_1.register_models(Tables);    \n},\n407: /* models/widgets/tables/table_column */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar extend = function (child, parent) {\n        for (var key in parent) {\n            if (hasProp.call(parent, key))\n                child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\nvar cell_formatters_1 = require(403    /* ./cell_formatters */);\nvar cell_editors_1 = require(402    /* ./cell_editors */);\nvar p = require(14    /* core/properties */);\nvar string_1 = require(36    /* core/util/string */);\nvar model_1 = require(49    /* ../../../model */);\nexports.TableColumn = function (superClass) {\n    extend(TableColumn, superClass);\n    function TableColumn() {\n        return TableColumn.__super__.constructor.apply(this, arguments);\n    }\n    TableColumn.prototype.type = 'TableColumn';\n    TableColumn.prototype.default_view = null;\n    TableColumn.define({\n        field: [p.String],\n        title: [p.String],\n        width: [\n            p.Number,\n            300\n        ],\n        formatter: [\n            p.Instance,\n            function () {\n                return new cell_formatters_1.StringFormatter();\n            }\n        ],\n        editor: [\n            p.Instance,\n            function () {\n                return new cell_editors_1.StringEditor();\n            }\n        ],\n        sortable: [\n            p.Bool,\n            true\n        ],\n        default_sort: [\n            p.String,\n            'ascending'\n        ]\n    });\n    TableColumn.prototype.toColumn = function () {\n        var ref;\n        return {\n            id: string_1.uniqueId(),\n            field: this.field,\n            name: this.title,\n            width: this.width,\n            formatter: (ref = this.formatter) != null ? ref.doFormat.bind(this.formatter) : void 0,\n            editor: this.editor.default_view,\n            sortable: this.sortable,\n            defaultSortAsc: this.default_sort === 'ascending'\n        };\n    };\n    return TableColumn;\n}(model_1.Model);    \n},\n408: /* models/widgets/tables/table_widget */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar extend = function (child, parent) {\n        for (var key in parent) {\n            if (hasProp.call(parent, key))\n                child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\nvar widget_1 = require(409    /* ../widget */);\nvar cds_view_1 = require(169    /* ../../sources/cds_view */);\nvar p = require(14    /* core/properties */);\nexports.TableWidget = function (superClass) {\n    extend(TableWidget, superClass);\n    function TableWidget() {\n        return TableWidget.__super__.constructor.apply(this, arguments);\n    }\n    TableWidget.prototype.type = 'TableWidget';\n    TableWidget.prototype.initialize = function (options) {\n        TableWidget.__super__.initialize.call(this, options);\n        if (this.view.source == null) {\n            this.view.source = this.source;\n            return this.view.compute_indices();\n        }\n    };\n    TableWidget.define({\n        source: [p.Instance],\n        view: [\n            p.Instance,\n            function () {\n                return new cds_view_1.CDSView();\n            }\n        ]\n    });\n    return TableWidget;\n}(widget_1.Widget);    \n},\n409: /* models/widgets/widget */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar extend = function (child, parent) {\n        for (var key in parent) {\n            if (hasProp.call(parent, key))\n                child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\nvar layout_dom_1 = require(136    /* ../layouts/layout_dom */);\nexports.WidgetView = function (superClass) {\n    extend(WidgetView, superClass);\n    function WidgetView() {\n        return WidgetView.__super__.constructor.apply(this, arguments);\n    }\n    WidgetView.prototype.className = 'bk-widget';\n    WidgetView.prototype.render = function () {\n        this._render_classes();\n        if (this.model.height != null) {\n            this.el.style.height = this.model.height + 'px';\n        }\n        if (this.model.width != null) {\n            return this.el.style.width = this.model.width + 'px';\n        }\n    };\n    return WidgetView;\n}(layout_dom_1.LayoutDOMView);\nexports.Widget = function (superClass) {\n    extend(Widget, superClass);\n    function Widget() {\n        return Widget.__super__.constructor.apply(this, arguments);\n    }\n    Widget.prototype.type = 'Widget';\n    Widget.prototype.default_view = exports.WidgetView;\n    return Widget;\n}(layout_dom_1.LayoutDOM);    \n},\n410: /* jquery/dist/jquery */ function(require, module, exports) {\n/*!\n * jQuery JavaScript Library v3.2.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2017-03-20T18:59Z\n */\n(function (global, factory) {\n    'use strict';\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        // For CommonJS and CommonJS-like environments where a proper `window`\n        // is present, execute the factory and get jQuery.\n        // For environments that do not have a `window` with a `document`\n        // (such as Node.js), expose a factory as module.exports.\n        // This accentuates the need for the creation of a real `window`.\n        // e.g. var jQuery = require(\"jquery\")(window);\n        // See ticket #14549 for more info.\n        module.exports = global.document ? factory(global, true) : function (w) {\n            if (!w.document) {\n                throw new Error('jQuery requires a window with a document');\n            }\n            return factory(w);\n        };\n    } else {\n        factory(global);\n    }    // Pass this if window is not defined yet\n}(typeof window !== 'undefined' ? window : this, function (window, noGlobal) {\n    // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n    // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n    // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n    // enough that all such attempts are guarded in a try block.\n    'use strict';\n    var arr = [];\n    var document = window.document;\n    var getProto = Object.getPrototypeOf;\n    var slice = arr.slice;\n    var concat = arr.concat;\n    var push = arr.push;\n    var indexOf = arr.indexOf;\n    var class2type = {};\n    var toString = class2type.toString;\n    var hasOwn = class2type.hasOwnProperty;\n    var fnToString = hasOwn.toString;\n    var ObjectFunctionString = fnToString.call(Object);\n    var support = {};\n    function DOMEval(code, doc) {\n        doc = doc || document;\n        var script = doc.createElement('script');\n        script.text = code;\n        doc.head.appendChild(script).parentNode.removeChild(script);\n    }\n    /* global Symbol */\n    // Defining this global in .eslintrc.json would create a danger of using the global\n    // unguarded in another place, it seems safer to define global only for this module\n    var version = '3.2.1',\n        // Define a local copy of jQuery\n        jQuery = function (selector, context) {\n            // The jQuery object is actually just the init constructor 'enhanced'\n            // Need init if jQuery is called (just allow error to be thrown if not included)\n            return new jQuery.fn.init(selector, context);\n        },\n        // Support: Android <=4.0 only\n        // Make sure we trim BOM and NBSP\n        rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n        // Matches dashed string for camelizing\n        rmsPrefix = /^-ms-/, rdashAlpha = /-([a-z])/g,\n        // Used by jQuery.camelCase as callback to replace()\n        fcamelCase = function (all, letter) {\n            return letter.toUpperCase();\n        };\n    jQuery.fn = jQuery.prototype = {\n        // The current version of jQuery being used\n        jquery: version,\n        constructor: jQuery,\n        // The default length of a jQuery object is 0\n        length: 0,\n        toArray: function () {\n            return slice.call(this);\n        },\n        // Get the Nth element in the matched element set OR\n        // Get the whole matched element set as a clean array\n        get: function (num) {\n            // Return all the elements in a clean array\n            if (num == null) {\n                return slice.call(this);\n            }\n            // Return just the one element from the set\n            return num < 0 ? this[num + this.length] : this[num];\n        },\n        // Take an array of elements and push it onto the stack\n        // (returning the new matched element set)\n        pushStack: function (elems) {\n            // Build a new jQuery matched element set\n            var ret = jQuery.merge(this.constructor(), elems);\n            // Add the old object onto the stack (as a reference)\n            ret.prevObject = this;\n            // Return the newly-formed element set\n            return ret;\n        },\n        // Execute a callback for every element in the matched set.\n        each: function (callback) {\n            return jQuery.each(this, callback);\n        },\n        map: function (callback) {\n            return this.pushStack(jQuery.map(this, function (elem, i) {\n                return callback.call(elem, i, elem);\n            }));\n        },\n        slice: function () {\n            return this.pushStack(slice.apply(this, arguments));\n        },\n        first: function () {\n            return this.eq(0);\n        },\n        last: function () {\n            return this.eq(-1);\n        },\n        eq: function (i) {\n            var len = this.length, j = +i + (i < 0 ? len : 0);\n            return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n        },\n        end: function () {\n            return this.prevObject || this.constructor();\n        },\n        // For internal use only.\n        // Behaves like an Array's method, not like a jQuery method.\n        push: push,\n        sort: arr.sort,\n        splice: arr.splice\n    };\n    jQuery.extend = jQuery.fn.extend = function () {\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === 'boolean') {\n            deep = target;\n            // Skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== 'object' && !jQuery.isFunction(target)) {\n            target = {};\n        }\n        // Extend jQuery itself if only one argument is passed\n        if (i === length) {\n            target = this;\n            i--;\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) != null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && Array.isArray(src) ? src : [];\n                        } else {\n                            clone = src && jQuery.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = jQuery.extend(deep, clone, copy);    // Don't bring in undefined values\n                    } else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    jQuery.extend({\n        // Unique for each copy of jQuery on the page\n        expando: 'jQuery' + (version + Math.random()).replace(/\\D/g, ''),\n        // Assume jQuery is ready without the ready module\n        isReady: true,\n        error: function (msg) {\n            throw new Error(msg);\n        },\n        noop: function () {\n        },\n        isFunction: function (obj) {\n            return jQuery.type(obj) === 'function';\n        },\n        isWindow: function (obj) {\n            return obj != null && obj === obj.window;\n        },\n        isNumeric: function (obj) {\n            // As of jQuery 3.0, isNumeric is limited to\n            // strings and numbers (primitives or objects)\n            // that can be coerced to finite numbers (gh-2662)\n            var type = jQuery.type(obj);\n            return (type === 'number' || type === 'string') && // parseFloat NaNs numeric-cast false positives (\"\")\n            // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n            // subtraction forces infinities to NaN\n            !isNaN(obj - parseFloat(obj));\n        },\n        isPlainObject: function (obj) {\n            var proto, Ctor;\n            // Detect obvious negatives\n            // Use toString instead of jQuery.type to catch host objects\n            if (!obj || toString.call(obj) !== '[object Object]') {\n                return false;\n            }\n            proto = getProto(obj);\n            // Objects with no prototype (e.g., `Object.create( null )`) are plain\n            if (!proto) {\n                return true;\n            }\n            // Objects with prototype are plain iff they were constructed by a global Object function\n            Ctor = hasOwn.call(proto, 'constructor') && proto.constructor;\n            return typeof Ctor === 'function' && fnToString.call(Ctor) === ObjectFunctionString;\n        },\n        isEmptyObject: function (obj) {\n            /* eslint-disable no-unused-vars */\n            // See https://github.com/eslint/eslint/issues/6125\n            var name;\n            for (name in obj) {\n                return false;\n            }\n            return true;\n        },\n        type: function (obj) {\n            if (obj == null) {\n                return obj + '';\n            }\n            // Support: Android <=2.3 only (functionish RegExp)\n            return typeof obj === 'object' || typeof obj === 'function' ? class2type[toString.call(obj)] || 'object' : typeof obj;\n        },\n        // Evaluates a script in a global context\n        globalEval: function (code) {\n            DOMEval(code);\n        },\n        // Convert dashed to camelCase; used by the css and data modules\n        // Support: IE <=9 - 11, Edge 12 - 13\n        // Microsoft forgot to hump their vendor prefix (#9572)\n        camelCase: function (string) {\n            return string.replace(rmsPrefix, 'ms-').replace(rdashAlpha, fcamelCase);\n        },\n        each: function (obj, callback) {\n            var length, i = 0;\n            if (isArrayLike(obj)) {\n                length = obj.length;\n                for (; i < length; i++) {\n                    if (callback.call(obj[i], i, obj[i]) === false) {\n                        break;\n                    }\n                }\n            } else {\n                for (i in obj) {\n                    if (callback.call(obj[i], i, obj[i]) === false) {\n                        break;\n                    }\n                }\n            }\n            return obj;\n        },\n        // Support: Android <=4.0 only\n        trim: function (text) {\n            return text == null ? '' : (text + '').replace(rtrim, '');\n        },\n        // results is for internal usage only\n        makeArray: function (arr, results) {\n            var ret = results || [];\n            if (arr != null) {\n                if (isArrayLike(Object(arr))) {\n                    jQuery.merge(ret, typeof arr === 'string' ? [arr] : arr);\n                } else {\n                    push.call(ret, arr);\n                }\n            }\n            return ret;\n        },\n        inArray: function (elem, arr, i) {\n            return arr == null ? -1 : indexOf.call(arr, elem, i);\n        },\n        // Support: Android <=4.0 only, PhantomJS 1 only\n        // push.apply(_, arraylike) throws on ancient WebKit\n        merge: function (first, second) {\n            var len = +second.length, j = 0, i = first.length;\n            for (; j < len; j++) {\n                first[i++] = second[j];\n            }\n            first.length = i;\n            return first;\n        },\n        grep: function (elems, callback, invert) {\n            var callbackInverse, matches = [], i = 0, length = elems.length, callbackExpect = !invert;\n            // Go through the array, only saving the items\n            // that pass the validator function\n            for (; i < length; i++) {\n                callbackInverse = !callback(elems[i], i);\n                if (callbackInverse !== callbackExpect) {\n                    matches.push(elems[i]);\n                }\n            }\n            return matches;\n        },\n        // arg is for internal usage only\n        map: function (elems, callback, arg) {\n            var length, value, i = 0, ret = [];\n            // Go through the array, translating each of the items to their new values\n            if (isArrayLike(elems)) {\n                length = elems.length;\n                for (; i < length; i++) {\n                    value = callback(elems[i], i, arg);\n                    if (value != null) {\n                        ret.push(value);\n                    }\n                }    // Go through every key on the object,\n            } else {\n                for (i in elems) {\n                    value = callback(elems[i], i, arg);\n                    if (value != null) {\n                        ret.push(value);\n                    }\n                }\n            }\n            // Flatten any nested arrays\n            return concat.apply([], ret);\n        },\n        // A global GUID counter for objects\n        guid: 1,\n        // Bind a function to a context, optionally partially applying any\n        // arguments.\n        proxy: function (fn, context) {\n            var tmp, args, proxy;\n            if (typeof context === 'string') {\n                tmp = fn[context];\n                context = fn;\n                fn = tmp;\n            }\n            // Quick check to determine if target is callable, in the spec\n            // this throws a TypeError, but we will just return undefined.\n            if (!jQuery.isFunction(fn)) {\n                return undefined;\n            }\n            // Simulated bind\n            args = slice.call(arguments, 2);\n            proxy = function () {\n                return fn.apply(context || this, args.concat(slice.call(arguments)));\n            };\n            // Set the guid of unique handler to the same of original handler, so it can be removed\n            proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n            return proxy;\n        },\n        now: Date.now,\n        // jQuery.support is not used in Core but other projects attach their\n        // properties to it so it needs to exist.\n        support: support\n    });\n    if (typeof Symbol === 'function') {\n        jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n    }\n    // Populate the class2type map\n    jQuery.each('Boolean Number String Function Array Date RegExp Object Error Symbol'.split(' '), function (i, name) {\n        class2type['[object ' + name + ']'] = name.toLowerCase();\n    });\n    function isArrayLike(obj) {\n        // Support: real iOS 8.2 only (not reproducible in simulator)\n        // `in` check used to prevent JIT error (gh-2145)\n        // hasOwn isn't used here due to false negatives\n        // regarding Nodelist length in IE\n        var length = !!obj && 'length' in obj && obj.length, type = jQuery.type(obj);\n        if (type === 'function' || jQuery.isWindow(obj)) {\n            return false;\n        }\n        return type === 'array' || length === 0 || typeof length === 'number' && length > 0 && length - 1 in obj;\n    }\n    var Sizzle = /*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n    function (window) {\n        var i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate,\n            // Local document vars\n            setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains,\n            // Instance-specific data\n            expando = 'sizzle' + 1 * new Date(), preferredDoc = window.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), sortOrder = function (a, b) {\n                if (a === b) {\n                    hasDuplicate = true;\n                }\n                return 0;\n            },\n            // Instance methods\n            hasOwn = {}.hasOwnProperty, arr = [], pop = arr.pop, push_native = arr.push, push = arr.push, slice = arr.slice,\n            // Use a stripped-down indexOf as it's faster than native\n            // https://jsperf.com/thor-indexof-vs-for/5\n            indexOf = function (list, elem) {\n                var i = 0, len = list.length;\n                for (; i < len; i++) {\n                    if (list[i] === elem) {\n                        return i;\n                    }\n                }\n                return -1;\n            }, booleans = 'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped',\n            // Regular expressions\n            // http://www.w3.org/TR/css3-selectors/#whitespace\n            whitespace = '[\\\\x20\\\\t\\\\r\\\\n\\\\f]',\n            // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n            identifier = '(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+',\n            // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n            attributes = '\\\\[' + whitespace + '*(' + identifier + ')(?:' + whitespace + // Operator (capture 2)\n            '*([*^$|!~]?=)' + whitespace + // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n            '*(?:\\'((?:\\\\\\\\.|[^\\\\\\\\\\'])*)\\'|\"((?:\\\\\\\\.|[^\\\\\\\\\"])*)\"|(' + identifier + '))|)' + whitespace + '*\\\\]', pseudos = ':(' + identifier + ')(?:\\\\((' + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n            // 1. quoted (capture 3; capture 4 or capture 5)\n            '(\\'((?:\\\\\\\\.|[^\\\\\\\\\\'])*)\\'|\"((?:\\\\\\\\.|[^\\\\\\\\\"])*)\")|' + // 2. simple (capture 6)\n            '((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|' + attributes + ')*)|' + // 3. anything else (capture 2)\n            '.*' + ')\\\\)|)',\n            // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n            rwhitespace = new RegExp(whitespace + '+', 'g'), rtrim = new RegExp('^' + whitespace + '+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)' + whitespace + '+$', 'g'), rcomma = new RegExp('^' + whitespace + '*,' + whitespace + '*'), rcombinators = new RegExp('^' + whitespace + '*([>+~]|' + whitespace + ')' + whitespace + '*'), rattributeQuotes = new RegExp('=' + whitespace + '*([^\\\\]\\'\"]*?)' + whitespace + '*\\\\]', 'g'), rpseudo = new RegExp(pseudos), ridentifier = new RegExp('^' + identifier + '$'), matchExpr = {\n                'ID': new RegExp('^#(' + identifier + ')'),\n                'CLASS': new RegExp('^\\\\.(' + identifier + ')'),\n                'TAG': new RegExp('^(' + identifier + '|[*])'),\n                'ATTR': new RegExp('^' + attributes),\n                'PSEUDO': new RegExp('^' + pseudos),\n                'CHILD': new RegExp('^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(' + whitespace + '*(even|odd|(([+-]|)(\\\\d*)n|)' + whitespace + '*(?:([+-]|)' + whitespace + '*(\\\\d+)|))' + whitespace + '*\\\\)|)', 'i'),\n                'bool': new RegExp('^(?:' + booleans + ')$', 'i'),\n                // For use in libraries implementing .is()\n                // We use this for POS matching in `select`\n                'needsContext': new RegExp('^' + whitespace + '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(' + whitespace + '*((?:-\\\\d)?\\\\d*)' + whitespace + '*\\\\)|)(?=[^-]|$)', 'i')\n            }, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\\d$/i, rnative = /^[^{]+\\{\\s*\\[native \\w/,\n            // Easily-parseable/retrievable ID or TAG or CLASS selectors\n            rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/, rsibling = /[+~]/,\n            // CSS escapes\n            // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n            runescape = new RegExp('\\\\\\\\([\\\\da-f]{1,6}' + whitespace + '?|(' + whitespace + ')|.)', 'ig'), funescape = function (_, escaped, escapedWhitespace) {\n                var high = '0x' + escaped - 65536;\n                // NaN means non-codepoint\n                // Support: Firefox<24\n                // Workaround erroneous numeric interpretation of +\"0x\"\n                return high !== high || escapedWhitespace ? escaped : high < 0 ? // BMP codepoint\n                String.fromCharCode(high + 65536) : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);\n            },\n            // CSS string/identifier serialization\n            // https://drafts.csswg.org/cssom/#common-serializing-idioms\n            rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g, fcssescape = function (ch, asCodePoint) {\n                if (asCodePoint) {\n                    // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n                    if (ch === '\\0') {\n                        return '\\uFFFD';\n                    }\n                    // Control characters and (dependent upon position) numbers get escaped as code points\n                    return ch.slice(0, -1) + '\\\\' + ch.charCodeAt(ch.length - 1).toString(16) + ' ';\n                }\n                // Other potentially-special ASCII characters get backslash-escaped\n                return '\\\\' + ch;\n            },\n            // Used for iframes\n            // See setDocument()\n            // Removing the function wrapper causes a \"Permission Denied\"\n            // error in IE\n            unloadHandler = function () {\n                setDocument();\n            }, disabledAncestor = addCombinator(function (elem) {\n                return elem.disabled === true && ('form' in elem || 'label' in elem);\n            }, {\n                dir: 'parentNode',\n                next: 'legend'\n            });\n        // Optimize for push.apply( _, NodeList )\n        try {\n            push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes);\n            // Support: Android<4.0\n            // Detect silently failing push.apply\n            arr[preferredDoc.childNodes.length].nodeType;\n        } catch (e) {\n            push = {\n                apply: arr.length ? // Leverage slice if possible\n                function (target, els) {\n                    push_native.apply(target, slice.call(els));\n                } : // Support: IE<9\n                // Otherwise append directly\n                function (target, els) {\n                    var j = target.length, i = 0;\n                    // Can't trust NodeList.length\n                    while (target[j++] = els[i++]) {\n                    }\n                    target.length = j - 1;\n                }\n            };\n        }\n        function Sizzle(selector, context, results, seed) {\n            var m, i, elem, nid, match, groups, newSelector, newContext = context && context.ownerDocument,\n                // nodeType defaults to 9, since context defaults to document\n                nodeType = context ? context.nodeType : 9;\n            results = results || [];\n            // Return early from calls with invalid selector or context\n            if (typeof selector !== 'string' || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n                return results;\n            }\n            // Try to shortcut find operations (as opposed to filters) in HTML documents\n            if (!seed) {\n                if ((context ? context.ownerDocument || context : preferredDoc) !== document) {\n                    setDocument(context);\n                }\n                context = context || document;\n                if (documentIsHTML) {\n                    // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n                    // (excepting DocumentFragment context, where the methods don't exist)\n                    if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n                        // ID selector\n                        if (m = match[1]) {\n                            // Document context\n                            if (nodeType === 9) {\n                                if (elem = context.getElementById(m)) {\n                                    // Support: IE, Opera, Webkit\n                                    // TODO: identify versions\n                                    // getElementById can match elements by name instead of ID\n                                    if (elem.id === m) {\n                                        results.push(elem);\n                                        return results;\n                                    }\n                                } else {\n                                    return results;\n                                }    // Element context\n                            } else {\n                                // Support: IE, Opera, Webkit\n                                // TODO: identify versions\n                                // getElementById can match elements by name instead of ID\n                                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                                    results.push(elem);\n                                    return results;\n                                }\n                            }    // Type selector\n                        } else if (match[2]) {\n                            push.apply(results, context.getElementsByTagName(selector));\n                            return results;    // Class selector\n                        } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n                            push.apply(results, context.getElementsByClassName(m));\n                            return results;\n                        }\n                    }\n                    // Take advantage of querySelectorAll\n                    if (support.qsa && !compilerCache[selector + ' '] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n                        if (nodeType !== 1) {\n                            newContext = context;\n                            newSelector = selector;    // qSA looks outside Element context, which is not what we want\n                                                       // Thanks to Andrew Dupont for this workaround technique\n                                                       // Support: IE <=8\n                                                       // Exclude object elements\n                        } else if (context.nodeName.toLowerCase() !== 'object') {\n                            // Capture the context ID, setting it first if necessary\n                            if (nid = context.getAttribute('id')) {\n                                nid = nid.replace(rcssescape, fcssescape);\n                            } else {\n                                context.setAttribute('id', nid = expando);\n                            }\n                            // Prefix every selector in the list\n                            groups = tokenize(selector);\n                            i = groups.length;\n                            while (i--) {\n                                groups[i] = '#' + nid + ' ' + toSelector(groups[i]);\n                            }\n                            newSelector = groups.join(',');\n                            // Expand context for sibling selectors\n                            newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n                        }\n                        if (newSelector) {\n                            try {\n                                push.apply(results, newContext.querySelectorAll(newSelector));\n                                return results;\n                            } catch (qsaError) {\n                            } finally {\n                                if (nid === expando) {\n                                    context.removeAttribute('id');\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            // All others\n            return select(selector.replace(rtrim, '$1'), context, results, seed);\n        }\n        /**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\n        function createCache() {\n            var keys = [];\n            function cache(key, value) {\n                // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n                if (keys.push(key + ' ') > Expr.cacheLength) {\n                    // Only keep the most recent entries\n                    delete cache[keys.shift()];\n                }\n                return cache[key + ' '] = value;\n            }\n            return cache;\n        }\n        /**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\n        function markFunction(fn) {\n            fn[expando] = true;\n            return fn;\n        }\n        /**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\n        function assert(fn) {\n            var el = document.createElement('fieldset');\n            try {\n                return !!fn(el);\n            } catch (e) {\n                return false;\n            } finally {\n                // Remove from its parent by default\n                if (el.parentNode) {\n                    el.parentNode.removeChild(el);\n                }\n                // release memory in IE\n                el = null;\n            }\n        }\n        /**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\n        function addHandle(attrs, handler) {\n            var arr = attrs.split('|'), i = arr.length;\n            while (i--) {\n                Expr.attrHandle[arr[i]] = handler;\n            }\n        }\n        /**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\n        function siblingCheck(a, b) {\n            var cur = b && a, diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex;\n            // Use IE sourceIndex if available on both nodes\n            if (diff) {\n                return diff;\n            }\n            // Check if b follows a\n            if (cur) {\n                while (cur = cur.nextSibling) {\n                    if (cur === b) {\n                        return -1;\n                    }\n                }\n            }\n            return a ? 1 : -1;\n        }\n        /**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\n        function createInputPseudo(type) {\n            return function (elem) {\n                var name = elem.nodeName.toLowerCase();\n                return name === 'input' && elem.type === type;\n            };\n        }\n        /**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\n        function createButtonPseudo(type) {\n            return function (elem) {\n                var name = elem.nodeName.toLowerCase();\n                return (name === 'input' || name === 'button') && elem.type === type;\n            };\n        }\n        /**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\n        function createDisabledPseudo(disabled) {\n            // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n            return function (elem) {\n                // Only certain elements can match :enabled or :disabled\n                // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n                // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n                if ('form' in elem) {\n                    // Check for inherited disabledness on relevant non-disabled elements:\n                    // * listed form-associated elements in a disabled fieldset\n                    //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n                    //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n                    // * option elements in a disabled optgroup\n                    //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n                    // All such elements have a \"form\" property.\n                    if (elem.parentNode && elem.disabled === false) {\n                        // Option elements defer to a parent optgroup if present\n                        if ('label' in elem) {\n                            if ('label' in elem.parentNode) {\n                                return elem.parentNode.disabled === disabled;\n                            } else {\n                                return elem.disabled === disabled;\n                            }\n                        }\n                        // Support: IE 6 - 11\n                        // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n                        return elem.isDisabled === disabled || // Where there is no isDisabled, check manually\n                        /* jshint -W018 */\n                        elem.isDisabled !== !disabled && disabledAncestor(elem) === disabled;\n                    }\n                    return elem.disabled === disabled;    // Try to winnow out elements that can't be disabled before trusting the disabled property.\n                                                          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n                                                          // even exist on them, let alone have a boolean value.\n                } else if ('label' in elem) {\n                    return elem.disabled === disabled;\n                }\n                // Remaining elements are neither :enabled nor :disabled\n                return false;\n            };\n        }\n        /**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\n        function createPositionalPseudo(fn) {\n            return markFunction(function (argument) {\n                argument = +argument;\n                return markFunction(function (seed, matches) {\n                    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;\n                    // Match elements found at the specified indexes\n                    while (i--) {\n                        if (seed[j = matchIndexes[i]]) {\n                            seed[j] = !(matches[j] = seed[j]);\n                        }\n                    }\n                });\n            });\n        }\n        /**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\n        function testContext(context) {\n            return context && typeof context.getElementsByTagName !== 'undefined' && context;\n        }\n        // Expose support vars for convenience\n        support = Sizzle.support = {};\n        /**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\n        isXML = Sizzle.isXML = function (elem) {\n            // documentElement is verified for cases where it doesn't yet exist\n            // (such as loading iframes in IE - #4833)\n            var documentElement = elem && (elem.ownerDocument || elem).documentElement;\n            return documentElement ? documentElement.nodeName !== 'HTML' : false;\n        };\n        /**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\n        setDocument = Sizzle.setDocument = function (node) {\n            var hasCompare, subWindow, doc = node ? node.ownerDocument || node : preferredDoc;\n            // Return early if doc is invalid or already selected\n            if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\n                return document;\n            }\n            // Update global variables\n            document = doc;\n            docElem = document.documentElement;\n            documentIsHTML = !isXML(document);\n            // Support: IE 9-11, Edge\n            // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n            if (preferredDoc !== document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n                // Support: IE 11, Edge\n                if (subWindow.addEventListener) {\n                    subWindow.addEventListener('unload', unloadHandler, false);    // Support: IE 9 - 10 only\n                } else if (subWindow.attachEvent) {\n                    subWindow.attachEvent('onunload', unloadHandler);\n                }\n            }\n            /* Attributes\n\t---------------------------------------------------------------------- */\n            // Support: IE<8\n            // Verify that getAttribute really returns attributes and not properties\n            // (excepting IE8 booleans)\n            support.attributes = assert(function (el) {\n                el.className = 'i';\n                return !el.getAttribute('className');\n            });\n            /* getElement(s)By*\n\t---------------------------------------------------------------------- */\n            // Check if getElementsByTagName(\"*\") returns only elements\n            support.getElementsByTagName = assert(function (el) {\n                el.appendChild(document.createComment(''));\n                return !el.getElementsByTagName('*').length;\n            });\n            // Support: IE<9\n            support.getElementsByClassName = rnative.test(document.getElementsByClassName);\n            // Support: IE<10\n            // Check if getElementById returns elements by name\n            // The broken getElementById methods don't pick up programmatically-set names,\n            // so use a roundabout getElementsByName test\n            support.getById = assert(function (el) {\n                docElem.appendChild(el).id = expando;\n                return !document.getElementsByName || !document.getElementsByName(expando).length;\n            });\n            // ID filter and find\n            if (support.getById) {\n                Expr.filter['ID'] = function (id) {\n                    var attrId = id.replace(runescape, funescape);\n                    return function (elem) {\n                        return elem.getAttribute('id') === attrId;\n                    };\n                };\n                Expr.find['ID'] = function (id, context) {\n                    if (typeof context.getElementById !== 'undefined' && documentIsHTML) {\n                        var elem = context.getElementById(id);\n                        return elem ? [elem] : [];\n                    }\n                };\n            } else {\n                Expr.filter['ID'] = function (id) {\n                    var attrId = id.replace(runescape, funescape);\n                    return function (elem) {\n                        var node = typeof elem.getAttributeNode !== 'undefined' && elem.getAttributeNode('id');\n                        return node && node.value === attrId;\n                    };\n                };\n                // Support: IE 6 - 7 only\n                // getElementById is not reliable as a find shortcut\n                Expr.find['ID'] = function (id, context) {\n                    if (typeof context.getElementById !== 'undefined' && documentIsHTML) {\n                        var node, i, elems, elem = context.getElementById(id);\n                        if (elem) {\n                            // Verify the id attribute\n                            node = elem.getAttributeNode('id');\n                            if (node && node.value === id) {\n                                return [elem];\n                            }\n                            // Fall back on getElementsByName\n                            elems = context.getElementsByName(id);\n                            i = 0;\n                            while (elem = elems[i++]) {\n                                node = elem.getAttributeNode('id');\n                                if (node && node.value === id) {\n                                    return [elem];\n                                }\n                            }\n                        }\n                        return [];\n                    }\n                };\n            }\n            // Tag\n            Expr.find['TAG'] = support.getElementsByTagName ? function (tag, context) {\n                if (typeof context.getElementsByTagName !== 'undefined') {\n                    return context.getElementsByTagName(tag);    // DocumentFragment nodes don't have gEBTN\n                } else if (support.qsa) {\n                    return context.querySelectorAll(tag);\n                }\n            } : function (tag, context) {\n                var elem, tmp = [], i = 0,\n                    // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n                    results = context.getElementsByTagName(tag);\n                // Filter out possible comments\n                if (tag === '*') {\n                    while (elem = results[i++]) {\n                        if (elem.nodeType === 1) {\n                            tmp.push(elem);\n                        }\n                    }\n                    return tmp;\n                }\n                return results;\n            };\n            // Class\n            Expr.find['CLASS'] = support.getElementsByClassName && function (className, context) {\n                if (typeof context.getElementsByClassName !== 'undefined' && documentIsHTML) {\n                    return context.getElementsByClassName(className);\n                }\n            };\n            /* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n            // QSA and matchesSelector support\n            // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n            rbuggyMatches = [];\n            // qSa(:focus) reports false when true (Chrome 21)\n            // We allow this because of a bug in IE8/9 that throws an error\n            // whenever `document.activeElement` is accessed on an iframe\n            // So, we allow :focus to pass through QSA all the time to avoid the IE error\n            // See https://bugs.jquery.com/ticket/13378\n            rbuggyQSA = [];\n            if (support.qsa = rnative.test(document.querySelectorAll)) {\n                // Build QSA regex\n                // Regex strategy adopted from Diego Perini\n                assert(function (el) {\n                    // Select is set to empty string on purpose\n                    // This is to test IE's treatment of not explicitly\n                    // setting a boolean content attribute,\n                    // since its presence should be enough\n                    // https://bugs.jquery.com/ticket/12359\n                    docElem.appendChild(el).innerHTML = '<a id=\\'' + expando + '\\'></a>' + '<select id=\\'' + expando + '-\\r\\\\\\' msallowcapture=\\'\\'>' + '<option selected=\\'\\'></option></select>';\n                    // Support: IE8, Opera 11-12.16\n                    // Nothing should be selected when empty strings follow ^= or $= or *=\n                    // The test attribute must be unknown in Opera but \"safe\" for WinRT\n                    // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n                    if (el.querySelectorAll('[msallowcapture^=\\'\\']').length) {\n                        rbuggyQSA.push('[*^$]=' + whitespace + '*(?:\\'\\'|\"\")');\n                    }\n                    // Support: IE8\n                    // Boolean attributes and \"value\" are not treated correctly\n                    if (!el.querySelectorAll('[selected]').length) {\n                        rbuggyQSA.push('\\\\[' + whitespace + '*(?:value|' + booleans + ')');\n                    }\n                    // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n                    if (!el.querySelectorAll('[id~=' + expando + '-]').length) {\n                        rbuggyQSA.push('~=');\n                    }\n                    // Webkit/Opera - :checked should return selected option elements\n                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n                    // IE8 throws error here and will not see later tests\n                    if (!el.querySelectorAll(':checked').length) {\n                        rbuggyQSA.push(':checked');\n                    }\n                    // Support: Safari 8+, iOS 8+\n                    // https://bugs.webkit.org/show_bug.cgi?id=136851\n                    // In-page `selector#id sibling-combinator selector` fails\n                    if (!el.querySelectorAll('a#' + expando + '+*').length) {\n                        rbuggyQSA.push('.#.+[+~]');\n                    }\n                });\n                assert(function (el) {\n                    el.innerHTML = '<a href=\\'\\' disabled=\\'disabled\\'></a>' + '<select disabled=\\'disabled\\'><option/></select>';\n                    // Support: Windows 8 Native Apps\n                    // The type and name attributes are restricted during .innerHTML assignment\n                    var input = document.createElement('input');\n                    input.setAttribute('type', 'hidden');\n                    el.appendChild(input).setAttribute('name', 'D');\n                    // Support: IE8\n                    // Enforce case-sensitivity of name attribute\n                    if (el.querySelectorAll('[name=d]').length) {\n                        rbuggyQSA.push('name' + whitespace + '*[*^$|!~]?=');\n                    }\n                    // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n                    // IE8 throws error here and will not see later tests\n                    if (el.querySelectorAll(':enabled').length !== 2) {\n                        rbuggyQSA.push(':enabled', ':disabled');\n                    }\n                    // Support: IE9-11+\n                    // IE's :disabled selector does not pick up the children of disabled fieldsets\n                    docElem.appendChild(el).disabled = true;\n                    if (el.querySelectorAll(':disabled').length !== 2) {\n                        rbuggyQSA.push(':enabled', ':disabled');\n                    }\n                    // Opera 10-11 does not throw on post-comma invalid pseudos\n                    el.querySelectorAll('*,:x');\n                    rbuggyQSA.push(',.*:');\n                });\n            }\n            if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n                assert(function (el) {\n                    // Check to see if it's possible to do matchesSelector\n                    // on a disconnected node (IE 9)\n                    support.disconnectedMatch = matches.call(el, '*');\n                    // This should fail with an exception\n                    // Gecko does not error, returns false instead\n                    matches.call(el, '[s!=\\'\\']:x');\n                    rbuggyMatches.push('!=', pseudos);\n                });\n            }\n            rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join('|'));\n            rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join('|'));\n            /* Contains\n\t---------------------------------------------------------------------- */\n            hasCompare = rnative.test(docElem.compareDocumentPosition);\n            // Element contains another\n            // Purposefully self-exclusive\n            // As in, an element does not contain itself\n            contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n                var adown = a.nodeType === 9 ? a.documentElement : a, bup = b && b.parentNode;\n                return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n            } : function (a, b) {\n                if (b) {\n                    while (b = b.parentNode) {\n                        if (b === a) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            };\n            /* Sorting\n\t---------------------------------------------------------------------- */\n            // Document order sorting\n            sortOrder = hasCompare ? function (a, b) {\n                // Flag for duplicate removal\n                if (a === b) {\n                    hasDuplicate = true;\n                    return 0;\n                }\n                // Sort on method existence if only one input has compareDocumentPosition\n                var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n                if (compare) {\n                    return compare;\n                }\n                // Calculate position if both inputs belong to the same document\n                compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n                1;\n                // Disconnected nodes\n                if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n                    // Choose the first element that is related to our preferred document\n                    if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {\n                        return -1;\n                    }\n                    if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {\n                        return 1;\n                    }\n                    // Maintain original order\n                    return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n                }\n                return compare & 4 ? -1 : 1;\n            } : function (a, b) {\n                // Exit early if the nodes are identical\n                if (a === b) {\n                    hasDuplicate = true;\n                    return 0;\n                }\n                var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [a], bp = [b];\n                // Parentless nodes are either documents or disconnected\n                if (!aup || !bup) {\n                    return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;    // If the nodes are siblings, we can do a quick check\n                } else if (aup === bup) {\n                    return siblingCheck(a, b);\n                }\n                // Otherwise we need full lists of their ancestors for comparison\n                cur = a;\n                while (cur = cur.parentNode) {\n                    ap.unshift(cur);\n                }\n                cur = b;\n                while (cur = cur.parentNode) {\n                    bp.unshift(cur);\n                }\n                // Walk down the tree looking for a discrepancy\n                while (ap[i] === bp[i]) {\n                    i++;\n                }\n                return i ? // Do a sibling check if the nodes have a common ancestor\n                siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n                ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;\n            };\n            return document;\n        };\n        Sizzle.matches = function (expr, elements) {\n            return Sizzle(expr, null, null, elements);\n        };\n        Sizzle.matchesSelector = function (elem, expr) {\n            // Set document vars if needed\n            if ((elem.ownerDocument || elem) !== document) {\n                setDocument(elem);\n            }\n            // Make sure that attribute selectors are quoted\n            expr = expr.replace(rattributeQuotes, '=\\'$1\\']');\n            if (support.matchesSelector && documentIsHTML && !compilerCache[expr + ' '] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n                try {\n                    var ret = matches.call(elem, expr);\n                    // IE 9's matchesSelector returns false on disconnected nodes\n                    if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n                        // fragment in IE 9\n                        elem.document && elem.document.nodeType !== 11) {\n                        return ret;\n                    }\n                } catch (e) {\n                }\n            }\n            return Sizzle(expr, document, null, [elem]).length > 0;\n        };\n        Sizzle.contains = function (context, elem) {\n            // Set document vars if needed\n            if ((context.ownerDocument || context) !== document) {\n                setDocument(context);\n            }\n            return contains(context, elem);\n        };\n        Sizzle.attr = function (elem, name) {\n            // Set document vars if needed\n            if ((elem.ownerDocument || elem) !== document) {\n                setDocument(elem);\n            }\n            var fn = Expr.attrHandle[name.toLowerCase()],\n                // Don't get fooled by Object.prototype properties (jQuery #13807)\n                val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n            return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        };\n        Sizzle.escape = function (sel) {\n            return (sel + '').replace(rcssescape, fcssescape);\n        };\n        Sizzle.error = function (msg) {\n            throw new Error('Syntax error, unrecognized expression: ' + msg);\n        };\n        /**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\n        Sizzle.uniqueSort = function (results) {\n            var elem, duplicates = [], j = 0, i = 0;\n            // Unless we *know* we can detect duplicates, assume their presence\n            hasDuplicate = !support.detectDuplicates;\n            sortInput = !support.sortStable && results.slice(0);\n            results.sort(sortOrder);\n            if (hasDuplicate) {\n                while (elem = results[i++]) {\n                    if (elem === results[i]) {\n                        j = duplicates.push(i);\n                    }\n                }\n                while (j--) {\n                    results.splice(duplicates[j], 1);\n                }\n            }\n            // Clear input after sorting to release objects\n            // See https://github.com/jquery/sizzle/pull/225\n            sortInput = null;\n            return results;\n        };\n        /**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\n        getText = Sizzle.getText = function (elem) {\n            var node, ret = '', i = 0, nodeType = elem.nodeType;\n            if (!nodeType) {\n                // If no nodeType, this is expected to be an array\n                while (node = elem[i++]) {\n                    // Do not traverse comment nodes\n                    ret += getText(node);\n                }\n            } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n                // Use textContent for elements\n                // innerText usage removed for consistency of new lines (jQuery #11153)\n                if (typeof elem.textContent === 'string') {\n                    return elem.textContent;\n                } else {\n                    // Traverse its children\n                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n                        ret += getText(elem);\n                    }\n                }\n            } else if (nodeType === 3 || nodeType === 4) {\n                return elem.nodeValue;\n            }\n            // Do not include comment or processing instruction nodes\n            return ret;\n        };\n        Expr = Sizzle.selectors = {\n            // Can be adjusted by the user\n            cacheLength: 50,\n            createPseudo: markFunction,\n            match: matchExpr,\n            attrHandle: {},\n            find: {},\n            relative: {\n                '>': {\n                    dir: 'parentNode',\n                    first: true\n                },\n                ' ': { dir: 'parentNode' },\n                '+': {\n                    dir: 'previousSibling',\n                    first: true\n                },\n                '~': { dir: 'previousSibling' }\n            },\n            preFilter: {\n                'ATTR': function (match) {\n                    match[1] = match[1].replace(runescape, funescape);\n                    // Move the given value to match[3] whether quoted or unquoted\n                    match[3] = (match[3] || match[4] || match[5] || '').replace(runescape, funescape);\n                    if (match[2] === '~=') {\n                        match[3] = ' ' + match[3] + ' ';\n                    }\n                    return match.slice(0, 4);\n                },\n                'CHILD': function (match) {\n                    /* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n                    match[1] = match[1].toLowerCase();\n                    if (match[1].slice(0, 3) === 'nth') {\n                        // nth-* requires argument\n                        if (!match[3]) {\n                            Sizzle.error(match[0]);\n                        }\n                        // numeric x and y parameters for Expr.filter.CHILD\n                        // remember that false/true cast respectively to 0/1\n                        match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === 'even' || match[3] === 'odd'));\n                        match[5] = +(match[7] + match[8] || match[3] === 'odd');    // other types prohibit arguments\n                    } else if (match[3]) {\n                        Sizzle.error(match[0]);\n                    }\n                    return match;\n                },\n                'PSEUDO': function (match) {\n                    var excess, unquoted = !match[6] && match[2];\n                    if (matchExpr['CHILD'].test(match[0])) {\n                        return null;\n                    }\n                    // Accept quoted arguments as-is\n                    if (match[3]) {\n                        match[2] = match[4] || match[5] || '';    // Strip excess characters from unquoted arguments\n                    } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(')', unquoted.length - excess) - unquoted.length)) {\n                        // excess is a negative index\n                        match[0] = match[0].slice(0, excess);\n                        match[2] = unquoted.slice(0, excess);\n                    }\n                    // Return only captures needed by the pseudo filter method (type and argument)\n                    return match.slice(0, 3);\n                }\n            },\n            filter: {\n                'TAG': function (nodeNameSelector) {\n                    var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n                    return nodeNameSelector === '*' ? function () {\n                        return true;\n                    } : function (elem) {\n                        return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n                    };\n                },\n                'CLASS': function (className) {\n                    var pattern = classCache[className + ' '];\n                    return pattern || (pattern = new RegExp('(^|' + whitespace + ')' + className + '(' + whitespace + '|$)')) && classCache(className, function (elem) {\n                        return pattern.test(typeof elem.className === 'string' && elem.className || typeof elem.getAttribute !== 'undefined' && elem.getAttribute('class') || '');\n                    });\n                },\n                'ATTR': function (name, operator, check) {\n                    return function (elem) {\n                        var result = Sizzle.attr(elem, name);\n                        if (result == null) {\n                            return operator === '!=';\n                        }\n                        if (!operator) {\n                            return true;\n                        }\n                        result += '';\n                        return operator === '=' ? result === check : operator === '!=' ? result !== check : operator === '^=' ? check && result.indexOf(check) === 0 : operator === '*=' ? check && result.indexOf(check) > -1 : operator === '$=' ? check && result.slice(-check.length) === check : operator === '~=' ? (' ' + result.replace(rwhitespace, ' ') + ' ').indexOf(check) > -1 : operator === '|=' ? result === check || result.slice(0, check.length + 1) === check + '-' : false;\n                    };\n                },\n                'CHILD': function (type, what, argument, first, last) {\n                    var simple = type.slice(0, 3) !== 'nth', forward = type.slice(-4) !== 'last', ofType = what === 'of-type';\n                    return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n                    function (elem) {\n                        return !!elem.parentNode;\n                    } : function (elem, context, xml) {\n                        var cache, uniqueCache, outerCache, node, nodeIndex, start, dir = simple !== forward ? 'nextSibling' : 'previousSibling', parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;\n                        if (parent) {\n                            // :(first|last|only)-(child|of-type)\n                            if (simple) {\n                                while (dir) {\n                                    node = elem;\n                                    while (node = node[dir]) {\n                                        if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                                            return false;\n                                        }\n                                    }\n                                    // Reverse direction for :only-* (if we haven't yet done so)\n                                    start = dir = type === 'only' && !start && 'nextSibling';\n                                }\n                                return true;\n                            }\n                            start = [forward ? parent.firstChild : parent.lastChild];\n                            // non-xml :nth-child(...) stores cache data on `parent`\n                            if (forward && useCache) {\n                                // Seek `elem` from a previously-cached index\n                                // ...in a gzip-friendly way\n                                node = parent;\n                                outerCache = node[expando] || (node[expando] = {});\n                                // Support: IE <9 only\n                                // Defend against cloned attroperties (jQuery gh-1709)\n                                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                                cache = uniqueCache[type] || [];\n                                nodeIndex = cache[0] === dirruns && cache[1];\n                                diff = nodeIndex && cache[2];\n                                node = nodeIndex && parent.childNodes[nodeIndex];\n                                while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                                    // When found, cache indexes on `parent` and break\n                                    if (node.nodeType === 1 && ++diff && node === elem) {\n                                        uniqueCache[type] = [\n                                            dirruns,\n                                            nodeIndex,\n                                            diff\n                                        ];\n                                        break;\n                                    }\n                                }\n                            } else {\n                                // Use previously-cached element index if available\n                                if (useCache) {\n                                    // ...in a gzip-friendly way\n                                    node = elem;\n                                    outerCache = node[expando] || (node[expando] = {});\n                                    // Support: IE <9 only\n                                    // Defend against cloned attroperties (jQuery gh-1709)\n                                    uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                                    cache = uniqueCache[type] || [];\n                                    nodeIndex = cache[0] === dirruns && cache[1];\n                                    diff = nodeIndex;\n                                }\n                                // xml :nth-child(...)\n                                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n                                if (diff === false) {\n                                    // Use the same loop as above to seek `elem` from the start\n                                    while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                                        if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                                            // Cache the index of each encountered element\n                                            if (useCache) {\n                                                outerCache = node[expando] || (node[expando] = {});\n                                                // Support: IE <9 only\n                                                // Defend against cloned attroperties (jQuery gh-1709)\n                                                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                                                uniqueCache[type] = [\n                                                    dirruns,\n                                                    diff\n                                                ];\n                                            }\n                                            if (node === elem) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            // Incorporate the offset, then check against cycle size\n                            diff -= last;\n                            return diff === first || diff % first === 0 && diff / first >= 0;\n                        }\n                    };\n                },\n                'PSEUDO': function (pseudo, argument) {\n                    // pseudo-class names are case-insensitive\n                    // http://www.w3.org/TR/selectors/#pseudo-classes\n                    // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n                    // Remember that setFilters inherits from pseudos\n                    var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error('unsupported pseudo: ' + pseudo);\n                    // The user may use createPseudo to indicate that\n                    // arguments are needed to create the filter function\n                    // just as Sizzle does\n                    if (fn[expando]) {\n                        return fn(argument);\n                    }\n                    // But maintain support for old signatures\n                    if (fn.length > 1) {\n                        args = [\n                            pseudo,\n                            pseudo,\n                            '',\n                            argument\n                        ];\n                        return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n                            var idx, matched = fn(seed, argument), i = matched.length;\n                            while (i--) {\n                                idx = indexOf(seed, matched[i]);\n                                seed[idx] = !(matches[idx] = matched[i]);\n                            }\n                        }) : function (elem) {\n                            return fn(elem, 0, args);\n                        };\n                    }\n                    return fn;\n                }\n            },\n            pseudos: {\n                // Potentially complex pseudos\n                'not': markFunction(function (selector) {\n                    // Trim the selector passed to compile\n                    // to avoid treating leading and trailing\n                    // spaces as combinators\n                    var input = [], results = [], matcher = compile(selector.replace(rtrim, '$1'));\n                    return matcher[expando] ? markFunction(function (seed, matches, context, xml) {\n                        var elem, unmatched = matcher(seed, null, xml, []), i = seed.length;\n                        // Match elements unmatched by `matcher`\n                        while (i--) {\n                            if (elem = unmatched[i]) {\n                                seed[i] = !(matches[i] = elem);\n                            }\n                        }\n                    }) : function (elem, context, xml) {\n                        input[0] = elem;\n                        matcher(input, null, xml, results);\n                        // Don't keep the element (issue #299)\n                        input[0] = null;\n                        return !results.pop();\n                    };\n                }),\n                'has': markFunction(function (selector) {\n                    return function (elem) {\n                        return Sizzle(selector, elem).length > 0;\n                    };\n                }),\n                'contains': markFunction(function (text) {\n                    text = text.replace(runescape, funescape);\n                    return function (elem) {\n                        return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n                    };\n                }),\n                // \"Whether an element is represented by a :lang() selector\n                // is based solely on the element's language value\n                // being equal to the identifier C,\n                // or beginning with the identifier C immediately followed by \"-\".\n                // The matching of C against the element's language value is performed case-insensitively.\n                // The identifier C does not have to be a valid language name.\"\n                // http://www.w3.org/TR/selectors/#lang-pseudo\n                'lang': markFunction(function (lang) {\n                    // lang value must be a valid identifier\n                    if (!ridentifier.test(lang || '')) {\n                        Sizzle.error('unsupported lang: ' + lang);\n                    }\n                    lang = lang.replace(runescape, funescape).toLowerCase();\n                    return function (elem) {\n                        var elemLang;\n                        do {\n                            if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute('xml:lang') || elem.getAttribute('lang')) {\n                                elemLang = elemLang.toLowerCase();\n                                return elemLang === lang || elemLang.indexOf(lang + '-') === 0;\n                            }\n                        } while ((elem = elem.parentNode) && elem.nodeType === 1);\n                        return false;\n                    };\n                }),\n                // Miscellaneous\n                'target': function (elem) {\n                    var hash = window.location && window.location.hash;\n                    return hash && hash.slice(1) === elem.id;\n                },\n                'root': function (elem) {\n                    return elem === docElem;\n                },\n                'focus': function (elem) {\n                    return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n                },\n                // Boolean properties\n                'enabled': createDisabledPseudo(false),\n                'disabled': createDisabledPseudo(true),\n                'checked': function (elem) {\n                    // In CSS3, :checked should return both checked and selected elements\n                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n                    var nodeName = elem.nodeName.toLowerCase();\n                    return nodeName === 'input' && !!elem.checked || nodeName === 'option' && !!elem.selected;\n                },\n                'selected': function (elem) {\n                    // Accessing this property makes selected-by-default\n                    // options in Safari work properly\n                    if (elem.parentNode) {\n                        elem.parentNode.selectedIndex;\n                    }\n                    return elem.selected === true;\n                },\n                // Contents\n                'empty': function (elem) {\n                    // http://www.w3.org/TR/selectors/#empty-pseudo\n                    // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n                    //   but not by others (comment: 8; processing instruction: 7; etc.)\n                    // nodeType < 6 works because attributes (2) do not appear as children\n                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n                        if (elem.nodeType < 6) {\n                            return false;\n                        }\n                    }\n                    return true;\n                },\n                'parent': function (elem) {\n                    return !Expr.pseudos['empty'](elem);\n                },\n                // Element/input types\n                'header': function (elem) {\n                    return rheader.test(elem.nodeName);\n                },\n                'input': function (elem) {\n                    return rinputs.test(elem.nodeName);\n                },\n                'button': function (elem) {\n                    var name = elem.nodeName.toLowerCase();\n                    return name === 'input' && elem.type === 'button' || name === 'button';\n                },\n                'text': function (elem) {\n                    var attr;\n                    return elem.nodeName.toLowerCase() === 'input' && elem.type === 'text' && ((attr = elem.getAttribute('type')) == null || attr.toLowerCase() === 'text');\n                },\n                // Position-in-collection\n                'first': createPositionalPseudo(function () {\n                    return [0];\n                }),\n                'last': createPositionalPseudo(function (matchIndexes, length) {\n                    return [length - 1];\n                }),\n                'eq': createPositionalPseudo(function (matchIndexes, length, argument) {\n                    return [argument < 0 ? argument + length : argument];\n                }),\n                'even': createPositionalPseudo(function (matchIndexes, length) {\n                    var i = 0;\n                    for (; i < length; i += 2) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                }),\n                'odd': createPositionalPseudo(function (matchIndexes, length) {\n                    var i = 1;\n                    for (; i < length; i += 2) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                }),\n                'lt': createPositionalPseudo(function (matchIndexes, length, argument) {\n                    var i = argument < 0 ? argument + length : argument;\n                    for (; --i >= 0;) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                }),\n                'gt': createPositionalPseudo(function (matchIndexes, length, argument) {\n                    var i = argument < 0 ? argument + length : argument;\n                    for (; ++i < length;) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                })\n            }\n        };\n        Expr.pseudos['nth'] = Expr.pseudos['eq'];\n        // Add button/input type pseudos\n        for (i in {\n                radio: true,\n                checkbox: true,\n                file: true,\n                password: true,\n                image: true\n            }) {\n            Expr.pseudos[i] = createInputPseudo(i);\n        }\n        for (i in {\n                submit: true,\n                reset: true\n            }) {\n            Expr.pseudos[i] = createButtonPseudo(i);\n        }\n        // Easy API for creating new setFilters\n        function setFilters() {\n        }\n        setFilters.prototype = Expr.filters = Expr.pseudos;\n        Expr.setFilters = new setFilters();\n        tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n            var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + ' '];\n            if (cached) {\n                return parseOnly ? 0 : cached.slice(0);\n            }\n            soFar = selector;\n            groups = [];\n            preFilters = Expr.preFilter;\n            while (soFar) {\n                // Comma and first run\n                if (!matched || (match = rcomma.exec(soFar))) {\n                    if (match) {\n                        // Don't consume trailing commas as valid\n                        soFar = soFar.slice(match[0].length) || soFar;\n                    }\n                    groups.push(tokens = []);\n                }\n                matched = false;\n                // Combinators\n                if (match = rcombinators.exec(soFar)) {\n                    matched = match.shift();\n                    tokens.push({\n                        value: matched,\n                        // Cast descendant combinators to space\n                        type: match[0].replace(rtrim, ' ')\n                    });\n                    soFar = soFar.slice(matched.length);\n                }\n                // Filters\n                for (type in Expr.filter) {\n                    if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n                        matched = match.shift();\n                        tokens.push({\n                            value: matched,\n                            type: type,\n                            matches: match\n                        });\n                        soFar = soFar.slice(matched.length);\n                    }\n                }\n                if (!matched) {\n                    break;\n                }\n            }\n            // Return the length of the invalid excess\n            // if we're just parsing\n            // Otherwise, throw an error or return tokens\n            return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n            tokenCache(selector, groups).slice(0);\n        };\n        function toSelector(tokens) {\n            var i = 0, len = tokens.length, selector = '';\n            for (; i < len; i++) {\n                selector += tokens[i].value;\n            }\n            return selector;\n        }\n        function addCombinator(matcher, combinator, base) {\n            var dir = combinator.dir, skip = combinator.next, key = skip || dir, checkNonElements = base && key === 'parentNode', doneName = done++;\n            return combinator.first ? // Check against closest ancestor/preceding element\n            function (elem, context, xml) {\n                while (elem = elem[dir]) {\n                    if (elem.nodeType === 1 || checkNonElements) {\n                        return matcher(elem, context, xml);\n                    }\n                }\n                return false;\n            } : // Check against all ancestor/preceding elements\n            function (elem, context, xml) {\n                var oldCache, uniqueCache, outerCache, newCache = [\n                        dirruns,\n                        doneName\n                    ];\n                // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n                if (xml) {\n                    while (elem = elem[dir]) {\n                        if (elem.nodeType === 1 || checkNonElements) {\n                            if (matcher(elem, context, xml)) {\n                                return true;\n                            }\n                        }\n                    }\n                } else {\n                    while (elem = elem[dir]) {\n                        if (elem.nodeType === 1 || checkNonElements) {\n                            outerCache = elem[expando] || (elem[expando] = {});\n                            // Support: IE <9 only\n                            // Defend against cloned attroperties (jQuery gh-1709)\n                            uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n                            if (skip && skip === elem.nodeName.toLowerCase()) {\n                                elem = elem[dir] || elem;\n                            } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                                // Assign to newCache so results back-propagate to previous elements\n                                return newCache[2] = oldCache[2];\n                            } else {\n                                // Reuse newcache so results back-propagate to previous elements\n                                uniqueCache[key] = newCache;\n                                // A match means we're done; a fail means we have to keep checking\n                                if (newCache[2] = matcher(elem, context, xml)) {\n                                    return true;\n                                }\n                            }\n                        }\n                    }\n                }\n                return false;\n            };\n        }\n        function elementMatcher(matchers) {\n            return matchers.length > 1 ? function (elem, context, xml) {\n                var i = matchers.length;\n                while (i--) {\n                    if (!matchers[i](elem, context, xml)) {\n                        return false;\n                    }\n                }\n                return true;\n            } : matchers[0];\n        }\n        function multipleContexts(selector, contexts, results) {\n            var i = 0, len = contexts.length;\n            for (; i < len; i++) {\n                Sizzle(selector, contexts[i], results);\n            }\n            return results;\n        }\n        function condense(unmatched, map, filter, context, xml) {\n            var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = map != null;\n            for (; i < len; i++) {\n                if (elem = unmatched[i]) {\n                    if (!filter || filter(elem, context, xml)) {\n                        newUnmatched.push(elem);\n                        if (mapped) {\n                            map.push(i);\n                        }\n                    }\n                }\n            }\n            return newUnmatched;\n        }\n        function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n            if (postFilter && !postFilter[expando]) {\n                postFilter = setMatcher(postFilter);\n            }\n            if (postFinder && !postFinder[expando]) {\n                postFinder = setMatcher(postFinder, postSelector);\n            }\n            return markFunction(function (seed, results, context, xml) {\n                var temp, i, elem, preMap = [], postMap = [], preexisting = results.length,\n                    // Get initial elements from seed or context\n                    elems = seed || multipleContexts(selector || '*', context.nodeType ? [context] : context, []),\n                    // Prefilter to get matcher input, preserving a map for seed-results synchronization\n                    matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems, matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n                    postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n                    [] : // ...otherwise use results directly\n                    results : matcherIn;\n                // Find primary matches\n                if (matcher) {\n                    matcher(matcherIn, matcherOut, context, xml);\n                }\n                // Apply postFilter\n                if (postFilter) {\n                    temp = condense(matcherOut, postMap);\n                    postFilter(temp, [], context, xml);\n                    // Un-match failing elements by moving them back to matcherIn\n                    i = temp.length;\n                    while (i--) {\n                        if (elem = temp[i]) {\n                            matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n                        }\n                    }\n                }\n                if (seed) {\n                    if (postFinder || preFilter) {\n                        if (postFinder) {\n                            // Get the final matcherOut by condensing this intermediate into postFinder contexts\n                            temp = [];\n                            i = matcherOut.length;\n                            while (i--) {\n                                if (elem = matcherOut[i]) {\n                                    // Restore matcherIn since elem is not yet a final match\n                                    temp.push(matcherIn[i] = elem);\n                                }\n                            }\n                            postFinder(null, matcherOut = [], temp, xml);\n                        }\n                        // Move matched elements from seed to results to keep them synchronized\n                        i = matcherOut.length;\n                        while (i--) {\n                            if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                                seed[temp] = !(results[temp] = elem);\n                            }\n                        }\n                    }    // Add elements to results, through postFinder if defined\n                } else {\n                    matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n                    if (postFinder) {\n                        postFinder(null, results, matcherOut, xml);\n                    } else {\n                        push.apply(results, matcherOut);\n                    }\n                }\n            });\n        }\n        function matcherFromTokens(tokens) {\n            var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[' '], i = leadingRelative ? 1 : 0,\n                // The foundational matcher ensures that elements are reachable from top-level context(s)\n                matchContext = addCombinator(function (elem) {\n                    return elem === checkContext;\n                }, implicitRelative, true), matchAnyContext = addCombinator(function (elem) {\n                    return indexOf(checkContext, elem) > -1;\n                }, implicitRelative, true), matchers = [function (elem, context, xml) {\n                        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));\n                        // Avoid hanging onto element (issue #299)\n                        checkContext = null;\n                        return ret;\n                    }];\n            for (; i < len; i++) {\n                if (matcher = Expr.relative[tokens[i].type]) {\n                    matchers = [addCombinator(elementMatcher(matchers), matcher)];\n                } else {\n                    matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);\n                    // Return special upon seeing a positional matcher\n                    if (matcher[expando]) {\n                        // Find the next relative operator (if any) for proper handling\n                        j = ++i;\n                        for (; j < len; j++) {\n                            if (Expr.relative[tokens[j].type]) {\n                                break;\n                            }\n                        }\n                        return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n                        tokens.slice(0, i - 1).concat({ value: tokens[i - 2].type === ' ' ? '*' : '' })).replace(rtrim, '$1'), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n                    }\n                    matchers.push(matcher);\n                }\n            }\n            return elementMatcher(matchers);\n        }\n        function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n            var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function (seed, context, xml, results, outermost) {\n                    var elem, j, matcher, matchedCount = 0, i = '0', unmatched = seed && [], setMatched = [], contextBackup = outermostContext,\n                        // We must always have either seed elements or outermost context\n                        elems = seed || byElement && Expr.find['TAG']('*', outermost),\n                        // Use integer dirruns iff this is the outermost matcher\n                        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;\n                    if (outermost) {\n                        outermostContext = context === document || context || outermost;\n                    }\n                    // Add elements passing elementMatchers directly to results\n                    // Support: IE<9, Safari\n                    // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n                    for (; i !== len && (elem = elems[i]) != null; i++) {\n                        if (byElement && elem) {\n                            j = 0;\n                            if (!context && elem.ownerDocument !== document) {\n                                setDocument(elem);\n                                xml = !documentIsHTML;\n                            }\n                            while (matcher = elementMatchers[j++]) {\n                                if (matcher(elem, context || document, xml)) {\n                                    results.push(elem);\n                                    break;\n                                }\n                            }\n                            if (outermost) {\n                                dirruns = dirrunsUnique;\n                            }\n                        }\n                        // Track unmatched elements for set filters\n                        if (bySet) {\n                            // They will have gone through all possible matchers\n                            if (elem = !matcher && elem) {\n                                matchedCount--;\n                            }\n                            // Lengthen the array for every element, matched or not\n                            if (seed) {\n                                unmatched.push(elem);\n                            }\n                        }\n                    }\n                    // `i` is now the count of elements visited above, and adding it to `matchedCount`\n                    // makes the latter nonnegative.\n                    matchedCount += i;\n                    // Apply set filters to unmatched elements\n                    // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n                    // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n                    // no element matchers and no seed.\n                    // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n                    // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n                    // numerically zero.\n                    if (bySet && i !== matchedCount) {\n                        j = 0;\n                        while (matcher = setMatchers[j++]) {\n                            matcher(unmatched, setMatched, context, xml);\n                        }\n                        if (seed) {\n                            // Reintegrate element matches to eliminate the need for sorting\n                            if (matchedCount > 0) {\n                                while (i--) {\n                                    if (!(unmatched[i] || setMatched[i])) {\n                                        setMatched[i] = pop.call(results);\n                                    }\n                                }\n                            }\n                            // Discard index placeholder values to get only actual matches\n                            setMatched = condense(setMatched);\n                        }\n                        // Add matches to results\n                        push.apply(results, setMatched);\n                        // Seedless set matches succeeding multiple successful matchers stipulate sorting\n                        if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n                            Sizzle.uniqueSort(results);\n                        }\n                    }\n                    // Override manipulation of globals by nested matchers\n                    if (outermost) {\n                        dirruns = dirrunsUnique;\n                        outermostContext = contextBackup;\n                    }\n                    return unmatched;\n                };\n            return bySet ? markFunction(superMatcher) : superMatcher;\n        }\n        compile = Sizzle.compile = function (selector, match) {\n            var i, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + ' '];\n            if (!cached) {\n                // Generate a function of recursive functions that can be used to check each element\n                if (!match) {\n                    match = tokenize(selector);\n                }\n                i = match.length;\n                while (i--) {\n                    cached = matcherFromTokens(match[i]);\n                    if (cached[expando]) {\n                        setMatchers.push(cached);\n                    } else {\n                        elementMatchers.push(cached);\n                    }\n                }\n                // Cache the compiled function\n                cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));\n                // Save selector and tokenization\n                cached.selector = selector;\n            }\n            return cached;\n        };\n        /**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\n        select = Sizzle.select = function (selector, context, results, seed) {\n            var i, tokens, token, type, find, compiled = typeof selector === 'function' && selector, match = !seed && tokenize(selector = compiled.selector || selector);\n            results = results || [];\n            // Try to minimize operations if there is only one selector in the list and no seed\n            // (the latter of which guarantees us context)\n            if (match.length === 1) {\n                // Reduce context if the leading compound selector is an ID\n                tokens = match[0] = match[0].slice(0);\n                if (tokens.length > 2 && (token = tokens[0]).type === 'ID' && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n                    context = (Expr.find['ID'](token.matches[0].replace(runescape, funescape), context) || [])[0];\n                    if (!context) {\n                        return results;    // Precompiled matchers will still verify ancestry, so step up a level\n                    } else if (compiled) {\n                        context = context.parentNode;\n                    }\n                    selector = selector.slice(tokens.shift().value.length);\n                }\n                // Fetch a seed set for right-to-left matching\n                i = matchExpr['needsContext'].test(selector) ? 0 : tokens.length;\n                while (i--) {\n                    token = tokens[i];\n                    // Abort if we hit a combinator\n                    if (Expr.relative[type = token.type]) {\n                        break;\n                    }\n                    if (find = Expr.find[type]) {\n                        // Search, expanding context for leading sibling combinators\n                        if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n                            // If seed is empty or no tokens remain, we can return early\n                            tokens.splice(i, 1);\n                            selector = seed.length && toSelector(tokens);\n                            if (!selector) {\n                                push.apply(results, seed);\n                                return results;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // Compile and execute a filtering function if one is not provided\n            // Provide `match` to avoid retokenization if we modified the selector above\n            (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n            return results;\n        };\n        // One-time assignments\n        // Sort stability\n        support.sortStable = expando.split('').sort(sortOrder).join('') === expando;\n        // Support: Chrome 14-35+\n        // Always assume duplicates if they aren't passed to the comparison function\n        support.detectDuplicates = !!hasDuplicate;\n        // Initialize against the default document\n        setDocument();\n        // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n        // Detached nodes confoundingly follow *each other*\n        support.sortDetached = assert(function (el) {\n            // Should return 1, but returns 4 (following)\n            return el.compareDocumentPosition(document.createElement('fieldset')) & 1;\n        });\n        // Support: IE<8\n        // Prevent attribute/property \"interpolation\"\n        // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n        if (!assert(function (el) {\n                el.innerHTML = '<a href=\\'#\\'></a>';\n                return el.firstChild.getAttribute('href') === '#';\n            })) {\n            addHandle('type|href|height|width', function (elem, name, isXML) {\n                if (!isXML) {\n                    return elem.getAttribute(name, name.toLowerCase() === 'type' ? 1 : 2);\n                }\n            });\n        }\n        // Support: IE<9\n        // Use defaultValue in place of getAttribute(\"value\")\n        if (!support.attributes || !assert(function (el) {\n                el.innerHTML = '<input/>';\n                el.firstChild.setAttribute('value', '');\n                return el.firstChild.getAttribute('value') === '';\n            })) {\n            addHandle('value', function (elem, name, isXML) {\n                if (!isXML && elem.nodeName.toLowerCase() === 'input') {\n                    return elem.defaultValue;\n                }\n            });\n        }\n        // Support: IE<9\n        // Use getAttributeNode to fetch booleans when getAttribute lies\n        if (!assert(function (el) {\n                return el.getAttribute('disabled') == null;\n            })) {\n            addHandle(booleans, function (elem, name, isXML) {\n                var val;\n                if (!isXML) {\n                    return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n                }\n            });\n        }\n        return Sizzle;\n    }(window);\n    jQuery.find = Sizzle;\n    jQuery.expr = Sizzle.selectors;\n    // Deprecated\n    jQuery.expr[':'] = jQuery.expr.pseudos;\n    jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n    jQuery.text = Sizzle.getText;\n    jQuery.isXMLDoc = Sizzle.isXML;\n    jQuery.contains = Sizzle.contains;\n    jQuery.escapeSelector = Sizzle.escape;\n    var dir = function (elem, dir, until) {\n        var matched = [], truncate = until !== undefined;\n        while ((elem = elem[dir]) && elem.nodeType !== 9) {\n            if (elem.nodeType === 1) {\n                if (truncate && jQuery(elem).is(until)) {\n                    break;\n                }\n                matched.push(elem);\n            }\n        }\n        return matched;\n    };\n    var siblings = function (n, elem) {\n        var matched = [];\n        for (; n; n = n.nextSibling) {\n            if (n.nodeType === 1 && n !== elem) {\n                matched.push(n);\n            }\n        }\n        return matched;\n    };\n    var rneedsContext = jQuery.expr.match.needsContext;\n    function nodeName(elem, name) {\n        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n    }\n    ;\n    var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;\n    var risSimple = /^.[^:#\\[\\.,]*$/;\n    // Implement the identical functionality for filter and not\n    function winnow(elements, qualifier, not) {\n        if (jQuery.isFunction(qualifier)) {\n            return jQuery.grep(elements, function (elem, i) {\n                return !!qualifier.call(elem, i, elem) !== not;\n            });\n        }\n        // Single element\n        if (qualifier.nodeType) {\n            return jQuery.grep(elements, function (elem) {\n                return elem === qualifier !== not;\n            });\n        }\n        // Arraylike of elements (jQuery, arguments, Array)\n        if (typeof qualifier !== 'string') {\n            return jQuery.grep(elements, function (elem) {\n                return indexOf.call(qualifier, elem) > -1 !== not;\n            });\n        }\n        // Simple selector that can be filtered directly, removing non-Elements\n        if (risSimple.test(qualifier)) {\n            return jQuery.filter(qualifier, elements, not);\n        }\n        // Complex selector, compare the two sets, removing non-Elements\n        qualifier = jQuery.filter(qualifier, elements);\n        return jQuery.grep(elements, function (elem) {\n            return indexOf.call(qualifier, elem) > -1 !== not && elem.nodeType === 1;\n        });\n    }\n    jQuery.filter = function (expr, elems, not) {\n        var elem = elems[0];\n        if (not) {\n            expr = ':not(' + expr + ')';\n        }\n        if (elems.length === 1 && elem.nodeType === 1) {\n            return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n        }\n        return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n            return elem.nodeType === 1;\n        }));\n    };\n    jQuery.fn.extend({\n        find: function (selector) {\n            var i, ret, len = this.length, self = this;\n            if (typeof selector !== 'string') {\n                return this.pushStack(jQuery(selector).filter(function () {\n                    for (i = 0; i < len; i++) {\n                        if (jQuery.contains(self[i], this)) {\n                            return true;\n                        }\n                    }\n                }));\n            }\n            ret = this.pushStack([]);\n            for (i = 0; i < len; i++) {\n                jQuery.find(selector, self[i], ret);\n            }\n            return len > 1 ? jQuery.uniqueSort(ret) : ret;\n        },\n        filter: function (selector) {\n            return this.pushStack(winnow(this, selector || [], false));\n        },\n        not: function (selector) {\n            return this.pushStack(winnow(this, selector || [], true));\n        },\n        is: function (selector) {\n            return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n            // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n            typeof selector === 'string' && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n        }\n    });\n    // Initialize a jQuery object\n    // A central reference to the root jQuery(document)\n    var rootjQuery,\n        // A simple way to check for HTML strings\n        // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n        // Strict HTML recognition (#11290: must start with <)\n        // Shortcut simple #id case for speed\n        rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/, init = jQuery.fn.init = function (selector, context, root) {\n            var match, elem;\n            // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n            if (!selector) {\n                return this;\n            }\n            // Method init() accepts an alternate rootjQuery\n            // so migrate can support jQuery.sub (gh-2101)\n            root = root || rootjQuery;\n            // Handle HTML strings\n            if (typeof selector === 'string') {\n                if (selector[0] === '<' && selector[selector.length - 1] === '>' && selector.length >= 3) {\n                    // Assume that strings that start and end with <> are HTML and skip the regex check\n                    match = [\n                        null,\n                        selector,\n                        null\n                    ];\n                } else {\n                    match = rquickExpr.exec(selector);\n                }\n                // Match html or make sure no context is specified for #id\n                if (match && (match[1] || !context)) {\n                    // HANDLE: $(html) -> $(array)\n                    if (match[1]) {\n                        context = context instanceof jQuery ? context[0] : context;\n                        // Option to run scripts is true for back-compat\n                        // Intentionally let the error be thrown if parseHTML is not present\n                        jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));\n                        // HANDLE: $(html, props)\n                        if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n                            for (match in context) {\n                                // Properties of context are called as methods if possible\n                                if (jQuery.isFunction(this[match])) {\n                                    this[match](context[match]);    // ...and otherwise set as attributes\n                                } else {\n                                    this.attr(match, context[match]);\n                                }\n                            }\n                        }\n                        return this;    // HANDLE: $(#id)\n                    } else {\n                        elem = document.getElementById(match[2]);\n                        if (elem) {\n                            // Inject the element directly into the jQuery object\n                            this[0] = elem;\n                            this.length = 1;\n                        }\n                        return this;\n                    }    // HANDLE: $(expr, $(...))\n                } else if (!context || context.jquery) {\n                    return (context || root).find(selector);    // HANDLE: $(expr, context)\n                                                                // (which is just equivalent to: $(context).find(expr)\n                } else {\n                    return this.constructor(context).find(selector);\n                }    // HANDLE: $(DOMElement)\n            } else if (selector.nodeType) {\n                this[0] = selector;\n                this.length = 1;\n                return this;    // HANDLE: $(function)\n                                // Shortcut for document ready\n            } else if (jQuery.isFunction(selector)) {\n                return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present\n                selector(jQuery);\n            }\n            return jQuery.makeArray(selector, this);\n        };\n    // Give the init function the jQuery prototype for later instantiation\n    init.prototype = jQuery.fn;\n    // Initialize central reference\n    rootjQuery = jQuery(document);\n    var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n        // Methods guaranteed to produce a unique set when starting from a unique set\n        guaranteedUnique = {\n            children: true,\n            contents: true,\n            next: true,\n            prev: true\n        };\n    jQuery.fn.extend({\n        has: function (target) {\n            var targets = jQuery(target, this), l = targets.length;\n            return this.filter(function () {\n                var i = 0;\n                for (; i < l; i++) {\n                    if (jQuery.contains(this, targets[i])) {\n                        return true;\n                    }\n                }\n            });\n        },\n        closest: function (selectors, context) {\n            var cur, i = 0, l = this.length, matched = [], targets = typeof selectors !== 'string' && jQuery(selectors);\n            // Positional selectors never match, since there's no _selection_ context\n            if (!rneedsContext.test(selectors)) {\n                for (; i < l; i++) {\n                    for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n                        // Always skip document fragments\n                        if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle\n                            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n                            matched.push(cur);\n                            break;\n                        }\n                    }\n                }\n            }\n            return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n        },\n        // Determine the position of an element within the set\n        index: function (elem) {\n            // No argument, return index in parent\n            if (!elem) {\n                return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n            }\n            // Index in selector\n            if (typeof elem === 'string') {\n                return indexOf.call(jQuery(elem), this[0]);\n            }\n            // Locate the position of the desired element\n            return indexOf.call(this, // If it receives a jQuery object, the first element is used\n            elem.jquery ? elem[0] : elem);\n        },\n        add: function (selector, context) {\n            return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n        },\n        addBack: function (selector) {\n            return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n        }\n    });\n    function sibling(cur, dir) {\n        while ((cur = cur[dir]) && cur.nodeType !== 1) {\n        }\n        return cur;\n    }\n    jQuery.each({\n        parent: function (elem) {\n            var parent = elem.parentNode;\n            return parent && parent.nodeType !== 11 ? parent : null;\n        },\n        parents: function (elem) {\n            return dir(elem, 'parentNode');\n        },\n        parentsUntil: function (elem, i, until) {\n            return dir(elem, 'parentNode', until);\n        },\n        next: function (elem) {\n            return sibling(elem, 'nextSibling');\n        },\n        prev: function (elem) {\n            return sibling(elem, 'previousSibling');\n        },\n        nextAll: function (elem) {\n            return dir(elem, 'nextSibling');\n        },\n        prevAll: function (elem) {\n            return dir(elem, 'previousSibling');\n        },\n        nextUntil: function (elem, i, until) {\n            return dir(elem, 'nextSibling', until);\n        },\n        prevUntil: function (elem, i, until) {\n            return dir(elem, 'previousSibling', until);\n        },\n        siblings: function (elem) {\n            return siblings((elem.parentNode || {}).firstChild, elem);\n        },\n        children: function (elem) {\n            return siblings(elem.firstChild);\n        },\n        contents: function (elem) {\n            if (nodeName(elem, 'iframe')) {\n                return elem.contentDocument;\n            }\n            // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n            // Treat the template element as a regular one in browsers that\n            // don't support it.\n            if (nodeName(elem, 'template')) {\n                elem = elem.content || elem;\n            }\n            return jQuery.merge([], elem.childNodes);\n        }\n    }, function (name, fn) {\n        jQuery.fn[name] = function (until, selector) {\n            var matched = jQuery.map(this, fn, until);\n            if (name.slice(-5) !== 'Until') {\n                selector = until;\n            }\n            if (selector && typeof selector === 'string') {\n                matched = jQuery.filter(selector, matched);\n            }\n            if (this.length > 1) {\n                // Remove duplicates\n                if (!guaranteedUnique[name]) {\n                    jQuery.uniqueSort(matched);\n                }\n                // Reverse order for parents* and prev-derivatives\n                if (rparentsprev.test(name)) {\n                    matched.reverse();\n                }\n            }\n            return this.pushStack(matched);\n        };\n    });\n    var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n    // Convert String-formatted options into Object-formatted ones\n    function createOptions(options) {\n        var object = {};\n        jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n            object[flag] = true;\n        });\n        return object;\n    }\n    /*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\n    jQuery.Callbacks = function (options) {\n        // Convert options from String-formatted to Object-formatted if needed\n        // (we check in cache first)\n        options = typeof options === 'string' ? createOptions(options) : jQuery.extend({}, options);\n        var\n            // Flag to know if list is currently firing\n            firing,\n            // Last fire value for non-forgettable lists\n            memory,\n            // Flag to know if list was already fired\n            fired,\n            // Flag to prevent firing\n            locked,\n            // Actual callback list\n            list = [],\n            // Queue of execution data for repeatable lists\n            queue = [],\n            // Index of currently firing callback (modified by add/remove as needed)\n            firingIndex = -1,\n            // Fire callbacks\n            fire = function () {\n                // Enforce single-firing\n                locked = locked || options.once;\n                // Execute callbacks for all pending executions,\n                // respecting firingIndex overrides and runtime changes\n                fired = firing = true;\n                for (; queue.length; firingIndex = -1) {\n                    memory = queue.shift();\n                    while (++firingIndex < list.length) {\n                        // Run callback and check for early termination\n                        if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n                            // Jump to end and forget the data so .add doesn't re-fire\n                            firingIndex = list.length;\n                            memory = false;\n                        }\n                    }\n                }\n                // Forget the data if we're done with it\n                if (!options.memory) {\n                    memory = false;\n                }\n                firing = false;\n                // Clean up if we're done firing for good\n                if (locked) {\n                    // Keep an empty list if we have data for future add calls\n                    if (memory) {\n                        list = [];    // Otherwise, this object is spent\n                    } else {\n                        list = '';\n                    }\n                }\n            },\n            // Actual Callbacks object\n            self = {\n                // Add a callback or a collection of callbacks to the list\n                add: function () {\n                    if (list) {\n                        // If we have memory from a past run, we should fire after adding\n                        if (memory && !firing) {\n                            firingIndex = list.length - 1;\n                            queue.push(memory);\n                        }\n                        (function add(args) {\n                            jQuery.each(args, function (_, arg) {\n                                if (jQuery.isFunction(arg)) {\n                                    if (!options.unique || !self.has(arg)) {\n                                        list.push(arg);\n                                    }\n                                } else if (arg && arg.length && jQuery.type(arg) !== 'string') {\n                                    // Inspect recursively\n                                    add(arg);\n                                }\n                            });\n                        }(arguments));\n                        if (memory && !firing) {\n                            fire();\n                        }\n                    }\n                    return this;\n                },\n                // Remove a callback from the list\n                remove: function () {\n                    jQuery.each(arguments, function (_, arg) {\n                        var index;\n                        while ((index = jQuery.inArray(arg, list, index)) > -1) {\n                            list.splice(index, 1);\n                            // Handle firing indexes\n                            if (index <= firingIndex) {\n                                firingIndex--;\n                            }\n                        }\n                    });\n                    return this;\n                },\n                // Check if a given callback is in the list.\n                // If no argument is given, return whether or not list has callbacks attached.\n                has: function (fn) {\n                    return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n                },\n                // Remove all callbacks from the list\n                empty: function () {\n                    if (list) {\n                        list = [];\n                    }\n                    return this;\n                },\n                // Disable .fire and .add\n                // Abort any current/pending executions\n                // Clear all callbacks and values\n                disable: function () {\n                    locked = queue = [];\n                    list = memory = '';\n                    return this;\n                },\n                disabled: function () {\n                    return !list;\n                },\n                // Disable .fire\n                // Also disable .add unless we have memory (since it would have no effect)\n                // Abort any pending executions\n                lock: function () {\n                    locked = queue = [];\n                    if (!memory && !firing) {\n                        list = memory = '';\n                    }\n                    return this;\n                },\n                locked: function () {\n                    return !!locked;\n                },\n                // Call all callbacks with the given context and arguments\n                fireWith: function (context, args) {\n                    if (!locked) {\n                        args = args || [];\n                        args = [\n                            context,\n                            args.slice ? args.slice() : args\n                        ];\n                        queue.push(args);\n                        if (!firing) {\n                            fire();\n                        }\n                    }\n                    return this;\n                },\n                // Call all the callbacks with the given arguments\n                fire: function () {\n                    self.fireWith(this, arguments);\n                    return this;\n                },\n                // To know if the callbacks have already been called at least once\n                fired: function () {\n                    return !!fired;\n                }\n            };\n        return self;\n    };\n    function Identity(v) {\n        return v;\n    }\n    function Thrower(ex) {\n        throw ex;\n    }\n    function adoptValue(value, resolve, reject, noValue) {\n        var method;\n        try {\n            // Check for promise aspect first to privilege synchronous behavior\n            if (value && jQuery.isFunction(method = value.promise)) {\n                method.call(value).done(resolve).fail(reject);    // Other thenables\n            } else if (value && jQuery.isFunction(method = value.then)) {\n                method.call(value, resolve, reject);    // Other non-thenables\n            } else {\n                // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n                // * false: [ value ].slice( 0 ) => resolve( value )\n                // * true: [ value ].slice( 1 ) => resolve()\n                resolve.apply(undefined, [value].slice(noValue));\n            }    // For Promises/A+, convert exceptions into rejections\n                 // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n                 // Deferred#then to conditionally suppress rejection.\n        } catch (value) {\n            // Support: Android 4.0 only\n            // Strict mode functions invoked without .call/.apply get global-object context\n            reject.apply(undefined, [value]);\n        }\n    }\n    jQuery.extend({\n        Deferred: function (func) {\n            var tuples = [\n                    // action, add listener, callbacks,\n                    // ... .then handlers, argument index, [final state]\n                    [\n                        'notify',\n                        'progress',\n                        jQuery.Callbacks('memory'),\n                        jQuery.Callbacks('memory'),\n                        2\n                    ],\n                    [\n                        'resolve',\n                        'done',\n                        jQuery.Callbacks('once memory'),\n                        jQuery.Callbacks('once memory'),\n                        0,\n                        'resolved'\n                    ],\n                    [\n                        'reject',\n                        'fail',\n                        jQuery.Callbacks('once memory'),\n                        jQuery.Callbacks('once memory'),\n                        1,\n                        'rejected'\n                    ]\n                ], state = 'pending', promise = {\n                    state: function () {\n                        return state;\n                    },\n                    always: function () {\n                        deferred.done(arguments).fail(arguments);\n                        return this;\n                    },\n                    'catch': function (fn) {\n                        return promise.then(null, fn);\n                    },\n                    // Keep pipe for back-compat\n                    pipe: function () {\n                        var fns = arguments;\n                        return jQuery.Deferred(function (newDefer) {\n                            jQuery.each(tuples, function (i, tuple) {\n                                // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n                                var fn = jQuery.isFunction(fns[tuple[4]]) && fns[tuple[4]];\n                                // deferred.progress(function() { bind to newDefer or newDefer.notify })\n                                // deferred.done(function() { bind to newDefer or newDefer.resolve })\n                                // deferred.fail(function() { bind to newDefer or newDefer.reject })\n                                deferred[tuple[1]](function () {\n                                    var returned = fn && fn.apply(this, arguments);\n                                    if (returned && jQuery.isFunction(returned.promise)) {\n                                        returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                                    } else {\n                                        newDefer[tuple[0] + 'With'](this, fn ? [returned] : arguments);\n                                    }\n                                });\n                            });\n                            fns = null;\n                        }).promise();\n                    },\n                    then: function (onFulfilled, onRejected, onProgress) {\n                        var maxDepth = 0;\n                        function resolve(depth, deferred, handler, special) {\n                            return function () {\n                                var that = this, args = arguments, mightThrow = function () {\n                                        var returned, then;\n                                        // Support: Promises/A+ section 2.3.3.3.3\n                                        // https://promisesaplus.com/#point-59\n                                        // Ignore double-resolution attempts\n                                        if (depth < maxDepth) {\n                                            return;\n                                        }\n                                        returned = handler.apply(that, args);\n                                        // Support: Promises/A+ section 2.3.1\n                                        // https://promisesaplus.com/#point-48\n                                        if (returned === deferred.promise()) {\n                                            throw new TypeError('Thenable self-resolution');\n                                        }\n                                        // Support: Promises/A+ sections 2.3.3.1, 3.5\n                                        // https://promisesaplus.com/#point-54\n                                        // https://promisesaplus.com/#point-75\n                                        // Retrieve `then` only once\n                                        then = returned && (typeof returned === 'object' || typeof returned === 'function') && returned.then;\n                                        // Handle a returned thenable\n                                        if (jQuery.isFunction(then)) {\n                                            // Special processors (notify) just wait for resolution\n                                            if (special) {\n                                                then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special));    // Normal processors (resolve) also hook into progress\n                                            } else {\n                                                // ...and disregard older resolution values\n                                                maxDepth++;\n                                                then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                                            }    // Handle all other returned values\n                                        } else {\n                                            // Only substitute handlers pass on context\n                                            // and multiple values (non-spec behavior)\n                                            if (handler !== Identity) {\n                                                that = undefined;\n                                                args = [returned];\n                                            }\n                                            // Process the value(s)\n                                            // Default process is resolve\n                                            (special || deferred.resolveWith)(that, args);\n                                        }\n                                    },\n                                    // Only normal processors (resolve) catch and reject exceptions\n                                    process = special ? mightThrow : function () {\n                                        try {\n                                            mightThrow();\n                                        } catch (e) {\n                                            if (jQuery.Deferred.exceptionHook) {\n                                                jQuery.Deferred.exceptionHook(e, process.stackTrace);\n                                            }\n                                            // Support: Promises/A+ section 2.3.3.3.4.1\n                                            // https://promisesaplus.com/#point-61\n                                            // Ignore post-resolution exceptions\n                                            if (depth + 1 >= maxDepth) {\n                                                // Only substitute handlers pass on context\n                                                // and multiple values (non-spec behavior)\n                                                if (handler !== Thrower) {\n                                                    that = undefined;\n                                                    args = [e];\n                                                }\n                                                deferred.rejectWith(that, args);\n                                            }\n                                        }\n                                    };\n                                // Support: Promises/A+ section 2.3.3.3.1\n                                // https://promisesaplus.com/#point-57\n                                // Re-resolve promises immediately to dodge false rejection from\n                                // subsequent errors\n                                if (depth) {\n                                    process();\n                                } else {\n                                    // Call an optional hook to record the stack, in case of exception\n                                    // since it's otherwise lost when execution goes async\n                                    if (jQuery.Deferred.getStackHook) {\n                                        process.stackTrace = jQuery.Deferred.getStackHook();\n                                    }\n                                    window.setTimeout(process);\n                                }\n                            };\n                        }\n                        return jQuery.Deferred(function (newDefer) {\n                            // progress_handlers.add( ... )\n                            tuples[0][3].add(resolve(0, newDefer, jQuery.isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));\n                            // fulfilled_handlers.add( ... )\n                            tuples[1][3].add(resolve(0, newDefer, jQuery.isFunction(onFulfilled) ? onFulfilled : Identity));\n                            // rejected_handlers.add( ... )\n                            tuples[2][3].add(resolve(0, newDefer, jQuery.isFunction(onRejected) ? onRejected : Thrower));\n                        }).promise();\n                    },\n                    // Get a promise for this deferred\n                    // If obj is provided, the promise aspect is added to the object\n                    promise: function (obj) {\n                        return obj != null ? jQuery.extend(obj, promise) : promise;\n                    }\n                }, deferred = {};\n            // Add list-specific methods\n            jQuery.each(tuples, function (i, tuple) {\n                var list = tuple[2], stateString = tuple[5];\n                // promise.progress = list.add\n                // promise.done = list.add\n                // promise.fail = list.add\n                promise[tuple[1]] = list.add;\n                // Handle state\n                if (stateString) {\n                    list.add(function () {\n                        // state = \"resolved\" (i.e., fulfilled)\n                        // state = \"rejected\"\n                        state = stateString;\n                    }, // rejected_callbacks.disable\n                    // fulfilled_callbacks.disable\n                    tuples[3 - i][2].disable, // progress_callbacks.lock\n                    tuples[0][2].lock);\n                }\n                // progress_handlers.fire\n                // fulfilled_handlers.fire\n                // rejected_handlers.fire\n                list.add(tuple[3].fire);\n                // deferred.notify = function() { deferred.notifyWith(...) }\n                // deferred.resolve = function() { deferred.resolveWith(...) }\n                // deferred.reject = function() { deferred.rejectWith(...) }\n                deferred[tuple[0]] = function () {\n                    deferred[tuple[0] + 'With'](this === deferred ? undefined : this, arguments);\n                    return this;\n                };\n                // deferred.notifyWith = list.fireWith\n                // deferred.resolveWith = list.fireWith\n                // deferred.rejectWith = list.fireWith\n                deferred[tuple[0] + 'With'] = list.fireWith;\n            });\n            // Make the deferred a promise\n            promise.promise(deferred);\n            // Call given func if any\n            if (func) {\n                func.call(deferred, deferred);\n            }\n            // All done!\n            return deferred;\n        },\n        // Deferred helper\n        when: function (singleValue) {\n            var\n                // count of uncompleted subordinates\n                remaining = arguments.length,\n                // count of unprocessed arguments\n                i = remaining,\n                // subordinate fulfillment data\n                resolveContexts = Array(i), resolveValues = slice.call(arguments),\n                // the master Deferred\n                master = jQuery.Deferred(),\n                // subordinate callback factory\n                updateFunc = function (i) {\n                    return function (value) {\n                        resolveContexts[i] = this;\n                        resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value;\n                        if (!--remaining) {\n                            master.resolveWith(resolveContexts, resolveValues);\n                        }\n                    };\n                };\n            // Single- and empty arguments are adopted like Promise.resolve\n            if (remaining <= 1) {\n                adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining);\n                // Use .then() to unwrap secondary thenables (cf. gh-3000)\n                if (master.state() === 'pending' || jQuery.isFunction(resolveValues[i] && resolveValues[i].then)) {\n                    return master.then();\n                }\n            }\n            // Multiple arguments are aggregated like Promise.all array elements\n            while (i--) {\n                adoptValue(resolveValues[i], updateFunc(i), master.reject);\n            }\n            return master.promise();\n        }\n    });\n    // These usually indicate a programmer mistake during development,\n    // warn about them ASAP rather than swallowing them by default.\n    var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n    jQuery.Deferred.exceptionHook = function (error, stack) {\n        // Support: IE 8 - 9 only\n        // Console exists when dev tools are open, which can happen at any time\n        if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n            window.console.warn('jQuery.Deferred exception: ' + error.message, error.stack, stack);\n        }\n    };\n    jQuery.readyException = function (error) {\n        window.setTimeout(function () {\n            throw error;\n        });\n    };\n    // The deferred used on DOM ready\n    var readyList = jQuery.Deferred();\n    jQuery.fn.ready = function (fn) {\n        readyList.then(fn)    // Wrap jQuery.readyException in a function so that the lookup\n                              // happens at the time of error handling instead of callback\n                              // registration.\n.catch(function (error) {\n            jQuery.readyException(error);\n        });\n        return this;\n    };\n    jQuery.extend({\n        // Is the DOM ready to be used? Set to true once it occurs.\n        isReady: false,\n        // A counter to track how many items to wait for before\n        // the ready event fires. See #6781\n        readyWait: 1,\n        // Handle when the DOM is ready\n        ready: function (wait) {\n            // Abort if there are pending holds or we're already ready\n            if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n                return;\n            }\n            // Remember that the DOM is ready\n            jQuery.isReady = true;\n            // If a normal DOM Ready event fired, decrement, and wait if need be\n            if (wait !== true && --jQuery.readyWait > 0) {\n                return;\n            }\n            // If there are functions bound, to execute\n            readyList.resolveWith(document, [jQuery]);\n        }\n    });\n    jQuery.ready.then = readyList.then;\n    // The ready event handler and self cleanup method\n    function completed() {\n        document.removeEventListener('DOMContentLoaded', completed);\n        window.removeEventListener('load', completed);\n        jQuery.ready();\n    }\n    // Catch cases where $(document).ready() is called\n    // after the browser event has already occurred.\n    // Support: IE <=9 - 10 only\n    // Older IE sometimes signals \"interactive\" too soon\n    if (document.readyState === 'complete' || document.readyState !== 'loading' && !document.documentElement.doScroll) {\n        // Handle it asynchronously to allow scripts the opportunity to delay ready\n        window.setTimeout(jQuery.ready);\n    } else {\n        // Use the handy event callback\n        document.addEventListener('DOMContentLoaded', completed);\n        // A fallback to window.onload, that will always work\n        window.addEventListener('load', completed);\n    }\n    // Multifunctional method to get and set values of a collection\n    // The value/s can optionally be executed if it's a function\n    var access = function (elems, fn, key, value, chainable, emptyGet, raw) {\n        var i = 0, len = elems.length, bulk = key == null;\n        // Sets many values\n        if (jQuery.type(key) === 'object') {\n            chainable = true;\n            for (i in key) {\n                access(elems, fn, i, key[i], true, emptyGet, raw);\n            }    // Sets one value\n        } else if (value !== undefined) {\n            chainable = true;\n            if (!jQuery.isFunction(value)) {\n                raw = true;\n            }\n            if (bulk) {\n                // Bulk operations run against the entire set\n                if (raw) {\n                    fn.call(elems, value);\n                    fn = null;    // ...except when executing function values\n                } else {\n                    bulk = fn;\n                    fn = function (elem, key, value) {\n                        return bulk.call(jQuery(elem), value);\n                    };\n                }\n            }\n            if (fn) {\n                for (; i < len; i++) {\n                    fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n                }\n            }\n        }\n        if (chainable) {\n            return elems;\n        }\n        // Gets\n        if (bulk) {\n            return fn.call(elems);\n        }\n        return len ? fn(elems[0], key) : emptyGet;\n    };\n    var acceptData = function (owner) {\n        // Accepts only:\n        //  - Node\n        //    - Node.ELEMENT_NODE\n        //    - Node.DOCUMENT_NODE\n        //  - Object\n        //    - Any\n        return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n    };\n    function Data() {\n        this.expando = jQuery.expando + Data.uid++;\n    }\n    Data.uid = 1;\n    Data.prototype = {\n        cache: function (owner) {\n            // Check if the owner object already has a cache\n            var value = owner[this.expando];\n            // If not, create one\n            if (!value) {\n                value = {};\n                // We can accept data for non-element nodes in modern browsers,\n                // but we should not, see #8335.\n                // Always return an empty object.\n                if (acceptData(owner)) {\n                    // If it is a node unlikely to be stringify-ed or looped over\n                    // use plain assignment\n                    if (owner.nodeType) {\n                        owner[this.expando] = value;    // Otherwise secure it in a non-enumerable property\n                                                        // configurable must be true to allow the property to be\n                                                        // deleted when data is removed\n                    } else {\n                        Object.defineProperty(owner, this.expando, {\n                            value: value,\n                            configurable: true\n                        });\n                    }\n                }\n            }\n            return value;\n        },\n        set: function (owner, data, value) {\n            var prop, cache = this.cache(owner);\n            // Handle: [ owner, key, value ] args\n            // Always use camelCase key (gh-2257)\n            if (typeof data === 'string') {\n                cache[jQuery.camelCase(data)] = value;    // Handle: [ owner, { properties } ] args\n            } else {\n                // Copy the properties one-by-one to the cache object\n                for (prop in data) {\n                    cache[jQuery.camelCase(prop)] = data[prop];\n                }\n            }\n            return cache;\n        },\n        get: function (owner, key) {\n            return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)\n            owner[this.expando] && owner[this.expando][jQuery.camelCase(key)];\n        },\n        access: function (owner, key, value) {\n            // In cases where either:\n            //\n            //   1. No key was specified\n            //   2. A string key was specified, but no value provided\n            //\n            // Take the \"read\" path and allow the get method to determine\n            // which value to return, respectively either:\n            //\n            //   1. The entire cache object\n            //   2. The data stored at the key\n            //\n            if (key === undefined || key && typeof key === 'string' && value === undefined) {\n                return this.get(owner, key);\n            }\n            // When the key is not a string, or both a key and value\n            // are specified, set or extend (existing objects) with either:\n            //\n            //   1. An object of properties\n            //   2. A key and value\n            //\n            this.set(owner, key, value);\n            // Since the \"set\" path can have two possible entry points\n            // return the expected data based on which path was taken[*]\n            return value !== undefined ? value : key;\n        },\n        remove: function (owner, key) {\n            var i, cache = owner[this.expando];\n            if (cache === undefined) {\n                return;\n            }\n            if (key !== undefined) {\n                // Support array or space separated string of keys\n                if (Array.isArray(key)) {\n                    // If key is an array of keys...\n                    // We always set camelCase keys, so remove that.\n                    key = key.map(jQuery.camelCase);\n                } else {\n                    key = jQuery.camelCase(key);\n                    // If a key with the spaces exists, use it.\n                    // Otherwise, create an array by matching non-whitespace\n                    key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n                }\n                i = key.length;\n                while (i--) {\n                    delete cache[key[i]];\n                }\n            }\n            // Remove the expando if there's no more data\n            if (key === undefined || jQuery.isEmptyObject(cache)) {\n                // Support: Chrome <=35 - 45\n                // Webkit & Blink performance suffers when deleting properties\n                // from DOM nodes, so set to undefined instead\n                // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n                if (owner.nodeType) {\n                    owner[this.expando] = undefined;\n                } else {\n                    delete owner[this.expando];\n                }\n            }\n        },\n        hasData: function (owner) {\n            var cache = owner[this.expando];\n            return cache !== undefined && !jQuery.isEmptyObject(cache);\n        }\n    };\n    var dataPriv = new Data();\n    var dataUser = new Data();\n    //\tImplementation Summary\n    //\n    //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n    //\t2. Improve the module's maintainability by reducing the storage\n    //\t\tpaths to a single mechanism.\n    //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n    //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n    //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n    //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n    var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/, rmultiDash = /[A-Z]/g;\n    function getData(data) {\n        if (data === 'true') {\n            return true;\n        }\n        if (data === 'false') {\n            return false;\n        }\n        if (data === 'null') {\n            return null;\n        }\n        // Only convert to a number if it doesn't change the string\n        if (data === +data + '') {\n            return +data;\n        }\n        if (rbrace.test(data)) {\n            return JSON.parse(data);\n        }\n        return data;\n    }\n    function dataAttr(elem, key, data) {\n        var name;\n        // If nothing was found internally, try to fetch any\n        // data from the HTML5 data-* attribute\n        if (data === undefined && elem.nodeType === 1) {\n            name = 'data-' + key.replace(rmultiDash, '-$&').toLowerCase();\n            data = elem.getAttribute(name);\n            if (typeof data === 'string') {\n                try {\n                    data = getData(data);\n                } catch (e) {\n                }\n                // Make sure we set the data so it isn't changed later\n                dataUser.set(elem, key, data);\n            } else {\n                data = undefined;\n            }\n        }\n        return data;\n    }\n    jQuery.extend({\n        hasData: function (elem) {\n            return dataUser.hasData(elem) || dataPriv.hasData(elem);\n        },\n        data: function (elem, name, data) {\n            return dataUser.access(elem, name, data);\n        },\n        removeData: function (elem, name) {\n            dataUser.remove(elem, name);\n        },\n        // TODO: Now that all calls to _data and _removeData have been replaced\n        // with direct calls to dataPriv methods, these can be deprecated.\n        _data: function (elem, name, data) {\n            return dataPriv.access(elem, name, data);\n        },\n        _removeData: function (elem, name) {\n            dataPriv.remove(elem, name);\n        }\n    });\n    jQuery.fn.extend({\n        data: function (key, value) {\n            var i, name, data, elem = this[0], attrs = elem && elem.attributes;\n            // Gets all values\n            if (key === undefined) {\n                if (this.length) {\n                    data = dataUser.get(elem);\n                    if (elem.nodeType === 1 && !dataPriv.get(elem, 'hasDataAttrs')) {\n                        i = attrs.length;\n                        while (i--) {\n                            // Support: IE 11 only\n                            // The attrs elements can be null (#14894)\n                            if (attrs[i]) {\n                                name = attrs[i].name;\n                                if (name.indexOf('data-') === 0) {\n                                    name = jQuery.camelCase(name.slice(5));\n                                    dataAttr(elem, name, data[name]);\n                                }\n                            }\n                        }\n                        dataPriv.set(elem, 'hasDataAttrs', true);\n                    }\n                }\n                return data;\n            }\n            // Sets multiple values\n            if (typeof key === 'object') {\n                return this.each(function () {\n                    dataUser.set(this, key);\n                });\n            }\n            return access(this, function (value) {\n                var data;\n                // The calling jQuery object (element matches) is not empty\n                // (and therefore has an element appears at this[ 0 ]) and the\n                // `value` parameter was not undefined. An empty jQuery object\n                // will result in `undefined` for elem = this[ 0 ] which will\n                // throw an exception if an attempt to read a data cache is made.\n                if (elem && value === undefined) {\n                    // Attempt to get data from the cache\n                    // The key will always be camelCased in Data\n                    data = dataUser.get(elem, key);\n                    if (data !== undefined) {\n                        return data;\n                    }\n                    // Attempt to \"discover\" the data in\n                    // HTML5 custom data-* attrs\n                    data = dataAttr(elem, key);\n                    if (data !== undefined) {\n                        return data;\n                    }\n                    // We tried really hard, but the data doesn't exist.\n                    return;\n                }\n                // Set the data...\n                this.each(function () {\n                    // We always store the camelCased key\n                    dataUser.set(this, key, value);\n                });\n            }, null, value, arguments.length > 1, null, true);\n        },\n        removeData: function (key) {\n            return this.each(function () {\n                dataUser.remove(this, key);\n            });\n        }\n    });\n    jQuery.extend({\n        queue: function (elem, type, data) {\n            var queue;\n            if (elem) {\n                type = (type || 'fx') + 'queue';\n                queue = dataPriv.get(elem, type);\n                // Speed up dequeue by getting out quickly if this is just a lookup\n                if (data) {\n                    if (!queue || Array.isArray(data)) {\n                        queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n                    } else {\n                        queue.push(data);\n                    }\n                }\n                return queue || [];\n            }\n        },\n        dequeue: function (elem, type) {\n            type = type || 'fx';\n            var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery._queueHooks(elem, type), next = function () {\n                    jQuery.dequeue(elem, type);\n                };\n            // If the fx queue is dequeued, always remove the progress sentinel\n            if (fn === 'inprogress') {\n                fn = queue.shift();\n                startLength--;\n            }\n            if (fn) {\n                // Add a progress sentinel to prevent the fx queue from being\n                // automatically dequeued\n                if (type === 'fx') {\n                    queue.unshift('inprogress');\n                }\n                // Clear up the last queue stop function\n                delete hooks.stop;\n                fn.call(elem, next, hooks);\n            }\n            if (!startLength && hooks) {\n                hooks.empty.fire();\n            }\n        },\n        // Not public - generate a queueHooks object, or return the current one\n        _queueHooks: function (elem, type) {\n            var key = type + 'queueHooks';\n            return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n                empty: jQuery.Callbacks('once memory').add(function () {\n                    dataPriv.remove(elem, [\n                        type + 'queue',\n                        key\n                    ]);\n                })\n            });\n        }\n    });\n    jQuery.fn.extend({\n        queue: function (type, data) {\n            var setter = 2;\n            if (typeof type !== 'string') {\n                data = type;\n                type = 'fx';\n                setter--;\n            }\n            if (arguments.length < setter) {\n                return jQuery.queue(this[0], type);\n            }\n            return data === undefined ? this : this.each(function () {\n                var queue = jQuery.queue(this, type, data);\n                // Ensure a hooks for this queue\n                jQuery._queueHooks(this, type);\n                if (type === 'fx' && queue[0] !== 'inprogress') {\n                    jQuery.dequeue(this, type);\n                }\n            });\n        },\n        dequeue: function (type) {\n            return this.each(function () {\n                jQuery.dequeue(this, type);\n            });\n        },\n        clearQueue: function (type) {\n            return this.queue(type || 'fx', []);\n        },\n        // Get a promise resolved when queues of a certain type\n        // are emptied (fx is the type by default)\n        promise: function (type, obj) {\n            var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i = this.length, resolve = function () {\n                    if (!--count) {\n                        defer.resolveWith(elements, [elements]);\n                    }\n                };\n            if (typeof type !== 'string') {\n                obj = type;\n                type = undefined;\n            }\n            type = type || 'fx';\n            while (i--) {\n                tmp = dataPriv.get(elements[i], type + 'queueHooks');\n                if (tmp && tmp.empty) {\n                    count++;\n                    tmp.empty.add(resolve);\n                }\n            }\n            resolve();\n            return defer.promise(obj);\n        }\n    });\n    var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n    var rcssNum = new RegExp('^(?:([+-])=|)(' + pnum + ')([a-z%]*)$', 'i');\n    var cssExpand = [\n        'Top',\n        'Right',\n        'Bottom',\n        'Left'\n    ];\n    var isHiddenWithinTree = function (elem, el) {\n        // isHiddenWithinTree might be called from jQuery#filter function;\n        // in that case, element will be second argument\n        elem = el || elem;\n        // Inline style trumps all\n        return elem.style.display === 'none' || elem.style.display === '' && // Otherwise, check computed style\n        // Support: Firefox <=43 - 45\n        // Disconnected elements can have computed display: none, so first confirm that elem is\n        // in the document.\n        jQuery.contains(elem.ownerDocument, elem) && jQuery.css(elem, 'display') === 'none';\n    };\n    var swap = function (elem, options, callback, args) {\n        var ret, name, old = {};\n        // Remember the old values, and insert the new ones\n        for (name in options) {\n            old[name] = elem.style[name];\n            elem.style[name] = options[name];\n        }\n        ret = callback.apply(elem, args || []);\n        // Revert the old values\n        for (name in options) {\n            elem.style[name] = old[name];\n        }\n        return ret;\n    };\n    function adjustCSS(elem, prop, valueParts, tween) {\n        var adjusted, scale = 1, maxIterations = 20, currentValue = tween ? function () {\n                return tween.cur();\n            } : function () {\n                return jQuery.css(elem, prop, '');\n            }, initial = currentValue(), unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? '' : 'px'),\n            // Starting value computation is required for potential unit mismatches\n            initialInUnit = (jQuery.cssNumber[prop] || unit !== 'px' && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n        if (initialInUnit && initialInUnit[3] !== unit) {\n            // Trust units reported by jQuery.css\n            unit = unit || initialInUnit[3];\n            // Make sure we update the tween properties later on\n            valueParts = valueParts || [];\n            // Iteratively approximate from a nonzero starting point\n            initialInUnit = +initial || 1;\n            do {\n                // If previous iteration zeroed out, double until we get *something*.\n                // Use string for doubling so we don't accidentally see scale as unchanged below\n                scale = scale || '.5';\n                // Adjust and apply\n                initialInUnit = initialInUnit / scale;\n                jQuery.style(elem, prop, initialInUnit + unit);    // Update scale, tolerating zero or NaN from tween.cur()\n                                                                   // Break the loop if scale is unchanged or perfect, or if we've just had enough.\n            } while (scale !== (scale = currentValue() / initial) && scale !== 1 && --maxIterations);\n        }\n        if (valueParts) {\n            initialInUnit = +initialInUnit || +initial || 0;\n            // Apply relative offset (+=/-=) if specified\n            adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n            if (tween) {\n                tween.unit = unit;\n                tween.start = initialInUnit;\n                tween.end = adjusted;\n            }\n        }\n        return adjusted;\n    }\n    var defaultDisplayMap = {};\n    function getDefaultDisplay(elem) {\n        var temp, doc = elem.ownerDocument, nodeName = elem.nodeName, display = defaultDisplayMap[nodeName];\n        if (display) {\n            return display;\n        }\n        temp = doc.body.appendChild(doc.createElement(nodeName));\n        display = jQuery.css(temp, 'display');\n        temp.parentNode.removeChild(temp);\n        if (display === 'none') {\n            display = 'block';\n        }\n        defaultDisplayMap[nodeName] = display;\n        return display;\n    }\n    function showHide(elements, show) {\n        var display, elem, values = [], index = 0, length = elements.length;\n        // Determine new display value for elements that need to change\n        for (; index < length; index++) {\n            elem = elements[index];\n            if (!elem.style) {\n                continue;\n            }\n            display = elem.style.display;\n            if (show) {\n                // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n                // check is required in this first loop unless we have a nonempty display value (either\n                // inline or about-to-be-restored)\n                if (display === 'none') {\n                    values[index] = dataPriv.get(elem, 'display') || null;\n                    if (!values[index]) {\n                        elem.style.display = '';\n                    }\n                }\n                if (elem.style.display === '' && isHiddenWithinTree(elem)) {\n                    values[index] = getDefaultDisplay(elem);\n                }\n            } else {\n                if (display !== 'none') {\n                    values[index] = 'none';\n                    // Remember what we're overwriting\n                    dataPriv.set(elem, 'display', display);\n                }\n            }\n        }\n        // Set the display of the elements in a second loop to avoid constant reflow\n        for (index = 0; index < length; index++) {\n            if (values[index] != null) {\n                elements[index].style.display = values[index];\n            }\n        }\n        return elements;\n    }\n    jQuery.fn.extend({\n        show: function () {\n            return showHide(this, true);\n        },\n        hide: function () {\n            return showHide(this);\n        },\n        toggle: function (state) {\n            if (typeof state === 'boolean') {\n                return state ? this.show() : this.hide();\n            }\n            return this.each(function () {\n                if (isHiddenWithinTree(this)) {\n                    jQuery(this).show();\n                } else {\n                    jQuery(this).hide();\n                }\n            });\n        }\n    });\n    var rcheckableType = /^(?:checkbox|radio)$/i;\n    var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i;\n    var rscriptType = /^$|\\/(?:java|ecma)script/i;\n    // We have to close these tags to support XHTML (#13200)\n    var wrapMap = {\n        // Support: IE <=9 only\n        option: [\n            1,\n            '<select multiple=\\'multiple\\'>',\n            '</select>'\n        ],\n        // XHTML parsers do not magically insert elements in the\n        // same way that tag soup parsers do. So we cannot shorten\n        // this by omitting <tbody> or other required elements.\n        thead: [\n            1,\n            '<table>',\n            '</table>'\n        ],\n        col: [\n            2,\n            '<table><colgroup>',\n            '</colgroup></table>'\n        ],\n        tr: [\n            2,\n            '<table><tbody>',\n            '</tbody></table>'\n        ],\n        td: [\n            3,\n            '<table><tbody><tr>',\n            '</tr></tbody></table>'\n        ],\n        _default: [\n            0,\n            '',\n            ''\n        ]\n    };\n    // Support: IE <=9 only\n    wrapMap.optgroup = wrapMap.option;\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n    wrapMap.th = wrapMap.td;\n    function getAll(context, tag) {\n        // Support: IE <=9 - 11 only\n        // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n        var ret;\n        if (typeof context.getElementsByTagName !== 'undefined') {\n            ret = context.getElementsByTagName(tag || '*');\n        } else if (typeof context.querySelectorAll !== 'undefined') {\n            ret = context.querySelectorAll(tag || '*');\n        } else {\n            ret = [];\n        }\n        if (tag === undefined || tag && nodeName(context, tag)) {\n            return jQuery.merge([context], ret);\n        }\n        return ret;\n    }\n    // Mark scripts as having already been evaluated\n    function setGlobalEval(elems, refElements) {\n        var i = 0, l = elems.length;\n        for (; i < l; i++) {\n            dataPriv.set(elems[i], 'globalEval', !refElements || dataPriv.get(refElements[i], 'globalEval'));\n        }\n    }\n    var rhtml = /<|&#?\\w+;/;\n    function buildFragment(elems, context, scripts, selection, ignored) {\n        var elem, tmp, tag, wrap, contains, j, fragment = context.createDocumentFragment(), nodes = [], i = 0, l = elems.length;\n        for (; i < l; i++) {\n            elem = elems[i];\n            if (elem || elem === 0) {\n                // Add nodes directly\n                if (jQuery.type(elem) === 'object') {\n                    // Support: Android <=4.0 only, PhantomJS 1 only\n                    // push.apply(_, arraylike) throws on ancient WebKit\n                    jQuery.merge(nodes, elem.nodeType ? [elem] : elem);    // Convert non-html into a text node\n                } else if (!rhtml.test(elem)) {\n                    nodes.push(context.createTextNode(elem));    // Convert html into DOM nodes\n                } else {\n                    tmp = tmp || fragment.appendChild(context.createElement('div'));\n                    // Deserialize a standard representation\n                    tag = (rtagName.exec(elem) || [\n                        '',\n                        ''\n                    ])[1].toLowerCase();\n                    wrap = wrapMap[tag] || wrapMap._default;\n                    tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];\n                    // Descend through wrappers to the right content\n                    j = wrap[0];\n                    while (j--) {\n                        tmp = tmp.lastChild;\n                    }\n                    // Support: Android <=4.0 only, PhantomJS 1 only\n                    // push.apply(_, arraylike) throws on ancient WebKit\n                    jQuery.merge(nodes, tmp.childNodes);\n                    // Remember the top-level container\n                    tmp = fragment.firstChild;\n                    // Ensure the created nodes are orphaned (#12392)\n                    tmp.textContent = '';\n                }\n            }\n        }\n        // Remove wrapper from fragment\n        fragment.textContent = '';\n        i = 0;\n        while (elem = nodes[i++]) {\n            // Skip elements already in the context collection (trac-4087)\n            if (selection && jQuery.inArray(elem, selection) > -1) {\n                if (ignored) {\n                    ignored.push(elem);\n                }\n                continue;\n            }\n            contains = jQuery.contains(elem.ownerDocument, elem);\n            // Append to fragment\n            tmp = getAll(fragment.appendChild(elem), 'script');\n            // Preserve script evaluation history\n            if (contains) {\n                setGlobalEval(tmp);\n            }\n            // Capture executables\n            if (scripts) {\n                j = 0;\n                while (elem = tmp[j++]) {\n                    if (rscriptType.test(elem.type || '')) {\n                        scripts.push(elem);\n                    }\n                }\n            }\n        }\n        return fragment;\n    }\n    (function () {\n        var fragment = document.createDocumentFragment(), div = fragment.appendChild(document.createElement('div')), input = document.createElement('input');\n        // Support: Android 4.0 - 4.3 only\n        // Check state lost if the name is set (#11217)\n        // Support: Windows Web Apps (WWA)\n        // `name` and `type` must use .setAttribute for WWA (#14901)\n        input.setAttribute('type', 'radio');\n        input.setAttribute('checked', 'checked');\n        input.setAttribute('name', 't');\n        div.appendChild(input);\n        // Support: Android <=4.1 only\n        // Older WebKit doesn't clone checked state correctly in fragments\n        support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;\n        // Support: IE <=11 only\n        // Make sure textarea (and checkbox) defaultValue is properly cloned\n        div.innerHTML = '<textarea>x</textarea>';\n        support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n    }());\n    var documentElement = document.documentElement;\n    var rkeyEvent = /^key/, rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n    function returnTrue() {\n        return true;\n    }\n    function returnFalse() {\n        return false;\n    }\n    // Support: IE <=9 only\n    // See #13393 for more info\n    function safeActiveElement() {\n        try {\n            return document.activeElement;\n        } catch (err) {\n        }\n    }\n    function on(elem, types, selector, data, fn, one) {\n        var origFn, type;\n        // Types can be a map of types/handlers\n        if (typeof types === 'object') {\n            // ( types-Object, selector, data )\n            if (typeof selector !== 'string') {\n                // ( types-Object, data )\n                data = data || selector;\n                selector = undefined;\n            }\n            for (type in types) {\n                on(elem, type, selector, data, types[type], one);\n            }\n            return elem;\n        }\n        if (data == null && fn == null) {\n            // ( types, fn )\n            fn = selector;\n            data = selector = undefined;\n        } else if (fn == null) {\n            if (typeof selector === 'string') {\n                // ( types, selector, fn )\n                fn = data;\n                data = undefined;\n            } else {\n                // ( types, data, fn )\n                fn = data;\n                data = selector;\n                selector = undefined;\n            }\n        }\n        if (fn === false) {\n            fn = returnFalse;\n        } else if (!fn) {\n            return elem;\n        }\n        if (one === 1) {\n            origFn = fn;\n            fn = function (event) {\n                // Can use an empty set, since event contains the info\n                jQuery().off(event);\n                return origFn.apply(this, arguments);\n            };\n            // Use same guid so caller can remove using origFn\n            fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n        }\n        return elem.each(function () {\n            jQuery.event.add(this, types, fn, data, selector);\n        });\n    }\n    /*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\n    jQuery.event = {\n        global: {},\n        add: function (elem, types, handler, data, selector) {\n            var handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);\n            // Don't attach events to noData or text/comment nodes (but allow plain objects)\n            if (!elemData) {\n                return;\n            }\n            // Caller can pass in an object of custom data in lieu of the handler\n            if (handler.handler) {\n                handleObjIn = handler;\n                handler = handleObjIn.handler;\n                selector = handleObjIn.selector;\n            }\n            // Ensure that invalid selectors throw exceptions at attach time\n            // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n            if (selector) {\n                jQuery.find.matchesSelector(documentElement, selector);\n            }\n            // Make sure that the handler has a unique ID, used to find/remove it later\n            if (!handler.guid) {\n                handler.guid = jQuery.guid++;\n            }\n            // Init the element's event structure and main handler, if this is the first\n            if (!(events = elemData.events)) {\n                events = elemData.events = {};\n            }\n            if (!(eventHandle = elemData.handle)) {\n                eventHandle = elemData.handle = function (e) {\n                    // Discard the second event of a jQuery.event.trigger() and\n                    // when an event is called after a page has unloaded\n                    return typeof jQuery !== 'undefined' && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n                };\n            }\n            // Handle multiple events separated by a space\n            types = (types || '').match(rnothtmlwhite) || [''];\n            t = types.length;\n            while (t--) {\n                tmp = rtypenamespace.exec(types[t]) || [];\n                type = origType = tmp[1];\n                namespaces = (tmp[2] || '').split('.').sort();\n                // There *must* be a type, no attaching namespace-only handlers\n                if (!type) {\n                    continue;\n                }\n                // If event changes its type, use the special event handlers for the changed type\n                special = jQuery.event.special[type] || {};\n                // If selector defined, determine special event api type, otherwise given type\n                type = (selector ? special.delegateType : special.bindType) || type;\n                // Update special based on newly reset type\n                special = jQuery.event.special[type] || {};\n                // handleObj is passed to all event handlers\n                handleObj = jQuery.extend({\n                    type: type,\n                    origType: origType,\n                    data: data,\n                    handler: handler,\n                    guid: handler.guid,\n                    selector: selector,\n                    needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n                    namespace: namespaces.join('.')\n                }, handleObjIn);\n                // Init the event handler queue if we're the first\n                if (!(handlers = events[type])) {\n                    handlers = events[type] = [];\n                    handlers.delegateCount = 0;\n                    // Only use addEventListener if the special events handler returns false\n                    if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n                        if (elem.addEventListener) {\n                            elem.addEventListener(type, eventHandle);\n                        }\n                    }\n                }\n                if (special.add) {\n                    special.add.call(elem, handleObj);\n                    if (!handleObj.handler.guid) {\n                        handleObj.handler.guid = handler.guid;\n                    }\n                }\n                // Add to the element's handler list, delegates in front\n                if (selector) {\n                    handlers.splice(handlers.delegateCount++, 0, handleObj);\n                } else {\n                    handlers.push(handleObj);\n                }\n                // Keep track of which events have ever been used, for event optimization\n                jQuery.event.global[type] = true;\n            }\n        },\n        // Detach an event or set of events from an element\n        remove: function (elem, types, handler, selector, mappedTypes) {\n            var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n            if (!elemData || !(events = elemData.events)) {\n                return;\n            }\n            // Once for each type.namespace in types; type may be omitted\n            types = (types || '').match(rnothtmlwhite) || [''];\n            t = types.length;\n            while (t--) {\n                tmp = rtypenamespace.exec(types[t]) || [];\n                type = origType = tmp[1];\n                namespaces = (tmp[2] || '').split('.').sort();\n                // Unbind all events (on this namespace, if provided) for the element\n                if (!type) {\n                    for (type in events) {\n                        jQuery.event.remove(elem, type + types[t], handler, selector, true);\n                    }\n                    continue;\n                }\n                special = jQuery.event.special[type] || {};\n                type = (selector ? special.delegateType : special.bindType) || type;\n                handlers = events[type] || [];\n                tmp = tmp[2] && new RegExp('(^|\\\\.)' + namespaces.join('\\\\.(?:.*\\\\.|)') + '(\\\\.|$)');\n                // Remove matching events\n                origCount = j = handlers.length;\n                while (j--) {\n                    handleObj = handlers[j];\n                    if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === '**' && handleObj.selector)) {\n                        handlers.splice(j, 1);\n                        if (handleObj.selector) {\n                            handlers.delegateCount--;\n                        }\n                        if (special.remove) {\n                            special.remove.call(elem, handleObj);\n                        }\n                    }\n                }\n                // Remove generic event handler if we removed something and no more handlers exist\n                // (avoids potential for endless recursion during removal of special event handlers)\n                if (origCount && !handlers.length) {\n                    if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n                        jQuery.removeEvent(elem, type, elemData.handle);\n                    }\n                    delete events[type];\n                }\n            }\n            // Remove data and the expando if it's no longer used\n            if (jQuery.isEmptyObject(events)) {\n                dataPriv.remove(elem, 'handle events');\n            }\n        },\n        dispatch: function (nativeEvent) {\n            // Make a writable jQuery.Event from the native event object\n            var event = jQuery.event.fix(nativeEvent);\n            var i, j, ret, matched, handleObj, handlerQueue, args = new Array(arguments.length), handlers = (dataPriv.get(this, 'events') || {})[event.type] || [], special = jQuery.event.special[event.type] || {};\n            // Use the fix-ed jQuery.Event rather than the (read-only) native event\n            args[0] = event;\n            for (i = 1; i < arguments.length; i++) {\n                args[i] = arguments[i];\n            }\n            event.delegateTarget = this;\n            // Call the preDispatch hook for the mapped type, and let it bail if desired\n            if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n                return;\n            }\n            // Determine handlers\n            handlerQueue = jQuery.event.handlers.call(this, event, handlers);\n            // Run delegates first; they may want to stop propagation beneath us\n            i = 0;\n            while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n                event.currentTarget = matched.elem;\n                j = 0;\n                while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n                    // Triggered event must either 1) have no namespace, or 2) have namespace(s)\n                    // a subset or equal to those in the bound event (both can have no namespace).\n                    if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {\n                        event.handleObj = handleObj;\n                        event.data = handleObj.data;\n                        ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n                        if (ret !== undefined) {\n                            if ((event.result = ret) === false) {\n                                event.preventDefault();\n                                event.stopPropagation();\n                            }\n                        }\n                    }\n                }\n            }\n            // Call the postDispatch hook for the mapped type\n            if (special.postDispatch) {\n                special.postDispatch.call(this, event);\n            }\n            return event.result;\n        },\n        handlers: function (event, handlers) {\n            var i, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;\n            // Find delegate handlers\n            if (delegateCount && // Support: IE <=9\n                // Black-hole SVG <use> instance trees (trac-13180)\n                cur.nodeType && // Support: Firefox <=42\n                // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n                // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n                // Support: IE 11 only\n                // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n                !(event.type === 'click' && event.button >= 1)) {\n                for (; cur !== this; cur = cur.parentNode || this) {\n                    // Don't check non-elements (#13208)\n                    // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n                    if (cur.nodeType === 1 && !(event.type === 'click' && cur.disabled === true)) {\n                        matchedHandlers = [];\n                        matchedSelectors = {};\n                        for (i = 0; i < delegateCount; i++) {\n                            handleObj = handlers[i];\n                            // Don't conflict with Object.prototype properties (#13203)\n                            sel = handleObj.selector + ' ';\n                            if (matchedSelectors[sel] === undefined) {\n                                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n                            }\n                            if (matchedSelectors[sel]) {\n                                matchedHandlers.push(handleObj);\n                            }\n                        }\n                        if (matchedHandlers.length) {\n                            handlerQueue.push({\n                                elem: cur,\n                                handlers: matchedHandlers\n                            });\n                        }\n                    }\n                }\n            }\n            // Add the remaining (directly-bound) handlers\n            cur = this;\n            if (delegateCount < handlers.length) {\n                handlerQueue.push({\n                    elem: cur,\n                    handlers: handlers.slice(delegateCount)\n                });\n            }\n            return handlerQueue;\n        },\n        addProp: function (name, hook) {\n            Object.defineProperty(jQuery.Event.prototype, name, {\n                enumerable: true,\n                configurable: true,\n                get: jQuery.isFunction(hook) ? function () {\n                    if (this.originalEvent) {\n                        return hook(this.originalEvent);\n                    }\n                } : function () {\n                    if (this.originalEvent) {\n                        return this.originalEvent[name];\n                    }\n                },\n                set: function (value) {\n                    Object.defineProperty(this, name, {\n                        enumerable: true,\n                        configurable: true,\n                        writable: true,\n                        value: value\n                    });\n                }\n            });\n        },\n        fix: function (originalEvent) {\n            return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n        },\n        special: {\n            load: {\n                // Prevent triggered image.load events from bubbling to window.load\n                noBubble: true\n            },\n            focus: {\n                // Fire native event if possible so blur/focus sequence is correct\n                trigger: function () {\n                    if (this !== safeActiveElement() && this.focus) {\n                        this.focus();\n                        return false;\n                    }\n                },\n                delegateType: 'focusin'\n            },\n            blur: {\n                trigger: function () {\n                    if (this === safeActiveElement() && this.blur) {\n                        this.blur();\n                        return false;\n                    }\n                },\n                delegateType: 'focusout'\n            },\n            click: {\n                // For checkbox, fire native event so checked state will be right\n                trigger: function () {\n                    if (this.type === 'checkbox' && this.click && nodeName(this, 'input')) {\n                        this.click();\n                        return false;\n                    }\n                },\n                // For cross-browser consistency, don't fire native .click() on links\n                _default: function (event) {\n                    return nodeName(event.target, 'a');\n                }\n            },\n            beforeunload: {\n                postDispatch: function (event) {\n                    // Support: Firefox 20+\n                    // Firefox doesn't alert if the returnValue field is not set.\n                    if (event.result !== undefined && event.originalEvent) {\n                        event.originalEvent.returnValue = event.result;\n                    }\n                }\n            }\n        }\n    };\n    jQuery.removeEvent = function (elem, type, handle) {\n        // This \"if\" is needed for plain objects\n        if (elem.removeEventListener) {\n            elem.removeEventListener(type, handle);\n        }\n    };\n    jQuery.Event = function (src, props) {\n        // Allow instantiation without the 'new' keyword\n        if (!(this instanceof jQuery.Event)) {\n            return new jQuery.Event(src, props);\n        }\n        // Event object\n        if (src && src.type) {\n            this.originalEvent = src;\n            this.type = src.type;\n            // Events bubbling up the document may have been marked as prevented\n            // by a handler lower down the tree; reflect the correct value.\n            this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only\n            src.returnValue === false ? returnTrue : returnFalse;\n            // Create target properties\n            // Support: Safari <=6 - 7 only\n            // Target should not be a text node (#504, #13143)\n            this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n            this.currentTarget = src.currentTarget;\n            this.relatedTarget = src.relatedTarget;    // Event type\n        } else {\n            this.type = src;\n        }\n        // Put explicitly provided properties onto the event object\n        if (props) {\n            jQuery.extend(this, props);\n        }\n        // Create a timestamp if incoming event doesn't have one\n        this.timeStamp = src && src.timeStamp || jQuery.now();\n        // Mark it as fixed\n        this[jQuery.expando] = true;\n    };\n    // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n    // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n    jQuery.Event.prototype = {\n        constructor: jQuery.Event,\n        isDefaultPrevented: returnFalse,\n        isPropagationStopped: returnFalse,\n        isImmediatePropagationStopped: returnFalse,\n        isSimulated: false,\n        preventDefault: function () {\n            var e = this.originalEvent;\n            this.isDefaultPrevented = returnTrue;\n            if (e && !this.isSimulated) {\n                e.preventDefault();\n            }\n        },\n        stopPropagation: function () {\n            var e = this.originalEvent;\n            this.isPropagationStopped = returnTrue;\n            if (e && !this.isSimulated) {\n                e.stopPropagation();\n            }\n        },\n        stopImmediatePropagation: function () {\n            var e = this.originalEvent;\n            this.isImmediatePropagationStopped = returnTrue;\n            if (e && !this.isSimulated) {\n                e.stopImmediatePropagation();\n            }\n            this.stopPropagation();\n        }\n    };\n    // Includes all common event props including KeyEvent and MouseEvent specific props\n    jQuery.each({\n        altKey: true,\n        bubbles: true,\n        cancelable: true,\n        changedTouches: true,\n        ctrlKey: true,\n        detail: true,\n        eventPhase: true,\n        metaKey: true,\n        pageX: true,\n        pageY: true,\n        shiftKey: true,\n        view: true,\n        'char': true,\n        charCode: true,\n        key: true,\n        keyCode: true,\n        button: true,\n        buttons: true,\n        clientX: true,\n        clientY: true,\n        offsetX: true,\n        offsetY: true,\n        pointerId: true,\n        pointerType: true,\n        screenX: true,\n        screenY: true,\n        targetTouches: true,\n        toElement: true,\n        touches: true,\n        which: function (event) {\n            var button = event.button;\n            // Add which for key events\n            if (event.which == null && rkeyEvent.test(event.type)) {\n                return event.charCode != null ? event.charCode : event.keyCode;\n            }\n            // Add which for click: 1 === left; 2 === middle; 3 === right\n            if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {\n                if (button & 1) {\n                    return 1;\n                }\n                if (button & 2) {\n                    return 3;\n                }\n                if (button & 4) {\n                    return 2;\n                }\n                return 0;\n            }\n            return event.which;\n        }\n    }, jQuery.event.addProp);\n    // Create mouseenter/leave events using mouseover/out and event-time checks\n    // so that event delegation works in jQuery.\n    // Do the same for pointerenter/pointerleave and pointerover/pointerout\n    //\n    // Support: Safari 7 only\n    // Safari sends mouseenter too often; see:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n    // for the description of the bug (it existed in older Chrome versions as well).\n    jQuery.each({\n        mouseenter: 'mouseover',\n        mouseleave: 'mouseout',\n        pointerenter: 'pointerover',\n        pointerleave: 'pointerout'\n    }, function (orig, fix) {\n        jQuery.event.special[orig] = {\n            delegateType: fix,\n            bindType: fix,\n            handle: function (event) {\n                var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;\n                // For mouseenter/leave call the handler if related is outside the target.\n                // NB: No relatedTarget if the mouse left/entered the browser window\n                if (!related || related !== target && !jQuery.contains(target, related)) {\n                    event.type = handleObj.origType;\n                    ret = handleObj.handler.apply(this, arguments);\n                    event.type = fix;\n                }\n                return ret;\n            }\n        };\n    });\n    jQuery.fn.extend({\n        on: function (types, selector, data, fn) {\n            return on(this, types, selector, data, fn);\n        },\n        one: function (types, selector, data, fn) {\n            return on(this, types, selector, data, fn, 1);\n        },\n        off: function (types, selector, fn) {\n            var handleObj, type;\n            if (types && types.preventDefault && types.handleObj) {\n                // ( event )  dispatched jQuery.Event\n                handleObj = types.handleObj;\n                jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + '.' + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n                return this;\n            }\n            if (typeof types === 'object') {\n                // ( types-object [, selector] )\n                for (type in types) {\n                    this.off(type, selector, types[type]);\n                }\n                return this;\n            }\n            if (selector === false || typeof selector === 'function') {\n                // ( types [, fn] )\n                fn = selector;\n                selector = undefined;\n            }\n            if (fn === false) {\n                fn = returnFalse;\n            }\n            return this.each(function () {\n                jQuery.event.remove(this, types, fn, selector);\n            });\n        }\n    });\n    var\n        /* eslint-disable max-len */\n        // See https://github.com/eslint/eslint/issues/3229\n        rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n        /* eslint-enable */\n        // Support: IE <=10 - 11, Edge 12 - 13\n        // In IE/Edge using regex groups here causes severe slowdowns.\n        // See https://connect.microsoft.com/IE/feedback/details/1736512/\n        rnoInnerhtml = /<script|<style|<link/i,\n        // checked=\"checked\" or checked\n        rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i, rscriptTypeMasked = /^true\\/(.*)/, rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n    // Prefer a tbody over its parent table for containing new rows\n    function manipulationTarget(elem, content) {\n        if (nodeName(elem, 'table') && nodeName(content.nodeType !== 11 ? content : content.firstChild, 'tr')) {\n            return jQuery('>tbody', elem)[0] || elem;\n        }\n        return elem;\n    }\n    // Replace/restore the type attribute of script elements for safe DOM manipulation\n    function disableScript(elem) {\n        elem.type = (elem.getAttribute('type') !== null) + '/' + elem.type;\n        return elem;\n    }\n    function restoreScript(elem) {\n        var match = rscriptTypeMasked.exec(elem.type);\n        if (match) {\n            elem.type = match[1];\n        } else {\n            elem.removeAttribute('type');\n        }\n        return elem;\n    }\n    function cloneCopyEvent(src, dest) {\n        var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n        if (dest.nodeType !== 1) {\n            return;\n        }\n        // 1. Copy private data: events, handlers, etc.\n        if (dataPriv.hasData(src)) {\n            pdataOld = dataPriv.access(src);\n            pdataCur = dataPriv.set(dest, pdataOld);\n            events = pdataOld.events;\n            if (events) {\n                delete pdataCur.handle;\n                pdataCur.events = {};\n                for (type in events) {\n                    for (i = 0, l = events[type].length; i < l; i++) {\n                        jQuery.event.add(dest, type, events[type][i]);\n                    }\n                }\n            }\n        }\n        // 2. Copy user data\n        if (dataUser.hasData(src)) {\n            udataOld = dataUser.access(src);\n            udataCur = jQuery.extend({}, udataOld);\n            dataUser.set(dest, udataCur);\n        }\n    }\n    // Fix IE bugs, see support tests\n    function fixInput(src, dest) {\n        var nodeName = dest.nodeName.toLowerCase();\n        // Fails to persist the checked state of a cloned checkbox or radio button.\n        if (nodeName === 'input' && rcheckableType.test(src.type)) {\n            dest.checked = src.checked;    // Fails to return the selected option to the default selected state when cloning options\n        } else if (nodeName === 'input' || nodeName === 'textarea') {\n            dest.defaultValue = src.defaultValue;\n        }\n    }\n    function domManip(collection, args, callback, ignored) {\n        // Flatten any nested arrays\n        args = concat.apply([], args);\n        var fragment, first, scripts, hasScripts, node, doc, i = 0, l = collection.length, iNoClone = l - 1, value = args[0], isFunction = jQuery.isFunction(value);\n        // We can't cloneNode fragments that contain checked, in WebKit\n        if (isFunction || l > 1 && typeof value === 'string' && !support.checkClone && rchecked.test(value)) {\n            return collection.each(function (index) {\n                var self = collection.eq(index);\n                if (isFunction) {\n                    args[0] = value.call(this, index, self.html());\n                }\n                domManip(self, args, callback, ignored);\n            });\n        }\n        if (l) {\n            fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n            first = fragment.firstChild;\n            if (fragment.childNodes.length === 1) {\n                fragment = first;\n            }\n            // Require either new content or an interest in ignored elements to invoke the callback\n            if (first || ignored) {\n                scripts = jQuery.map(getAll(fragment, 'script'), disableScript);\n                hasScripts = scripts.length;\n                // Use the original fragment for the last item\n                // instead of the first because it can end up\n                // being emptied incorrectly in certain situations (#8070).\n                for (; i < l; i++) {\n                    node = fragment;\n                    if (i !== iNoClone) {\n                        node = jQuery.clone(node, true, true);\n                        // Keep references to cloned scripts for later restoration\n                        if (hasScripts) {\n                            // Support: Android <=4.0 only, PhantomJS 1 only\n                            // push.apply(_, arraylike) throws on ancient WebKit\n                            jQuery.merge(scripts, getAll(node, 'script'));\n                        }\n                    }\n                    callback.call(collection[i], node, i);\n                }\n                if (hasScripts) {\n                    doc = scripts[scripts.length - 1].ownerDocument;\n                    // Reenable scripts\n                    jQuery.map(scripts, restoreScript);\n                    // Evaluate executable scripts on first document insertion\n                    for (i = 0; i < hasScripts; i++) {\n                        node = scripts[i];\n                        if (rscriptType.test(node.type || '') && !dataPriv.access(node, 'globalEval') && jQuery.contains(doc, node)) {\n                            if (node.src) {\n                                // Optional AJAX dependency, but won't run scripts if not present\n                                if (jQuery._evalUrl) {\n                                    jQuery._evalUrl(node.src);\n                                }\n                            } else {\n                                DOMEval(node.textContent.replace(rcleanScript, ''), doc);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return collection;\n    }\n    function remove(elem, selector, keepData) {\n        var node, nodes = selector ? jQuery.filter(selector, elem) : elem, i = 0;\n        for (; (node = nodes[i]) != null; i++) {\n            if (!keepData && node.nodeType === 1) {\n                jQuery.cleanData(getAll(node));\n            }\n            if (node.parentNode) {\n                if (keepData && jQuery.contains(node.ownerDocument, node)) {\n                    setGlobalEval(getAll(node, 'script'));\n                }\n                node.parentNode.removeChild(node);\n            }\n        }\n        return elem;\n    }\n    jQuery.extend({\n        htmlPrefilter: function (html) {\n            return html.replace(rxhtmlTag, '<$1></$2>');\n        },\n        clone: function (elem, dataAndEvents, deepDataAndEvents) {\n            var i, l, srcElements, destElements, clone = elem.cloneNode(true), inPage = jQuery.contains(elem.ownerDocument, elem);\n            // Fix IE cloning issues\n            if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n                // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n                destElements = getAll(clone);\n                srcElements = getAll(elem);\n                for (i = 0, l = srcElements.length; i < l; i++) {\n                    fixInput(srcElements[i], destElements[i]);\n                }\n            }\n            // Copy the events from the original to the clone\n            if (dataAndEvents) {\n                if (deepDataAndEvents) {\n                    srcElements = srcElements || getAll(elem);\n                    destElements = destElements || getAll(clone);\n                    for (i = 0, l = srcElements.length; i < l; i++) {\n                        cloneCopyEvent(srcElements[i], destElements[i]);\n                    }\n                } else {\n                    cloneCopyEvent(elem, clone);\n                }\n            }\n            // Preserve script evaluation history\n            destElements = getAll(clone, 'script');\n            if (destElements.length > 0) {\n                setGlobalEval(destElements, !inPage && getAll(elem, 'script'));\n            }\n            // Return the cloned set\n            return clone;\n        },\n        cleanData: function (elems) {\n            var data, elem, type, special = jQuery.event.special, i = 0;\n            for (; (elem = elems[i]) !== undefined; i++) {\n                if (acceptData(elem)) {\n                    if (data = elem[dataPriv.expando]) {\n                        if (data.events) {\n                            for (type in data.events) {\n                                if (special[type]) {\n                                    jQuery.event.remove(elem, type);    // This is a shortcut to avoid jQuery.event.remove's overhead\n                                } else {\n                                    jQuery.removeEvent(elem, type, data.handle);\n                                }\n                            }\n                        }\n                        // Support: Chrome <=35 - 45+\n                        // Assign undefined instead of using delete, see Data#remove\n                        elem[dataPriv.expando] = undefined;\n                    }\n                    if (elem[dataUser.expando]) {\n                        // Support: Chrome <=35 - 45+\n                        // Assign undefined instead of using delete, see Data#remove\n                        elem[dataUser.expando] = undefined;\n                    }\n                }\n            }\n        }\n    });\n    jQuery.fn.extend({\n        detach: function (selector) {\n            return remove(this, selector, true);\n        },\n        remove: function (selector) {\n            return remove(this, selector);\n        },\n        text: function (value) {\n            return access(this, function (value) {\n                return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n                    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n                        this.textContent = value;\n                    }\n                });\n            }, null, value, arguments.length);\n        },\n        append: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n                    var target = manipulationTarget(this, elem);\n                    target.appendChild(elem);\n                }\n            });\n        },\n        prepend: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n                    var target = manipulationTarget(this, elem);\n                    target.insertBefore(elem, target.firstChild);\n                }\n            });\n        },\n        before: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.parentNode) {\n                    this.parentNode.insertBefore(elem, this);\n                }\n            });\n        },\n        after: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.parentNode) {\n                    this.parentNode.insertBefore(elem, this.nextSibling);\n                }\n            });\n        },\n        empty: function () {\n            var elem, i = 0;\n            for (; (elem = this[i]) != null; i++) {\n                if (elem.nodeType === 1) {\n                    // Prevent memory leaks\n                    jQuery.cleanData(getAll(elem, false));\n                    // Remove any remaining nodes\n                    elem.textContent = '';\n                }\n            }\n            return this;\n        },\n        clone: function (dataAndEvents, deepDataAndEvents) {\n            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n            return this.map(function () {\n                return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n            });\n        },\n        html: function (value) {\n            return access(this, function (value) {\n                var elem = this[0] || {}, i = 0, l = this.length;\n                if (value === undefined && elem.nodeType === 1) {\n                    return elem.innerHTML;\n                }\n                // See if we can take a shortcut and just use innerHTML\n                if (typeof value === 'string' && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\n                        '',\n                        ''\n                    ])[1].toLowerCase()]) {\n                    value = jQuery.htmlPrefilter(value);\n                    try {\n                        for (; i < l; i++) {\n                            elem = this[i] || {};\n                            // Remove element nodes and prevent memory leaks\n                            if (elem.nodeType === 1) {\n                                jQuery.cleanData(getAll(elem, false));\n                                elem.innerHTML = value;\n                            }\n                        }\n                        elem = 0;    // If using innerHTML throws an exception, use the fallback method\n                    } catch (e) {\n                    }\n                }\n                if (elem) {\n                    this.empty().append(value);\n                }\n            }, null, value, arguments.length);\n        },\n        replaceWith: function () {\n            var ignored = [];\n            // Make the changes, replacing each non-ignored context element with the new content\n            return domManip(this, arguments, function (elem) {\n                var parent = this.parentNode;\n                if (jQuery.inArray(this, ignored) < 0) {\n                    jQuery.cleanData(getAll(this));\n                    if (parent) {\n                        parent.replaceChild(elem, this);\n                    }\n                }    // Force callback invocation\n            }, ignored);\n        }\n    });\n    jQuery.each({\n        appendTo: 'append',\n        prependTo: 'prepend',\n        insertBefore: 'before',\n        insertAfter: 'after',\n        replaceAll: 'replaceWith'\n    }, function (name, original) {\n        jQuery.fn[name] = function (selector) {\n            var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0;\n            for (; i <= last; i++) {\n                elems = i === last ? this : this.clone(true);\n                jQuery(insert[i])[original](elems);\n                // Support: Android <=4.0 only, PhantomJS 1 only\n                // .get() because push.apply(_, arraylike) throws on ancient WebKit\n                push.apply(ret, elems.get());\n            }\n            return this.pushStack(ret);\n        };\n    });\n    var rmargin = /^margin/;\n    var rnumnonpx = new RegExp('^(' + pnum + ')(?!px)[a-z%]+$', 'i');\n    var getStyles = function (elem) {\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n        // IE throws on elements created in popups\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n        var view = elem.ownerDocument.defaultView;\n        if (!view || !view.opener) {\n            view = window;\n        }\n        return view.getComputedStyle(elem);\n    };\n    (function () {\n        // Executing both pixelPosition & boxSizingReliable tests require only one layout\n        // so they're executed at the same time to save the second computation.\n        function computeStyleTests() {\n            // This is a singleton, we need to execute it only once\n            if (!div) {\n                return;\n            }\n            div.style.cssText = 'box-sizing:border-box;' + 'position:relative;display:block;' + 'margin:auto;border:1px;padding:1px;' + 'top:1%;width:50%';\n            div.innerHTML = '';\n            documentElement.appendChild(container);\n            var divStyle = window.getComputedStyle(div);\n            pixelPositionVal = divStyle.top !== '1%';\n            // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n            reliableMarginLeftVal = divStyle.marginLeft === '2px';\n            boxSizingReliableVal = divStyle.width === '4px';\n            // Support: Android 4.0 - 4.3 only\n            // Some styles come back with percentage values, even though they shouldn't\n            div.style.marginRight = '50%';\n            pixelMarginRightVal = divStyle.marginRight === '4px';\n            documentElement.removeChild(container);\n            // Nullify the div so it wouldn't be stored in the memory and\n            // it will also be a sign that checks already performed\n            div = null;\n        }\n        var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal, container = document.createElement('div'), div = document.createElement('div');\n        // Finish early in limited (non-browser) environments\n        if (!div.style) {\n            return;\n        }\n        // Support: IE <=9 - 11 only\n        // Style of cloned element affects source element cloned (#8908)\n        div.style.backgroundClip = 'content-box';\n        div.cloneNode(true).style.backgroundClip = '';\n        support.clearCloneStyle = div.style.backgroundClip === 'content-box';\n        container.style.cssText = 'border:0;width:8px;height:0;top:0;left:-9999px;' + 'padding:0;margin-top:1px;position:absolute';\n        container.appendChild(div);\n        jQuery.extend(support, {\n            pixelPosition: function () {\n                computeStyleTests();\n                return pixelPositionVal;\n            },\n            boxSizingReliable: function () {\n                computeStyleTests();\n                return boxSizingReliableVal;\n            },\n            pixelMarginRight: function () {\n                computeStyleTests();\n                return pixelMarginRightVal;\n            },\n            reliableMarginLeft: function () {\n                computeStyleTests();\n                return reliableMarginLeftVal;\n            }\n        });\n    }());\n    function curCSS(elem, name, computed) {\n        var width, minWidth, maxWidth, ret,\n            // Support: Firefox 51+\n            // Retrieving style before computed somehow\n            // fixes an issue with getting wrong values\n            // on detached elements\n            style = elem.style;\n        computed = computed || getStyles(elem);\n        // getPropertyValue is needed for:\n        //   .css('filter') (IE 9 only, #12537)\n        //   .css('--customProperty) (#3144)\n        if (computed) {\n            ret = computed.getPropertyValue(name) || computed[name];\n            if (ret === '' && !jQuery.contains(elem.ownerDocument, elem)) {\n                ret = jQuery.style(elem, name);\n            }\n            // A tribute to the \"awesome hack by Dean Edwards\"\n            // Android Browser returns percentage for some values,\n            // but width seems to be reliably pixels.\n            // This is against the CSSOM draft spec:\n            // https://drafts.csswg.org/cssom/#resolved-values\n            if (!support.pixelMarginRight() && rnumnonpx.test(ret) && rmargin.test(name)) {\n                // Remember the original values\n                width = style.width;\n                minWidth = style.minWidth;\n                maxWidth = style.maxWidth;\n                // Put in the new values to get a computed value out\n                style.minWidth = style.maxWidth = style.width = ret;\n                ret = computed.width;\n                // Revert the changed values\n                style.width = width;\n                style.minWidth = minWidth;\n                style.maxWidth = maxWidth;\n            }\n        }\n        return ret !== undefined ? // Support: IE <=9 - 11 only\n        // IE returns zIndex value as an integer.\n        ret + '' : ret;\n    }\n    function addGetHookIf(conditionFn, hookFn) {\n        // Define the hook, we'll check on the first run if it's really needed.\n        return {\n            get: function () {\n                if (conditionFn()) {\n                    // Hook not needed (or it's not possible to use it due\n                    // to missing dependency), remove it.\n                    delete this.get;\n                    return;\n                }\n                // Hook needed; redefine it so that the support test is not executed again.\n                return (this.get = hookFn).apply(this, arguments);\n            }\n        };\n    }\n    var\n        // Swappable if display is none or starts with table\n        // except \"table\", \"table-cell\", or \"table-caption\"\n        // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n        rdisplayswap = /^(none|table(?!-c[ea]).+)/, rcustomProp = /^--/, cssShow = {\n            position: 'absolute',\n            visibility: 'hidden',\n            display: 'block'\n        }, cssNormalTransform = {\n            letterSpacing: '0',\n            fontWeight: '400'\n        }, cssPrefixes = [\n            'Webkit',\n            'Moz',\n            'ms'\n        ], emptyStyle = document.createElement('div').style;\n    // Return a css property mapped to a potentially vendor prefixed property\n    function vendorPropName(name) {\n        // Shortcut for names that are not vendor prefixed\n        if (name in emptyStyle) {\n            return name;\n        }\n        // Check for vendor prefixed names\n        var capName = name[0].toUpperCase() + name.slice(1), i = cssPrefixes.length;\n        while (i--) {\n            name = cssPrefixes[i] + capName;\n            if (name in emptyStyle) {\n                return name;\n            }\n        }\n    }\n    // Return a property mapped along what jQuery.cssProps suggests or to\n    // a vendor prefixed property.\n    function finalPropName(name) {\n        var ret = jQuery.cssProps[name];\n        if (!ret) {\n            ret = jQuery.cssProps[name] = vendorPropName(name) || name;\n        }\n        return ret;\n    }\n    function setPositiveNumber(elem, value, subtract) {\n        // Any relative (+/-) values have already been\n        // normalized at this point\n        var matches = rcssNum.exec(value);\n        return matches ? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n        Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || 'px') : value;\n    }\n    function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {\n        var i, val = 0;\n        // If we already have the right measurement, avoid augmentation\n        if (extra === (isBorderBox ? 'border' : 'content')) {\n            i = 4;    // Otherwise initialize for horizontal or vertical properties\n        } else {\n            i = name === 'width' ? 1 : 0;\n        }\n        for (; i < 4; i += 2) {\n            // Both box models exclude margin, so add it if we want it\n            if (extra === 'margin') {\n                val += jQuery.css(elem, extra + cssExpand[i], true, styles);\n            }\n            if (isBorderBox) {\n                // border-box includes padding, so remove it if we want content\n                if (extra === 'content') {\n                    val -= jQuery.css(elem, 'padding' + cssExpand[i], true, styles);\n                }\n                // At this point, extra isn't border nor margin, so remove border\n                if (extra !== 'margin') {\n                    val -= jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);\n                }\n            } else {\n                // At this point, extra isn't content, so add padding\n                val += jQuery.css(elem, 'padding' + cssExpand[i], true, styles);\n                // At this point, extra isn't content nor padding, so add border\n                if (extra !== 'padding') {\n                    val += jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);\n                }\n            }\n        }\n        return val;\n    }\n    function getWidthOrHeight(elem, name, extra) {\n        // Start with computed style\n        var valueIsBorderBox, styles = getStyles(elem), val = curCSS(elem, name, styles), isBorderBox = jQuery.css(elem, 'boxSizing', false, styles) === 'border-box';\n        // Computed unit is not pixels. Stop here and return.\n        if (rnumnonpx.test(val)) {\n            return val;\n        }\n        // Check for style in case a browser which returns unreliable values\n        // for getComputedStyle silently falls back to the reliable elem.style\n        valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);\n        // Fall back to offsetWidth/Height when value is \"auto\"\n        // This happens for inline elements with no explicit setting (gh-3571)\n        if (val === 'auto') {\n            val = elem['offset' + name[0].toUpperCase() + name.slice(1)];\n        }\n        // Normalize \"\", auto, and prepare for extra\n        val = parseFloat(val) || 0;\n        // Use the active box-sizing model to add/subtract irrelevant styles\n        return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? 'border' : 'content'), valueIsBorderBox, styles) + 'px';\n    }\n    jQuery.extend({\n        // Add in style property hooks for overriding the default\n        // behavior of getting and setting a style property\n        cssHooks: {\n            opacity: {\n                get: function (elem, computed) {\n                    if (computed) {\n                        // We should always get a number back from opacity\n                        var ret = curCSS(elem, 'opacity');\n                        return ret === '' ? '1' : ret;\n                    }\n                }\n            }\n        },\n        // Don't automatically add \"px\" to these possibly-unitless properties\n        cssNumber: {\n            'animationIterationCount': true,\n            'columnCount': true,\n            'fillOpacity': true,\n            'flexGrow': true,\n            'flexShrink': true,\n            'fontWeight': true,\n            'lineHeight': true,\n            'opacity': true,\n            'order': true,\n            'orphans': true,\n            'widows': true,\n            'zIndex': true,\n            'zoom': true\n        },\n        // Add in properties whose names you wish to fix before\n        // setting or getting the value\n        cssProps: { 'float': 'cssFloat' },\n        // Get and set the style property on a DOM Node\n        style: function (elem, name, value, extra) {\n            // Don't set styles on text and comment nodes\n            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n                return;\n            }\n            // Make sure that we're working with the right name\n            var ret, type, hooks, origName = jQuery.camelCase(name), isCustomProp = rcustomProp.test(name), style = elem.style;\n            // Make sure that we're working with the right name. We don't\n            // want to query the value if it is a CSS custom property\n            // since they are user-defined.\n            if (!isCustomProp) {\n                name = finalPropName(origName);\n            }\n            // Gets hook for the prefixed version, then unprefixed version\n            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n            // Check if we're setting a value\n            if (value !== undefined) {\n                type = typeof value;\n                // Convert \"+=\" or \"-=\" to relative numbers (#7345)\n                if (type === 'string' && (ret = rcssNum.exec(value)) && ret[1]) {\n                    value = adjustCSS(elem, name, ret);\n                    // Fixes bug #9237\n                    type = 'number';\n                }\n                // Make sure that null and NaN values aren't set (#7116)\n                if (value == null || value !== value) {\n                    return;\n                }\n                // If a number was passed in, add the unit (except for certain CSS properties)\n                if (type === 'number') {\n                    value += ret && ret[3] || (jQuery.cssNumber[origName] ? '' : 'px');\n                }\n                // background-* props affect original clone's values\n                if (!support.clearCloneStyle && value === '' && name.indexOf('background') === 0) {\n                    style[name] = 'inherit';\n                }\n                // If a hook was provided, use that value, otherwise just set the specified value\n                if (!hooks || !('set' in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n                    if (isCustomProp) {\n                        style.setProperty(name, value);\n                    } else {\n                        style[name] = value;\n                    }\n                }\n            } else {\n                // If a hook was provided get the non-computed value from there\n                if (hooks && 'get' in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n                    return ret;\n                }\n                // Otherwise just get the value from the style object\n                return style[name];\n            }\n        },\n        css: function (elem, name, extra, styles) {\n            var val, num, hooks, origName = jQuery.camelCase(name), isCustomProp = rcustomProp.test(name);\n            // Make sure that we're working with the right name. We don't\n            // want to modify the value if it is a CSS custom property\n            // since they are user-defined.\n            if (!isCustomProp) {\n                name = finalPropName(origName);\n            }\n            // Try prefixed name followed by the unprefixed name\n            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n            // If a hook was provided get the computed value from there\n            if (hooks && 'get' in hooks) {\n                val = hooks.get(elem, true, extra);\n            }\n            // Otherwise, if a way to get the computed value exists, use that\n            if (val === undefined) {\n                val = curCSS(elem, name, styles);\n            }\n            // Convert \"normal\" to computed value\n            if (val === 'normal' && name in cssNormalTransform) {\n                val = cssNormalTransform[name];\n            }\n            // Make numeric if forced or a qualifier was provided and val looks numeric\n            if (extra === '' || extra) {\n                num = parseFloat(val);\n                return extra === true || isFinite(num) ? num || 0 : val;\n            }\n            return val;\n        }\n    });\n    jQuery.each([\n        'height',\n        'width'\n    ], function (i, name) {\n        jQuery.cssHooks[name] = {\n            get: function (elem, computed, extra) {\n                if (computed) {\n                    // Certain elements can have dimension info if we invisibly show them\n                    // but it must have a current display style that would benefit\n                    return rdisplayswap.test(jQuery.css(elem, 'display')) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n                        return getWidthOrHeight(elem, name, extra);\n                    }) : getWidthOrHeight(elem, name, extra);\n                }\n            },\n            set: function (elem, value, extra) {\n                var matches, styles = extra && getStyles(elem), subtract = extra && augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, 'boxSizing', false, styles) === 'border-box', styles);\n                // Convert to pixels if value adjustment is needed\n                if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || 'px') !== 'px') {\n                    elem.style[name] = value;\n                    value = jQuery.css(elem, name);\n                }\n                return setPositiveNumber(elem, value, subtract);\n            }\n        };\n    });\n    jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n        if (computed) {\n            return (parseFloat(curCSS(elem, 'marginLeft')) || elem.getBoundingClientRect().left - swap(elem, { marginLeft: 0 }, function () {\n                return elem.getBoundingClientRect().left;\n            })) + 'px';\n        }\n    });\n    // These hooks are used by animate to expand properties\n    jQuery.each({\n        margin: '',\n        padding: '',\n        border: 'Width'\n    }, function (prefix, suffix) {\n        jQuery.cssHooks[prefix + suffix] = {\n            expand: function (value) {\n                var i = 0, expanded = {},\n                    // Assumes a single number if not a string\n                    parts = typeof value === 'string' ? value.split(' ') : [value];\n                for (; i < 4; i++) {\n                    expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n                }\n                return expanded;\n            }\n        };\n        if (!rmargin.test(prefix)) {\n            jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n        }\n    });\n    jQuery.fn.extend({\n        css: function (name, value) {\n            return access(this, function (elem, name, value) {\n                var styles, len, map = {}, i = 0;\n                if (Array.isArray(name)) {\n                    styles = getStyles(elem);\n                    len = name.length;\n                    for (; i < len; i++) {\n                        map[name[i]] = jQuery.css(elem, name[i], false, styles);\n                    }\n                    return map;\n                }\n                return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n            }, name, value, arguments.length > 1);\n        }\n    });\n    function Tween(elem, options, prop, end, easing) {\n        return new Tween.prototype.init(elem, options, prop, end, easing);\n    }\n    jQuery.Tween = Tween;\n    Tween.prototype = {\n        constructor: Tween,\n        init: function (elem, options, prop, end, easing, unit) {\n            this.elem = elem;\n            this.prop = prop;\n            this.easing = easing || jQuery.easing._default;\n            this.options = options;\n            this.start = this.now = this.cur();\n            this.end = end;\n            this.unit = unit || (jQuery.cssNumber[prop] ? '' : 'px');\n        },\n        cur: function () {\n            var hooks = Tween.propHooks[this.prop];\n            return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n        },\n        run: function (percent) {\n            var eased, hooks = Tween.propHooks[this.prop];\n            if (this.options.duration) {\n                this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n            } else {\n                this.pos = eased = percent;\n            }\n            this.now = (this.end - this.start) * eased + this.start;\n            if (this.options.step) {\n                this.options.step.call(this.elem, this.now, this);\n            }\n            if (hooks && hooks.set) {\n                hooks.set(this);\n            } else {\n                Tween.propHooks._default.set(this);\n            }\n            return this;\n        }\n    };\n    Tween.prototype.init.prototype = Tween.prototype;\n    Tween.propHooks = {\n        _default: {\n            get: function (tween) {\n                var result;\n                // Use a property on the element directly when it is not a DOM element,\n                // or when there is no matching style property that exists.\n                if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n                    return tween.elem[tween.prop];\n                }\n                // Passing an empty string as a 3rd parameter to .css will automatically\n                // attempt a parseFloat and fallback to a string if the parse fails.\n                // Simple values such as \"10px\" are parsed to Float;\n                // complex values such as \"rotate(1rad)\" are returned as-is.\n                result = jQuery.css(tween.elem, tween.prop, '');\n                // Empty strings, null, undefined and \"auto\" are converted to 0.\n                return !result || result === 'auto' ? 0 : result;\n            },\n            set: function (tween) {\n                // Use step hook for back compat.\n                // Use cssHook if its there.\n                // Use .style if available and use plain properties where available.\n                if (jQuery.fx.step[tween.prop]) {\n                    jQuery.fx.step[tween.prop](tween);\n                } else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {\n                    jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n                } else {\n                    tween.elem[tween.prop] = tween.now;\n                }\n            }\n        }\n    };\n    // Support: IE <=9 only\n    // Panic based approach to setting things on disconnected nodes\n    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n        set: function (tween) {\n            if (tween.elem.nodeType && tween.elem.parentNode) {\n                tween.elem[tween.prop] = tween.now;\n            }\n        }\n    };\n    jQuery.easing = {\n        linear: function (p) {\n            return p;\n        },\n        swing: function (p) {\n            return 0.5 - Math.cos(p * Math.PI) / 2;\n        },\n        _default: 'swing'\n    };\n    jQuery.fx = Tween.prototype.init;\n    // Back compat <1.8 extension point\n    jQuery.fx.step = {};\n    var fxNow, inProgress, rfxtypes = /^(?:toggle|show|hide)$/, rrun = /queueHooks$/;\n    function schedule() {\n        if (inProgress) {\n            if (document.hidden === false && window.requestAnimationFrame) {\n                window.requestAnimationFrame(schedule);\n            } else {\n                window.setTimeout(schedule, jQuery.fx.interval);\n            }\n            jQuery.fx.tick();\n        }\n    }\n    // Animations created synchronously will run synchronously\n    function createFxNow() {\n        window.setTimeout(function () {\n            fxNow = undefined;\n        });\n        return fxNow = jQuery.now();\n    }\n    // Generate parameters to create a standard animation\n    function genFx(type, includeWidth) {\n        var which, i = 0, attrs = { height: type };\n        // If we include width, step value is 1 to do all cssExpand values,\n        // otherwise step value is 2 to skip over Left and Right\n        includeWidth = includeWidth ? 1 : 0;\n        for (; i < 4; i += 2 - includeWidth) {\n            which = cssExpand[i];\n            attrs['margin' + which] = attrs['padding' + which] = type;\n        }\n        if (includeWidth) {\n            attrs.opacity = attrs.width = type;\n        }\n        return attrs;\n    }\n    function createTween(value, prop, animation) {\n        var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners['*']), index = 0, length = collection.length;\n        for (; index < length; index++) {\n            if (tween = collection[index].call(animation, prop, value)) {\n                // We're done with this property\n                return tween;\n            }\n        }\n    }\n    function defaultPrefilter(elem, props, opts) {\n        var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, isBox = 'width' in props || 'height' in props, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHiddenWithinTree(elem), dataShow = dataPriv.get(elem, 'fxshow');\n        // Queue-skipping animations hijack the fx hooks\n        if (!opts.queue) {\n            hooks = jQuery._queueHooks(elem, 'fx');\n            if (hooks.unqueued == null) {\n                hooks.unqueued = 0;\n                oldfire = hooks.empty.fire;\n                hooks.empty.fire = function () {\n                    if (!hooks.unqueued) {\n                        oldfire();\n                    }\n                };\n            }\n            hooks.unqueued++;\n            anim.always(function () {\n                // Ensure the complete handler is called before this completes\n                anim.always(function () {\n                    hooks.unqueued--;\n                    if (!jQuery.queue(elem, 'fx').length) {\n                        hooks.empty.fire();\n                    }\n                });\n            });\n        }\n        // Detect show/hide animations\n        for (prop in props) {\n            value = props[prop];\n            if (rfxtypes.test(value)) {\n                delete props[prop];\n                toggle = toggle || value === 'toggle';\n                if (value === (hidden ? 'hide' : 'show')) {\n                    // Pretend to be hidden if this is a \"show\" and\n                    // there is still data from a stopped show/hide\n                    if (value === 'show' && dataShow && dataShow[prop] !== undefined) {\n                        hidden = true;    // Ignore all other no-op show/hide data\n                    } else {\n                        continue;\n                    }\n                }\n                orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n            }\n        }\n        // Bail out if this is a no-op like .hide().hide()\n        propTween = !jQuery.isEmptyObject(props);\n        if (!propTween && jQuery.isEmptyObject(orig)) {\n            return;\n        }\n        // Restrict \"overflow\" and \"display\" styles during box animations\n        if (isBox && elem.nodeType === 1) {\n            // Support: IE <=9 - 11, Edge 12 - 13\n            // Record all 3 overflow attributes because IE does not infer the shorthand\n            // from identically-valued overflowX and overflowY\n            opts.overflow = [\n                style.overflow,\n                style.overflowX,\n                style.overflowY\n            ];\n            // Identify a display type, preferring old show/hide data over the CSS cascade\n            restoreDisplay = dataShow && dataShow.display;\n            if (restoreDisplay == null) {\n                restoreDisplay = dataPriv.get(elem, 'display');\n            }\n            display = jQuery.css(elem, 'display');\n            if (display === 'none') {\n                if (restoreDisplay) {\n                    display = restoreDisplay;\n                } else {\n                    // Get nonempty value(s) by temporarily forcing visibility\n                    showHide([elem], true);\n                    restoreDisplay = elem.style.display || restoreDisplay;\n                    display = jQuery.css(elem, 'display');\n                    showHide([elem]);\n                }\n            }\n            // Animate inline elements as inline-block\n            if (display === 'inline' || display === 'inline-block' && restoreDisplay != null) {\n                if (jQuery.css(elem, 'float') === 'none') {\n                    // Restore the original display value at the end of pure show/hide animations\n                    if (!propTween) {\n                        anim.done(function () {\n                            style.display = restoreDisplay;\n                        });\n                        if (restoreDisplay == null) {\n                            display = style.display;\n                            restoreDisplay = display === 'none' ? '' : display;\n                        }\n                    }\n                    style.display = 'inline-block';\n                }\n            }\n        }\n        if (opts.overflow) {\n            style.overflow = 'hidden';\n            anim.always(function () {\n                style.overflow = opts.overflow[0];\n                style.overflowX = opts.overflow[1];\n                style.overflowY = opts.overflow[2];\n            });\n        }\n        // Implement show/hide animations\n        propTween = false;\n        for (prop in orig) {\n            // General show/hide setup for this element animation\n            if (!propTween) {\n                if (dataShow) {\n                    if ('hidden' in dataShow) {\n                        hidden = dataShow.hidden;\n                    }\n                } else {\n                    dataShow = dataPriv.access(elem, 'fxshow', { display: restoreDisplay });\n                }\n                // Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n                if (toggle) {\n                    dataShow.hidden = !hidden;\n                }\n                // Show elements before animating them\n                if (hidden) {\n                    showHide([elem], true);\n                }\n                /* eslint-disable no-loop-func */\n                anim.done(function () {\n                    /* eslint-enable no-loop-func */\n                    // The final step of a \"hide\" animation is actually hiding the element\n                    if (!hidden) {\n                        showHide([elem]);\n                    }\n                    dataPriv.remove(elem, 'fxshow');\n                    for (prop in orig) {\n                        jQuery.style(elem, prop, orig[prop]);\n                    }\n                });\n            }\n            // Per-property setup\n            propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n            if (!(prop in dataShow)) {\n                dataShow[prop] = propTween.start;\n                if (hidden) {\n                    propTween.end = propTween.start;\n                    propTween.start = 0;\n                }\n            }\n        }\n    }\n    function propFilter(props, specialEasing) {\n        var index, name, easing, value, hooks;\n        // camelCase, specialEasing and expand cssHook pass\n        for (index in props) {\n            name = jQuery.camelCase(index);\n            easing = specialEasing[name];\n            value = props[index];\n            if (Array.isArray(value)) {\n                easing = value[1];\n                value = props[index] = value[0];\n            }\n            if (index !== name) {\n                props[name] = value;\n                delete props[index];\n            }\n            hooks = jQuery.cssHooks[name];\n            if (hooks && 'expand' in hooks) {\n                value = hooks.expand(value);\n                delete props[name];\n                // Not quite $.extend, this won't overwrite existing keys.\n                // Reusing 'index' because we have the correct \"name\"\n                for (index in value) {\n                    if (!(index in props)) {\n                        props[index] = value[index];\n                        specialEasing[index] = easing;\n                    }\n                }\n            } else {\n                specialEasing[name] = easing;\n            }\n        }\n    }\n    function Animation(elem, properties, options) {\n        var result, stopped, index = 0, length = Animation.prefilters.length, deferred = jQuery.Deferred().always(function () {\n                // Don't match elem in the :animated selector\n                delete tick.elem;\n            }), tick = function () {\n                if (stopped) {\n                    return false;\n                }\n                var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n                    // Support: Android 2.3 only\n                    // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n                    temp = remaining / animation.duration || 0, percent = 1 - temp, index = 0, length = animation.tweens.length;\n                for (; index < length; index++) {\n                    animation.tweens[index].run(percent);\n                }\n                deferred.notifyWith(elem, [\n                    animation,\n                    percent,\n                    remaining\n                ]);\n                // If there's more to do, yield\n                if (percent < 1 && length) {\n                    return remaining;\n                }\n                // If this was an empty animation, synthesize a final progress notification\n                if (!length) {\n                    deferred.notifyWith(elem, [\n                        animation,\n                        1,\n                        0\n                    ]);\n                }\n                // Resolve the animation and report its conclusion\n                deferred.resolveWith(elem, [animation]);\n                return false;\n            }, animation = deferred.promise({\n                elem: elem,\n                props: jQuery.extend({}, properties),\n                opts: jQuery.extend(true, {\n                    specialEasing: {},\n                    easing: jQuery.easing._default\n                }, options),\n                originalProperties: properties,\n                originalOptions: options,\n                startTime: fxNow || createFxNow(),\n                duration: options.duration,\n                tweens: [],\n                createTween: function (prop, end) {\n                    var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n                    animation.tweens.push(tween);\n                    return tween;\n                },\n                stop: function (gotoEnd) {\n                    var index = 0,\n                        // If we are going to the end, we want to run all the tweens\n                        // otherwise we skip this part\n                        length = gotoEnd ? animation.tweens.length : 0;\n                    if (stopped) {\n                        return this;\n                    }\n                    stopped = true;\n                    for (; index < length; index++) {\n                        animation.tweens[index].run(1);\n                    }\n                    // Resolve when we played the last frame; otherwise, reject\n                    if (gotoEnd) {\n                        deferred.notifyWith(elem, [\n                            animation,\n                            1,\n                            0\n                        ]);\n                        deferred.resolveWith(elem, [\n                            animation,\n                            gotoEnd\n                        ]);\n                    } else {\n                        deferred.rejectWith(elem, [\n                            animation,\n                            gotoEnd\n                        ]);\n                    }\n                    return this;\n                }\n            }), props = animation.props;\n        propFilter(props, animation.opts.specialEasing);\n        for (; index < length; index++) {\n            result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n            if (result) {\n                if (jQuery.isFunction(result.stop)) {\n                    jQuery._queueHooks(animation.elem, animation.opts.queue).stop = jQuery.proxy(result.stop, result);\n                }\n                return result;\n            }\n        }\n        jQuery.map(props, createTween, animation);\n        if (jQuery.isFunction(animation.opts.start)) {\n            animation.opts.start.call(elem, animation);\n        }\n        // Attach callbacks from options\n        animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n        jQuery.fx.timer(jQuery.extend(tick, {\n            elem: elem,\n            anim: animation,\n            queue: animation.opts.queue\n        }));\n        return animation;\n    }\n    jQuery.Animation = jQuery.extend(Animation, {\n        tweeners: {\n            '*': [function (prop, value) {\n                    var tween = this.createTween(prop, value);\n                    adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n                    return tween;\n                }]\n        },\n        tweener: function (props, callback) {\n            if (jQuery.isFunction(props)) {\n                callback = props;\n                props = ['*'];\n            } else {\n                props = props.match(rnothtmlwhite);\n            }\n            var prop, index = 0, length = props.length;\n            for (; index < length; index++) {\n                prop = props[index];\n                Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n                Animation.tweeners[prop].unshift(callback);\n            }\n        },\n        prefilters: [defaultPrefilter],\n        prefilter: function (callback, prepend) {\n            if (prepend) {\n                Animation.prefilters.unshift(callback);\n            } else {\n                Animation.prefilters.push(callback);\n            }\n        }\n    });\n    jQuery.speed = function (speed, easing, fn) {\n        var opt = speed && typeof speed === 'object' ? jQuery.extend({}, speed) : {\n            complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,\n            duration: speed,\n            easing: fn && easing || easing && !jQuery.isFunction(easing) && easing\n        };\n        // Go to the end state if fx are off\n        if (jQuery.fx.off) {\n            opt.duration = 0;\n        } else {\n            if (typeof opt.duration !== 'number') {\n                if (opt.duration in jQuery.fx.speeds) {\n                    opt.duration = jQuery.fx.speeds[opt.duration];\n                } else {\n                    opt.duration = jQuery.fx.speeds._default;\n                }\n            }\n        }\n        // Normalize opt.queue - true/undefined/null -> \"fx\"\n        if (opt.queue == null || opt.queue === true) {\n            opt.queue = 'fx';\n        }\n        // Queueing\n        opt.old = opt.complete;\n        opt.complete = function () {\n            if (jQuery.isFunction(opt.old)) {\n                opt.old.call(this);\n            }\n            if (opt.queue) {\n                jQuery.dequeue(this, opt.queue);\n            }\n        };\n        return opt;\n    };\n    jQuery.fn.extend({\n        fadeTo: function (speed, to, easing, callback) {\n            // Show any hidden elements after setting opacity to 0\n            return this.filter(isHiddenWithinTree).css('opacity', 0).show()    // Animate to the value specified\n.end().animate({ opacity: to }, speed, easing, callback);\n        },\n        animate: function (prop, speed, easing, callback) {\n            var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback), doAnimation = function () {\n                    // Operate on a copy of prop so per-property easing won't be lost\n                    var anim = Animation(this, jQuery.extend({}, prop), optall);\n                    // Empty animations, or finishing resolves immediately\n                    if (empty || dataPriv.get(this, 'finish')) {\n                        anim.stop(true);\n                    }\n                };\n            doAnimation.finish = doAnimation;\n            return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n        },\n        stop: function (type, clearQueue, gotoEnd) {\n            var stopQueue = function (hooks) {\n                var stop = hooks.stop;\n                delete hooks.stop;\n                stop(gotoEnd);\n            };\n            if (typeof type !== 'string') {\n                gotoEnd = clearQueue;\n                clearQueue = type;\n                type = undefined;\n            }\n            if (clearQueue && type !== false) {\n                this.queue(type || 'fx', []);\n            }\n            return this.each(function () {\n                var dequeue = true, index = type != null && type + 'queueHooks', timers = jQuery.timers, data = dataPriv.get(this);\n                if (index) {\n                    if (data[index] && data[index].stop) {\n                        stopQueue(data[index]);\n                    }\n                } else {\n                    for (index in data) {\n                        if (data[index] && data[index].stop && rrun.test(index)) {\n                            stopQueue(data[index]);\n                        }\n                    }\n                }\n                for (index = timers.length; index--;) {\n                    if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n                        timers[index].anim.stop(gotoEnd);\n                        dequeue = false;\n                        timers.splice(index, 1);\n                    }\n                }\n                // Start the next in the queue if the last step wasn't forced.\n                // Timers currently will call their complete callbacks, which\n                // will dequeue but only if they were gotoEnd.\n                if (dequeue || !gotoEnd) {\n                    jQuery.dequeue(this, type);\n                }\n            });\n        },\n        finish: function (type) {\n            if (type !== false) {\n                type = type || 'fx';\n            }\n            return this.each(function () {\n                var index, data = dataPriv.get(this), queue = data[type + 'queue'], hooks = data[type + 'queueHooks'], timers = jQuery.timers, length = queue ? queue.length : 0;\n                // Enable finishing flag on private data\n                data.finish = true;\n                // Empty the queue first\n                jQuery.queue(this, type, []);\n                if (hooks && hooks.stop) {\n                    hooks.stop.call(this, true);\n                }\n                // Look for any active animations, and finish them\n                for (index = timers.length; index--;) {\n                    if (timers[index].elem === this && timers[index].queue === type) {\n                        timers[index].anim.stop(true);\n                        timers.splice(index, 1);\n                    }\n                }\n                // Look for any animations in the old queue and finish them\n                for (index = 0; index < length; index++) {\n                    if (queue[index] && queue[index].finish) {\n                        queue[index].finish.call(this);\n                    }\n                }\n                // Turn off finishing flag\n                delete data.finish;\n            });\n        }\n    });\n    jQuery.each([\n        'toggle',\n        'show',\n        'hide'\n    ], function (i, name) {\n        var cssFn = jQuery.fn[name];\n        jQuery.fn[name] = function (speed, easing, callback) {\n            return speed == null || typeof speed === 'boolean' ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n        };\n    });\n    // Generate shortcuts for custom animations\n    jQuery.each({\n        slideDown: genFx('show'),\n        slideUp: genFx('hide'),\n        slideToggle: genFx('toggle'),\n        fadeIn: { opacity: 'show' },\n        fadeOut: { opacity: 'hide' },\n        fadeToggle: { opacity: 'toggle' }\n    }, function (name, props) {\n        jQuery.fn[name] = function (speed, easing, callback) {\n            return this.animate(props, speed, easing, callback);\n        };\n    });\n    jQuery.timers = [];\n    jQuery.fx.tick = function () {\n        var timer, i = 0, timers = jQuery.timers;\n        fxNow = jQuery.now();\n        for (; i < timers.length; i++) {\n            timer = timers[i];\n            // Run the timer and safely remove it when done (allowing for external removal)\n            if (!timer() && timers[i] === timer) {\n                timers.splice(i--, 1);\n            }\n        }\n        if (!timers.length) {\n            jQuery.fx.stop();\n        }\n        fxNow = undefined;\n    };\n    jQuery.fx.timer = function (timer) {\n        jQuery.timers.push(timer);\n        jQuery.fx.start();\n    };\n    jQuery.fx.interval = 13;\n    jQuery.fx.start = function () {\n        if (inProgress) {\n            return;\n        }\n        inProgress = true;\n        schedule();\n    };\n    jQuery.fx.stop = function () {\n        inProgress = null;\n    };\n    jQuery.fx.speeds = {\n        slow: 600,\n        fast: 200,\n        // Default speed\n        _default: 400\n    };\n    // Based off of the plugin by Clint Helfers, with permission.\n    // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n    jQuery.fn.delay = function (time, type) {\n        time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n        type = type || 'fx';\n        return this.queue(type, function (next, hooks) {\n            var timeout = window.setTimeout(next, time);\n            hooks.stop = function () {\n                window.clearTimeout(timeout);\n            };\n        });\n    };\n    (function () {\n        var input = document.createElement('input'), select = document.createElement('select'), opt = select.appendChild(document.createElement('option'));\n        input.type = 'checkbox';\n        // Support: Android <=4.3 only\n        // Default value for a checkbox should be \"on\"\n        support.checkOn = input.value !== '';\n        // Support: IE <=11 only\n        // Must access selectedIndex to make default options select\n        support.optSelected = opt.selected;\n        // Support: IE <=11 only\n        // An input loses its value after becoming a radio\n        input = document.createElement('input');\n        input.value = 't';\n        input.type = 'radio';\n        support.radioValue = input.value === 't';\n    }());\n    var boolHook, attrHandle = jQuery.expr.attrHandle;\n    jQuery.fn.extend({\n        attr: function (name, value) {\n            return access(this, jQuery.attr, name, value, arguments.length > 1);\n        },\n        removeAttr: function (name) {\n            return this.each(function () {\n                jQuery.removeAttr(this, name);\n            });\n        }\n    });\n    jQuery.extend({\n        attr: function (elem, name, value) {\n            var ret, hooks, nType = elem.nodeType;\n            // Don't get/set attributes on text, comment and attribute nodes\n            if (nType === 3 || nType === 8 || nType === 2) {\n                return;\n            }\n            // Fallback to prop when attributes are not supported\n            if (typeof elem.getAttribute === 'undefined') {\n                return jQuery.prop(elem, name, value);\n            }\n            // Attribute hooks are determined by the lowercase version\n            // Grab necessary hook if one is defined\n            if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n                hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n            }\n            if (value !== undefined) {\n                if (value === null) {\n                    jQuery.removeAttr(elem, name);\n                    return;\n                }\n                if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n                    return ret;\n                }\n                elem.setAttribute(name, value + '');\n                return value;\n            }\n            if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {\n                return ret;\n            }\n            ret = jQuery.find.attr(elem, name);\n            // Non-existent attributes return null, we normalize to undefined\n            return ret == null ? undefined : ret;\n        },\n        attrHooks: {\n            type: {\n                set: function (elem, value) {\n                    if (!support.radioValue && value === 'radio' && nodeName(elem, 'input')) {\n                        var val = elem.value;\n                        elem.setAttribute('type', value);\n                        if (val) {\n                            elem.value = val;\n                        }\n                        return value;\n                    }\n                }\n            }\n        },\n        removeAttr: function (elem, value) {\n            var name, i = 0,\n                // Attribute names can contain non-HTML whitespace characters\n                // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n                attrNames = value && value.match(rnothtmlwhite);\n            if (attrNames && elem.nodeType === 1) {\n                while (name = attrNames[i++]) {\n                    elem.removeAttribute(name);\n                }\n            }\n        }\n    });\n    // Hooks for boolean attributes\n    boolHook = {\n        set: function (elem, value, name) {\n            if (value === false) {\n                // Remove boolean attributes when set to false\n                jQuery.removeAttr(elem, name);\n            } else {\n                elem.setAttribute(name, name);\n            }\n            return name;\n        }\n    };\n    jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (i, name) {\n        var getter = attrHandle[name] || jQuery.find.attr;\n        attrHandle[name] = function (elem, name, isXML) {\n            var ret, handle, lowercaseName = name.toLowerCase();\n            if (!isXML) {\n                // Avoid an infinite loop by temporarily removing this function from the getter\n                handle = attrHandle[lowercaseName];\n                attrHandle[lowercaseName] = ret;\n                ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n                attrHandle[lowercaseName] = handle;\n            }\n            return ret;\n        };\n    });\n    var rfocusable = /^(?:input|select|textarea|button)$/i, rclickable = /^(?:a|area)$/i;\n    jQuery.fn.extend({\n        prop: function (name, value) {\n            return access(this, jQuery.prop, name, value, arguments.length > 1);\n        },\n        removeProp: function (name) {\n            return this.each(function () {\n                delete this[jQuery.propFix[name] || name];\n            });\n        }\n    });\n    jQuery.extend({\n        prop: function (elem, name, value) {\n            var ret, hooks, nType = elem.nodeType;\n            // Don't get/set properties on text, comment and attribute nodes\n            if (nType === 3 || nType === 8 || nType === 2) {\n                return;\n            }\n            if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n                // Fix name and attach hooks\n                name = jQuery.propFix[name] || name;\n                hooks = jQuery.propHooks[name];\n            }\n            if (value !== undefined) {\n                if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n                    return ret;\n                }\n                return elem[name] = value;\n            }\n            if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {\n                return ret;\n            }\n            return elem[name];\n        },\n        propHooks: {\n            tabIndex: {\n                get: function (elem) {\n                    // Support: IE <=9 - 11 only\n                    // elem.tabIndex doesn't always return the\n                    // correct value when it hasn't been explicitly set\n                    // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n                    // Use proper attribute retrieval(#12072)\n                    var tabindex = jQuery.find.attr(elem, 'tabindex');\n                    if (tabindex) {\n                        return parseInt(tabindex, 10);\n                    }\n                    if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n                        return 0;\n                    }\n                    return -1;\n                }\n            }\n        },\n        propFix: {\n            'for': 'htmlFor',\n            'class': 'className'\n        }\n    });\n    // Support: IE <=11 only\n    // Accessing the selectedIndex property\n    // forces the browser to respect setting selected\n    // on the option\n    // The getter ensures a default option is selected\n    // when in an optgroup\n    // eslint rule \"no-unused-expressions\" is disabled for this code\n    // since it considers such accessions noop\n    if (!support.optSelected) {\n        jQuery.propHooks.selected = {\n            get: function (elem) {\n                /* eslint no-unused-expressions: \"off\" */\n                var parent = elem.parentNode;\n                if (parent && parent.parentNode) {\n                    parent.parentNode.selectedIndex;\n                }\n                return null;\n            },\n            set: function (elem) {\n                /* eslint no-unused-expressions: \"off\" */\n                var parent = elem.parentNode;\n                if (parent) {\n                    parent.selectedIndex;\n                    if (parent.parentNode) {\n                        parent.parentNode.selectedIndex;\n                    }\n                }\n            }\n        };\n    }\n    jQuery.each([\n        'tabIndex',\n        'readOnly',\n        'maxLength',\n        'cellSpacing',\n        'cellPadding',\n        'rowSpan',\n        'colSpan',\n        'useMap',\n        'frameBorder',\n        'contentEditable'\n    ], function () {\n        jQuery.propFix[this.toLowerCase()] = this;\n    });\n    // Strip and collapse whitespace according to HTML spec\n    // https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace\n    function stripAndCollapse(value) {\n        var tokens = value.match(rnothtmlwhite) || [];\n        return tokens.join(' ');\n    }\n    function getClass(elem) {\n        return elem.getAttribute && elem.getAttribute('class') || '';\n    }\n    jQuery.fn.extend({\n        addClass: function (value) {\n            var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;\n            if (jQuery.isFunction(value)) {\n                return this.each(function (j) {\n                    jQuery(this).addClass(value.call(this, j, getClass(this)));\n                });\n            }\n            if (typeof value === 'string' && value) {\n                classes = value.match(rnothtmlwhite) || [];\n                while (elem = this[i++]) {\n                    curValue = getClass(elem);\n                    cur = elem.nodeType === 1 && ' ' + stripAndCollapse(curValue) + ' ';\n                    if (cur) {\n                        j = 0;\n                        while (clazz = classes[j++]) {\n                            if (cur.indexOf(' ' + clazz + ' ') < 0) {\n                                cur += clazz + ' ';\n                            }\n                        }\n                        // Only assign if different to avoid unneeded rendering.\n                        finalValue = stripAndCollapse(cur);\n                        if (curValue !== finalValue) {\n                            elem.setAttribute('class', finalValue);\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeClass: function (value) {\n            var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;\n            if (jQuery.isFunction(value)) {\n                return this.each(function (j) {\n                    jQuery(this).removeClass(value.call(this, j, getClass(this)));\n                });\n            }\n            if (!arguments.length) {\n                return this.attr('class', '');\n            }\n            if (typeof value === 'string' && value) {\n                classes = value.match(rnothtmlwhite) || [];\n                while (elem = this[i++]) {\n                    curValue = getClass(elem);\n                    // This expression is here for better compressibility (see addClass)\n                    cur = elem.nodeType === 1 && ' ' + stripAndCollapse(curValue) + ' ';\n                    if (cur) {\n                        j = 0;\n                        while (clazz = classes[j++]) {\n                            // Remove *all* instances\n                            while (cur.indexOf(' ' + clazz + ' ') > -1) {\n                                cur = cur.replace(' ' + clazz + ' ', ' ');\n                            }\n                        }\n                        // Only assign if different to avoid unneeded rendering.\n                        finalValue = stripAndCollapse(cur);\n                        if (curValue !== finalValue) {\n                            elem.setAttribute('class', finalValue);\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        toggleClass: function (value, stateVal) {\n            var type = typeof value;\n            if (typeof stateVal === 'boolean' && type === 'string') {\n                return stateVal ? this.addClass(value) : this.removeClass(value);\n            }\n            if (jQuery.isFunction(value)) {\n                return this.each(function (i) {\n                    jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n                });\n            }\n            return this.each(function () {\n                var className, i, self, classNames;\n                if (type === 'string') {\n                    // Toggle individual class names\n                    i = 0;\n                    self = jQuery(this);\n                    classNames = value.match(rnothtmlwhite) || [];\n                    while (className = classNames[i++]) {\n                        // Check each className given, space separated list\n                        if (self.hasClass(className)) {\n                            self.removeClass(className);\n                        } else {\n                            self.addClass(className);\n                        }\n                    }    // Toggle whole class name\n                } else if (value === undefined || type === 'boolean') {\n                    className = getClass(this);\n                    if (className) {\n                        // Store className if set\n                        dataPriv.set(this, '__className__', className);\n                    }\n                    // If the element has a class name or if we're passed `false`,\n                    // then remove the whole classname (if there was one, the above saved it).\n                    // Otherwise bring back whatever was previously saved (if anything),\n                    // falling back to the empty string if nothing was stored.\n                    if (this.setAttribute) {\n                        this.setAttribute('class', className || value === false ? '' : dataPriv.get(this, '__className__') || '');\n                    }\n                }\n            });\n        },\n        hasClass: function (selector) {\n            var className, elem, i = 0;\n            className = ' ' + selector + ' ';\n            while (elem = this[i++]) {\n                if (elem.nodeType === 1 && (' ' + stripAndCollapse(getClass(elem)) + ' ').indexOf(className) > -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    });\n    var rreturn = /\\r/g;\n    jQuery.fn.extend({\n        val: function (value) {\n            var hooks, ret, isFunction, elem = this[0];\n            if (!arguments.length) {\n                if (elem) {\n                    hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n                    if (hooks && 'get' in hooks && (ret = hooks.get(elem, 'value')) !== undefined) {\n                        return ret;\n                    }\n                    ret = elem.value;\n                    // Handle most common string cases\n                    if (typeof ret === 'string') {\n                        return ret.replace(rreturn, '');\n                    }\n                    // Handle cases where value is null/undef or number\n                    return ret == null ? '' : ret;\n                }\n                return;\n            }\n            isFunction = jQuery.isFunction(value);\n            return this.each(function (i) {\n                var val;\n                if (this.nodeType !== 1) {\n                    return;\n                }\n                if (isFunction) {\n                    val = value.call(this, i, jQuery(this).val());\n                } else {\n                    val = value;\n                }\n                // Treat null/undefined as \"\"; convert numbers to string\n                if (val == null) {\n                    val = '';\n                } else if (typeof val === 'number') {\n                    val += '';\n                } else if (Array.isArray(val)) {\n                    val = jQuery.map(val, function (value) {\n                        return value == null ? '' : value + '';\n                    });\n                }\n                hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];\n                // If set returns undefined, fall back to normal setting\n                if (!hooks || !('set' in hooks) || hooks.set(this, val, 'value') === undefined) {\n                    this.value = val;\n                }\n            });\n        }\n    });\n    jQuery.extend({\n        valHooks: {\n            option: {\n                get: function (elem) {\n                    var val = jQuery.find.attr(elem, 'value');\n                    return val != null ? val : // Support: IE <=10 - 11 only\n                    // option.text throws exceptions (#14686, #14858)\n                    // Strip and collapse whitespace\n                    // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n                    stripAndCollapse(jQuery.text(elem));\n                }\n            },\n            select: {\n                get: function (elem) {\n                    var value, option, i, options = elem.options, index = elem.selectedIndex, one = elem.type === 'select-one', values = one ? null : [], max = one ? index + 1 : options.length;\n                    if (index < 0) {\n                        i = max;\n                    } else {\n                        i = one ? index : 0;\n                    }\n                    // Loop through all the selected options\n                    for (; i < max; i++) {\n                        option = options[i];\n                        // Support: IE <=9 only\n                        // IE8-9 doesn't update selected after form reset (#2551)\n                        if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup\n                            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, 'optgroup'))) {\n                            // Get the specific value for the option\n                            value = jQuery(option).val();\n                            // We don't need an array for one selects\n                            if (one) {\n                                return value;\n                            }\n                            // Multi-Selects return an array\n                            values.push(value);\n                        }\n                    }\n                    return values;\n                },\n                set: function (elem, value) {\n                    var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length;\n                    while (i--) {\n                        option = options[i];\n                        /* eslint-disable no-cond-assign */\n                        if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n                            optionSet = true;\n                        }    /* eslint-enable no-cond-assign */\n                    }\n                    // Force browsers to behave consistently when non-matching value is set\n                    if (!optionSet) {\n                        elem.selectedIndex = -1;\n                    }\n                    return values;\n                }\n            }\n        }\n    });\n    // Radios and checkboxes getter/setter\n    jQuery.each([\n        'radio',\n        'checkbox'\n    ], function () {\n        jQuery.valHooks[this] = {\n            set: function (elem, value) {\n                if (Array.isArray(value)) {\n                    return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n                }\n            }\n        };\n        if (!support.checkOn) {\n            jQuery.valHooks[this].get = function (elem) {\n                return elem.getAttribute('value') === null ? 'on' : elem.value;\n            };\n        }\n    });\n    // Return jQuery for attributes-only inclusion\n    var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n    jQuery.extend(jQuery.event, {\n        trigger: function (event, data, elem, onlyHandlers) {\n            var i, cur, tmp, bubbleType, ontype, handle, special, eventPath = [elem || document], type = hasOwn.call(event, 'type') ? event.type : event, namespaces = hasOwn.call(event, 'namespace') ? event.namespace.split('.') : [];\n            cur = tmp = elem = elem || document;\n            // Don't do events on text and comment nodes\n            if (elem.nodeType === 3 || elem.nodeType === 8) {\n                return;\n            }\n            // focus/blur morphs to focusin/out; ensure we're not firing them right now\n            if (rfocusMorph.test(type + jQuery.event.triggered)) {\n                return;\n            }\n            if (type.indexOf('.') > -1) {\n                // Namespaced trigger; create a regexp to match event type in handle()\n                namespaces = type.split('.');\n                type = namespaces.shift();\n                namespaces.sort();\n            }\n            ontype = type.indexOf(':') < 0 && 'on' + type;\n            // Caller can pass in a jQuery.Event object, Object, or just an event type string\n            event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === 'object' && event);\n            // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n            event.isTrigger = onlyHandlers ? 2 : 3;\n            event.namespace = namespaces.join('.');\n            event.rnamespace = event.namespace ? new RegExp('(^|\\\\.)' + namespaces.join('\\\\.(?:.*\\\\.|)') + '(\\\\.|$)') : null;\n            // Clean up the event in case it is being reused\n            event.result = undefined;\n            if (!event.target) {\n                event.target = elem;\n            }\n            // Clone any incoming data and prepend the event, creating the handler arg list\n            data = data == null ? [event] : jQuery.makeArray(data, [event]);\n            // Allow special events to draw outside the lines\n            special = jQuery.event.special[type] || {};\n            if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n                return;\n            }\n            // Determine event propagation path in advance, per W3C events spec (#9951)\n            // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n            if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {\n                bubbleType = special.delegateType || type;\n                if (!rfocusMorph.test(bubbleType + type)) {\n                    cur = cur.parentNode;\n                }\n                for (; cur; cur = cur.parentNode) {\n                    eventPath.push(cur);\n                    tmp = cur;\n                }\n                // Only add window if we got to document (e.g., not plain obj or detached DOM)\n                if (tmp === (elem.ownerDocument || document)) {\n                    eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n                }\n            }\n            // Fire handlers on the event path\n            i = 0;\n            while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n                event.type = i > 1 ? bubbleType : special.bindType || type;\n                // jQuery handler\n                handle = (dataPriv.get(cur, 'events') || {})[event.type] && dataPriv.get(cur, 'handle');\n                if (handle) {\n                    handle.apply(cur, data);\n                }\n                // Native handler\n                handle = ontype && cur[ontype];\n                if (handle && handle.apply && acceptData(cur)) {\n                    event.result = handle.apply(cur, data);\n                    if (event.result === false) {\n                        event.preventDefault();\n                    }\n                }\n            }\n            event.type = type;\n            // If nobody prevented the default action, do it now\n            if (!onlyHandlers && !event.isDefaultPrevented()) {\n                if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n                    // Call a native DOM method on the target with the same name as the event.\n                    // Don't do default actions on window, that's where global variables be (#6170)\n                    if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {\n                        // Don't re-trigger an onFOO event when we call its FOO() method\n                        tmp = elem[ontype];\n                        if (tmp) {\n                            elem[ontype] = null;\n                        }\n                        // Prevent re-triggering of the same event, since we already bubbled it above\n                        jQuery.event.triggered = type;\n                        elem[type]();\n                        jQuery.event.triggered = undefined;\n                        if (tmp) {\n                            elem[ontype] = tmp;\n                        }\n                    }\n                }\n            }\n            return event.result;\n        },\n        // Piggyback on a donor event to simulate a different one\n        // Used only for `focus(in | out)` events\n        simulate: function (type, elem, event) {\n            var e = jQuery.extend(new jQuery.Event(), event, {\n                type: type,\n                isSimulated: true\n            });\n            jQuery.event.trigger(e, null, elem);\n        }\n    });\n    jQuery.fn.extend({\n        trigger: function (type, data) {\n            return this.each(function () {\n                jQuery.event.trigger(type, data, this);\n            });\n        },\n        triggerHandler: function (type, data) {\n            var elem = this[0];\n            if (elem) {\n                return jQuery.event.trigger(type, data, elem, true);\n            }\n        }\n    });\n    jQuery.each(('blur focus focusin focusout resize scroll click dblclick ' + 'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' + 'change select submit keydown keypress keyup contextmenu').split(' '), function (i, name) {\n        // Handle event binding\n        jQuery.fn[name] = function (data, fn) {\n            return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n        };\n    });\n    jQuery.fn.extend({\n        hover: function (fnOver, fnOut) {\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n        }\n    });\n    support.focusin = 'onfocusin' in window;\n    // Support: Firefox <=44\n    // Firefox doesn't have focus(in | out) events\n    // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n    //\n    // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n    // focus(in | out) events fire after focus & blur events,\n    // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n    // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n    if (!support.focusin) {\n        jQuery.each({\n            focus: 'focusin',\n            blur: 'focusout'\n        }, function (orig, fix) {\n            // Attach a single capturing handler on the document while someone wants focusin/focusout\n            var handler = function (event) {\n                jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n            };\n            jQuery.event.special[fix] = {\n                setup: function () {\n                    var doc = this.ownerDocument || this, attaches = dataPriv.access(doc, fix);\n                    if (!attaches) {\n                        doc.addEventListener(orig, handler, true);\n                    }\n                    dataPriv.access(doc, fix, (attaches || 0) + 1);\n                },\n                teardown: function () {\n                    var doc = this.ownerDocument || this, attaches = dataPriv.access(doc, fix) - 1;\n                    if (!attaches) {\n                        doc.removeEventListener(orig, handler, true);\n                        dataPriv.remove(doc, fix);\n                    } else {\n                        dataPriv.access(doc, fix, attaches);\n                    }\n                }\n            };\n        });\n    }\n    var location = window.location;\n    var nonce = jQuery.now();\n    var rquery = /\\?/;\n    // Cross-browser xml parsing\n    jQuery.parseXML = function (data) {\n        var xml;\n        if (!data || typeof data !== 'string') {\n            return null;\n        }\n        // Support: IE 9 - 11 only\n        // IE throws on parseFromString with invalid input.\n        try {\n            xml = new window.DOMParser().parseFromString(data, 'text/xml');\n        } catch (e) {\n            xml = undefined;\n        }\n        if (!xml || xml.getElementsByTagName('parsererror').length) {\n            jQuery.error('Invalid XML: ' + data);\n        }\n        return xml;\n    };\n    var rbracket = /\\[\\]$/, rCRLF = /\\r?\\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;\n    function buildParams(prefix, obj, traditional, add) {\n        var name;\n        if (Array.isArray(obj)) {\n            // Serialize array item.\n            jQuery.each(obj, function (i, v) {\n                if (traditional || rbracket.test(prefix)) {\n                    // Treat each array item as a scalar.\n                    add(prefix, v);\n                } else {\n                    // Item is non-scalar (array or object), encode its numeric index.\n                    buildParams(prefix + '[' + (typeof v === 'object' && v != null ? i : '') + ']', v, traditional, add);\n                }\n            });\n        } else if (!traditional && jQuery.type(obj) === 'object') {\n            // Serialize object item.\n            for (name in obj) {\n                buildParams(prefix + '[' + name + ']', obj[name], traditional, add);\n            }\n        } else {\n            // Serialize scalar item.\n            add(prefix, obj);\n        }\n    }\n    // Serialize an array of form elements or a set of\n    // key/values into a query string\n    jQuery.param = function (a, traditional) {\n        var prefix, s = [], add = function (key, valueOrFunction) {\n                // If value is a function, invoke it and use its return value\n                var value = jQuery.isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n                s[s.length] = encodeURIComponent(key) + '=' + encodeURIComponent(value == null ? '' : value);\n            };\n        // If an array was passed in, assume that it is an array of form elements.\n        if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n            // Serialize the form elements\n            jQuery.each(a, function () {\n                add(this.name, this.value);\n            });\n        } else {\n            // If traditional, encode the \"old\" way (the way 1.3.2 or older\n            // did it), otherwise encode params recursively.\n            for (prefix in a) {\n                buildParams(prefix, a[prefix], traditional, add);\n            }\n        }\n        // Return the resulting serialization\n        return s.join('&');\n    };\n    jQuery.fn.extend({\n        serialize: function () {\n            return jQuery.param(this.serializeArray());\n        },\n        serializeArray: function () {\n            return this.map(function () {\n                // Can add propHook for \"elements\" to filter or add form elements\n                var elements = jQuery.prop(this, 'elements');\n                return elements ? jQuery.makeArray(elements) : this;\n            }).filter(function () {\n                var type = this.type;\n                // Use .is( \":disabled\" ) so that fieldset[disabled] works\n                return this.name && !jQuery(this).is(':disabled') && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n            }).map(function (i, elem) {\n                var val = jQuery(this).val();\n                if (val == null) {\n                    return null;\n                }\n                if (Array.isArray(val)) {\n                    return jQuery.map(val, function (val) {\n                        return {\n                            name: elem.name,\n                            value: val.replace(rCRLF, '\\r\\n')\n                        };\n                    });\n                }\n                return {\n                    name: elem.name,\n                    value: val.replace(rCRLF, '\\r\\n')\n                };\n            }).get();\n        }\n    });\n    var r20 = /%20/g, rhash = /#.*$/, rantiCache = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n        // #7653, #8125, #8152: local protocol detection\n        rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\\/\\//,\n        /* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n        prefilters = {},\n        /* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n        transports = {},\n        // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n        allTypes = '*/'.concat('*'),\n        // Anchor tag for parsing the document origin\n        originAnchor = document.createElement('a');\n    originAnchor.href = location.href;\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n    function addToPrefiltersOrTransports(structure) {\n        // dataTypeExpression is optional and defaults to \"*\"\n        return function (dataTypeExpression, func) {\n            if (typeof dataTypeExpression !== 'string') {\n                func = dataTypeExpression;\n                dataTypeExpression = '*';\n            }\n            var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n            if (jQuery.isFunction(func)) {\n                // For each dataType in the dataTypeExpression\n                while (dataType = dataTypes[i++]) {\n                    // Prepend if requested\n                    if (dataType[0] === '+') {\n                        dataType = dataType.slice(1) || '*';\n                        (structure[dataType] = structure[dataType] || []).unshift(func);    // Otherwise append\n                    } else {\n                        (structure[dataType] = structure[dataType] || []).push(func);\n                    }\n                }\n            }\n        };\n    }\n    // Base inspection function for prefilters and transports\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n        var inspected = {}, seekingTransport = structure === transports;\n        function inspect(dataType) {\n            var selected;\n            inspected[dataType] = true;\n            jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n                if (typeof dataTypeOrTransport === 'string' && !seekingTransport && !inspected[dataTypeOrTransport]) {\n                    options.dataTypes.unshift(dataTypeOrTransport);\n                    inspect(dataTypeOrTransport);\n                    return false;\n                } else if (seekingTransport) {\n                    return !(selected = dataTypeOrTransport);\n                }\n            });\n            return selected;\n        }\n        return inspect(options.dataTypes[0]) || !inspected['*'] && inspect('*');\n    }\n    // A special extend for ajax options\n    // that takes \"flat\" options (not to be deep extended)\n    // Fixes #9887\n    function ajaxExtend(target, src) {\n        var key, deep, flatOptions = jQuery.ajaxSettings.flatOptions || {};\n        for (key in src) {\n            if (src[key] !== undefined) {\n                (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n            }\n        }\n        if (deep) {\n            jQuery.extend(true, target, deep);\n        }\n        return target;\n    }\n    /* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\n    function ajaxHandleResponses(s, jqXHR, responses) {\n        var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes;\n        // Remove auto dataType and get content-type in the process\n        while (dataTypes[0] === '*') {\n            dataTypes.shift();\n            if (ct === undefined) {\n                ct = s.mimeType || jqXHR.getResponseHeader('Content-Type');\n            }\n        }\n        // Check if we're dealing with a known content-type\n        if (ct) {\n            for (type in contents) {\n                if (contents[type] && contents[type].test(ct)) {\n                    dataTypes.unshift(type);\n                    break;\n                }\n            }\n        }\n        // Check to see if we have a response for the expected dataType\n        if (dataTypes[0] in responses) {\n            finalDataType = dataTypes[0];\n        } else {\n            // Try convertible dataTypes\n            for (type in responses) {\n                if (!dataTypes[0] || s.converters[type + ' ' + dataTypes[0]]) {\n                    finalDataType = type;\n                    break;\n                }\n                if (!firstDataType) {\n                    firstDataType = type;\n                }\n            }\n            // Or just use first one\n            finalDataType = finalDataType || firstDataType;\n        }\n        // If we found a dataType\n        // We add the dataType to the list if needed\n        // and return the corresponding response\n        if (finalDataType) {\n            if (finalDataType !== dataTypes[0]) {\n                dataTypes.unshift(finalDataType);\n            }\n            return responses[finalDataType];\n        }\n    }\n    /* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\n    function ajaxConvert(s, response, jqXHR, isSuccess) {\n        var conv2, current, conv, tmp, prev, converters = {},\n            // Work with a copy of dataTypes in case we need to modify it for conversion\n            dataTypes = s.dataTypes.slice();\n        // Create converters map with lowercased keys\n        if (dataTypes[1]) {\n            for (conv in s.converters) {\n                converters[conv.toLowerCase()] = s.converters[conv];\n            }\n        }\n        current = dataTypes.shift();\n        // Convert to each sequential dataType\n        while (current) {\n            if (s.responseFields[current]) {\n                jqXHR[s.responseFields[current]] = response;\n            }\n            // Apply the dataFilter if provided\n            if (!prev && isSuccess && s.dataFilter) {\n                response = s.dataFilter(response, s.dataType);\n            }\n            prev = current;\n            current = dataTypes.shift();\n            if (current) {\n                // There's only work to do if current dataType is non-auto\n                if (current === '*') {\n                    current = prev;    // Convert response if prev dataType is non-auto and differs from current\n                } else if (prev !== '*' && prev !== current) {\n                    // Seek a direct converter\n                    conv = converters[prev + ' ' + current] || converters['* ' + current];\n                    // If none found, seek a pair\n                    if (!conv) {\n                        for (conv2 in converters) {\n                            // If conv2 outputs current\n                            tmp = conv2.split(' ');\n                            if (tmp[1] === current) {\n                                // If prev can be converted to accepted input\n                                conv = converters[prev + ' ' + tmp[0]] || converters['* ' + tmp[0]];\n                                if (conv) {\n                                    // Condense equivalence converters\n                                    if (conv === true) {\n                                        conv = converters[conv2];    // Otherwise, insert the intermediate dataType\n                                    } else if (converters[conv2] !== true) {\n                                        current = tmp[0];\n                                        dataTypes.unshift(tmp[1]);\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    // Apply converter (if not an equivalence)\n                    if (conv !== true) {\n                        // Unless errors are allowed to bubble, catch and return them\n                        if (conv && s.throws) {\n                            response = conv(response);\n                        } else {\n                            try {\n                                response = conv(response);\n                            } catch (e) {\n                                return {\n                                    state: 'parsererror',\n                                    error: conv ? e : 'No conversion from ' + prev + ' to ' + current\n                                };\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return {\n            state: 'success',\n            data: response\n        };\n    }\n    jQuery.extend({\n        // Counter for holding the number of active queries\n        active: 0,\n        // Last-Modified header cache for next request\n        lastModified: {},\n        etag: {},\n        ajaxSettings: {\n            url: location.href,\n            type: 'GET',\n            isLocal: rlocalProtocol.test(location.protocol),\n            global: true,\n            processData: true,\n            async: true,\n            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n            /*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n            accepts: {\n                '*': allTypes,\n                text: 'text/plain',\n                html: 'text/html',\n                xml: 'application/xml, text/xml',\n                json: 'application/json, text/javascript'\n            },\n            contents: {\n                xml: /\\bxml\\b/,\n                html: /\\bhtml/,\n                json: /\\bjson\\b/\n            },\n            responseFields: {\n                xml: 'responseXML',\n                text: 'responseText',\n                json: 'responseJSON'\n            },\n            // Data converters\n            // Keys separate source (or catchall \"*\") and destination types with a single space\n            converters: {\n                // Convert anything to text\n                '* text': String,\n                // Text to html (true = no transformation)\n                'text html': true,\n                // Evaluate text as a json expression\n                'text json': JSON.parse,\n                // Parse text as xml\n                'text xml': jQuery.parseXML\n            },\n            // For options that shouldn't be deep extended:\n            // you can add your own custom options here if\n            // and when you create one that shouldn't be\n            // deep extended (see ajaxExtend)\n            flatOptions: {\n                url: true,\n                context: true\n            }\n        },\n        // Creates a full fledged settings object into target\n        // with both ajaxSettings and settings fields.\n        // If target is omitted, writes into ajaxSettings.\n        ajaxSetup: function (target, settings) {\n            return settings ? // Building a settings object\n            ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings\n            ajaxExtend(jQuery.ajaxSettings, target);\n        },\n        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n        ajaxTransport: addToPrefiltersOrTransports(transports),\n        // Main method\n        ajax: function (url, options) {\n            // If url is an object, simulate pre-1.5 signature\n            if (typeof url === 'object') {\n                options = url;\n                url = undefined;\n            }\n            // Force options to be an object\n            options = options || {};\n            var transport,\n                // URL without anti-cache param\n                cacheURL,\n                // Response headers\n                responseHeadersString, responseHeaders,\n                // timeout handle\n                timeoutTimer,\n                // Url cleanup var\n                urlAnchor,\n                // Request state (becomes false upon send and true upon completion)\n                completed,\n                // To know if global events are to be dispatched\n                fireGlobals,\n                // Loop variable\n                i,\n                // uncached part of the url\n                uncached,\n                // Create the final options object\n                s = jQuery.ajaxSetup({}, options),\n                // Callbacks context\n                callbackContext = s.context || s,\n                // Context for global events is callbackContext if it is a DOM node or jQuery collection\n                globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n                // Deferreds\n                deferred = jQuery.Deferred(), completeDeferred = jQuery.Callbacks('once memory'),\n                // Status-dependent callbacks\n                statusCode = s.statusCode || {},\n                // Headers (they are sent all at once)\n                requestHeaders = {}, requestHeadersNames = {},\n                // Default abort message\n                strAbort = 'canceled',\n                // Fake xhr\n                jqXHR = {\n                    readyState: 0,\n                    // Builds headers hashtable if needed\n                    getResponseHeader: function (key) {\n                        var match;\n                        if (completed) {\n                            if (!responseHeaders) {\n                                responseHeaders = {};\n                                while (match = rheaders.exec(responseHeadersString)) {\n                                    responseHeaders[match[1].toLowerCase()] = match[2];\n                                }\n                            }\n                            match = responseHeaders[key.toLowerCase()];\n                        }\n                        return match == null ? null : match;\n                    },\n                    // Raw string\n                    getAllResponseHeaders: function () {\n                        return completed ? responseHeadersString : null;\n                    },\n                    // Caches the header\n                    setRequestHeader: function (name, value) {\n                        if (completed == null) {\n                            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n                            requestHeaders[name] = value;\n                        }\n                        return this;\n                    },\n                    // Overrides response content-type header\n                    overrideMimeType: function (type) {\n                        if (completed == null) {\n                            s.mimeType = type;\n                        }\n                        return this;\n                    },\n                    // Status-dependent callbacks\n                    statusCode: function (map) {\n                        var code;\n                        if (map) {\n                            if (completed) {\n                                // Execute the appropriate callbacks\n                                jqXHR.always(map[jqXHR.status]);\n                            } else {\n                                // Lazy-add the new callbacks in a way that preserves old ones\n                                for (code in map) {\n                                    statusCode[code] = [\n                                        statusCode[code],\n                                        map[code]\n                                    ];\n                                }\n                            }\n                        }\n                        return this;\n                    },\n                    // Cancel the request\n                    abort: function (statusText) {\n                        var finalText = statusText || strAbort;\n                        if (transport) {\n                            transport.abort(finalText);\n                        }\n                        done(0, finalText);\n                        return this;\n                    }\n                };\n            // Attach deferreds\n            deferred.promise(jqXHR);\n            // Add protocol if not provided (prefilters might expect it)\n            // Handle falsy url in the settings object (#10093: consistency with old signature)\n            // We also use the url parameter if available\n            s.url = ((url || s.url || location.href) + '').replace(rprotocol, location.protocol + '//');\n            // Alias method option to type as per ticket #12004\n            s.type = options.method || options.type || s.method || s.type;\n            // Extract dataTypes list\n            s.dataTypes = (s.dataType || '*').toLowerCase().match(rnothtmlwhite) || [''];\n            // A cross-domain request is in order when the origin doesn't match the current origin.\n            if (s.crossDomain == null) {\n                urlAnchor = document.createElement('a');\n                // Support: IE <=8 - 11, Edge 12 - 13\n                // IE throws exception on accessing the href property if url is malformed,\n                // e.g. http://example.com:80x/\n                try {\n                    urlAnchor.href = s.url;\n                    // Support: IE <=8 - 11 only\n                    // Anchor's host property isn't correctly set when s.url is relative\n                    urlAnchor.href = urlAnchor.href;\n                    s.crossDomain = originAnchor.protocol + '//' + originAnchor.host !== urlAnchor.protocol + '//' + urlAnchor.host;\n                } catch (e) {\n                    // If there is an error parsing the URL, assume it is crossDomain,\n                    // it can be rejected by the transport if it is invalid\n                    s.crossDomain = true;\n                }\n            }\n            // Convert data if not already a string\n            if (s.data && s.processData && typeof s.data !== 'string') {\n                s.data = jQuery.param(s.data, s.traditional);\n            }\n            // Apply prefilters\n            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);\n            // If request was aborted inside a prefilter, stop there\n            if (completed) {\n                return jqXHR;\n            }\n            // We can fire global events as of now if asked to\n            // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n            fireGlobals = jQuery.event && s.global;\n            // Watch for a new set of requests\n            if (fireGlobals && jQuery.active++ === 0) {\n                jQuery.event.trigger('ajaxStart');\n            }\n            // Uppercase the type\n            s.type = s.type.toUpperCase();\n            // Determine if request has content\n            s.hasContent = !rnoContent.test(s.type);\n            // Save the URL in case we're toying with the If-Modified-Since\n            // and/or If-None-Match header later on\n            // Remove hash to simplify url manipulation\n            cacheURL = s.url.replace(rhash, '');\n            // More options handling for requests with no content\n            if (!s.hasContent) {\n                // Remember the hash so we can put it back\n                uncached = s.url.slice(cacheURL.length);\n                // If data is available, append data to url\n                if (s.data) {\n                    cacheURL += (rquery.test(cacheURL) ? '&' : '?') + s.data;\n                    // #9682: remove data so that it's not used in an eventual retry\n                    delete s.data;\n                }\n                // Add or update anti-cache param if needed\n                if (s.cache === false) {\n                    cacheURL = cacheURL.replace(rantiCache, '$1');\n                    uncached = (rquery.test(cacheURL) ? '&' : '?') + '_=' + nonce++ + uncached;\n                }\n                // Put hash and anti-cache on the URL that will be requested (gh-1732)\n                s.url = cacheURL + uncached;    // Change '%20' to '+' if this is encoded form body content (gh-2658)\n            } else if (s.data && s.processData && (s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0) {\n                s.data = s.data.replace(r20, '+');\n            }\n            // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n            if (s.ifModified) {\n                if (jQuery.lastModified[cacheURL]) {\n                    jqXHR.setRequestHeader('If-Modified-Since', jQuery.lastModified[cacheURL]);\n                }\n                if (jQuery.etag[cacheURL]) {\n                    jqXHR.setRequestHeader('If-None-Match', jQuery.etag[cacheURL]);\n                }\n            }\n            // Set the correct header, if data is being sent\n            if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n                jqXHR.setRequestHeader('Content-Type', s.contentType);\n            }\n            // Set the Accepts header for the server, depending on the dataType\n            jqXHR.setRequestHeader('Accept', s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== '*' ? ', ' + allTypes + '; q=0.01' : '') : s.accepts['*']);\n            // Check for headers option\n            for (i in s.headers) {\n                jqXHR.setRequestHeader(i, s.headers[i]);\n            }\n            // Allow custom headers/mimetypes and early abort\n            if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n                // Abort if not done already and return\n                return jqXHR.abort();\n            }\n            // Aborting is no longer a cancellation\n            strAbort = 'abort';\n            // Install callbacks on deferreds\n            completeDeferred.add(s.complete);\n            jqXHR.done(s.success);\n            jqXHR.fail(s.error);\n            // Get transport\n            transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);\n            // If no transport, we auto-abort\n            if (!transport) {\n                done(-1, 'No Transport');\n            } else {\n                jqXHR.readyState = 1;\n                // Send global event\n                if (fireGlobals) {\n                    globalEventContext.trigger('ajaxSend', [\n                        jqXHR,\n                        s\n                    ]);\n                }\n                // If request was aborted inside ajaxSend, stop there\n                if (completed) {\n                    return jqXHR;\n                }\n                // Timeout\n                if (s.async && s.timeout > 0) {\n                    timeoutTimer = window.setTimeout(function () {\n                        jqXHR.abort('timeout');\n                    }, s.timeout);\n                }\n                try {\n                    completed = false;\n                    transport.send(requestHeaders, done);\n                } catch (e) {\n                    // Rethrow post-completion exceptions\n                    if (completed) {\n                        throw e;\n                    }\n                    // Propagate others as results\n                    done(-1, e);\n                }\n            }\n            // Callback for when everything is done\n            function done(status, nativeStatusText, responses, headers) {\n                var isSuccess, success, error, response, modified, statusText = nativeStatusText;\n                // Ignore repeat invocations\n                if (completed) {\n                    return;\n                }\n                completed = true;\n                // Clear timeout if it exists\n                if (timeoutTimer) {\n                    window.clearTimeout(timeoutTimer);\n                }\n                // Dereference transport for early garbage collection\n                // (no matter how long the jqXHR object will be used)\n                transport = undefined;\n                // Cache response headers\n                responseHeadersString = headers || '';\n                // Set readyState\n                jqXHR.readyState = status > 0 ? 4 : 0;\n                // Determine if successful\n                isSuccess = status >= 200 && status < 300 || status === 304;\n                // Get response data\n                if (responses) {\n                    response = ajaxHandleResponses(s, jqXHR, responses);\n                }\n                // Convert no matter what (that way responseXXX fields are always set)\n                response = ajaxConvert(s, response, jqXHR, isSuccess);\n                // If successful, handle type chaining\n                if (isSuccess) {\n                    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n                    if (s.ifModified) {\n                        modified = jqXHR.getResponseHeader('Last-Modified');\n                        if (modified) {\n                            jQuery.lastModified[cacheURL] = modified;\n                        }\n                        modified = jqXHR.getResponseHeader('etag');\n                        if (modified) {\n                            jQuery.etag[cacheURL] = modified;\n                        }\n                    }\n                    // if no content\n                    if (status === 204 || s.type === 'HEAD') {\n                        statusText = 'nocontent';    // if not modified\n                    } else if (status === 304) {\n                        statusText = 'notmodified';    // If we have data, let's convert it\n                    } else {\n                        statusText = response.state;\n                        success = response.data;\n                        error = response.error;\n                        isSuccess = !error;\n                    }\n                } else {\n                    // Extract error from statusText and normalize for non-aborts\n                    error = statusText;\n                    if (status || !statusText) {\n                        statusText = 'error';\n                        if (status < 0) {\n                            status = 0;\n                        }\n                    }\n                }\n                // Set data for the fake xhr object\n                jqXHR.status = status;\n                jqXHR.statusText = (nativeStatusText || statusText) + '';\n                // Success/Error\n                if (isSuccess) {\n                    deferred.resolveWith(callbackContext, [\n                        success,\n                        statusText,\n                        jqXHR\n                    ]);\n                } else {\n                    deferred.rejectWith(callbackContext, [\n                        jqXHR,\n                        statusText,\n                        error\n                    ]);\n                }\n                // Status-dependent callbacks\n                jqXHR.statusCode(statusCode);\n                statusCode = undefined;\n                if (fireGlobals) {\n                    globalEventContext.trigger(isSuccess ? 'ajaxSuccess' : 'ajaxError', [\n                        jqXHR,\n                        s,\n                        isSuccess ? success : error\n                    ]);\n                }\n                // Complete\n                completeDeferred.fireWith(callbackContext, [\n                    jqXHR,\n                    statusText\n                ]);\n                if (fireGlobals) {\n                    globalEventContext.trigger('ajaxComplete', [\n                        jqXHR,\n                        s\n                    ]);\n                    // Handle the global AJAX counter\n                    if (!--jQuery.active) {\n                        jQuery.event.trigger('ajaxStop');\n                    }\n                }\n            }\n            return jqXHR;\n        },\n        getJSON: function (url, data, callback) {\n            return jQuery.get(url, data, callback, 'json');\n        },\n        getScript: function (url, callback) {\n            return jQuery.get(url, undefined, callback, 'script');\n        }\n    });\n    jQuery.each([\n        'get',\n        'post'\n    ], function (i, method) {\n        jQuery[method] = function (url, data, callback, type) {\n            // Shift arguments if data argument was omitted\n            if (jQuery.isFunction(data)) {\n                type = type || callback;\n                callback = data;\n                data = undefined;\n            }\n            // The url can be an options object (which then must have .url)\n            return jQuery.ajax(jQuery.extend({\n                url: url,\n                type: method,\n                dataType: type,\n                data: data,\n                success: callback\n            }, jQuery.isPlainObject(url) && url));\n        };\n    });\n    jQuery._evalUrl = function (url) {\n        return jQuery.ajax({\n            url: url,\n            // Make this explicit, since user can override this through ajaxSetup (#11264)\n            type: 'GET',\n            dataType: 'script',\n            cache: true,\n            async: false,\n            global: false,\n            'throws': true\n        });\n    };\n    jQuery.fn.extend({\n        wrapAll: function (html) {\n            var wrap;\n            if (this[0]) {\n                if (jQuery.isFunction(html)) {\n                    html = html.call(this[0]);\n                }\n                // The elements to wrap the target around\n                wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n                if (this[0].parentNode) {\n                    wrap.insertBefore(this[0]);\n                }\n                wrap.map(function () {\n                    var elem = this;\n                    while (elem.firstElementChild) {\n                        elem = elem.firstElementChild;\n                    }\n                    return elem;\n                }).append(this);\n            }\n            return this;\n        },\n        wrapInner: function (html) {\n            if (jQuery.isFunction(html)) {\n                return this.each(function (i) {\n                    jQuery(this).wrapInner(html.call(this, i));\n                });\n            }\n            return this.each(function () {\n                var self = jQuery(this), contents = self.contents();\n                if (contents.length) {\n                    contents.wrapAll(html);\n                } else {\n                    self.append(html);\n                }\n            });\n        },\n        wrap: function (html) {\n            var isFunction = jQuery.isFunction(html);\n            return this.each(function (i) {\n                jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\n            });\n        },\n        unwrap: function (selector) {\n            this.parent(selector).not('body').each(function () {\n                jQuery(this).replaceWith(this.childNodes);\n            });\n            return this;\n        }\n    });\n    jQuery.expr.pseudos.hidden = function (elem) {\n        return !jQuery.expr.pseudos.visible(elem);\n    };\n    jQuery.expr.pseudos.visible = function (elem) {\n        return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n    };\n    jQuery.ajaxSettings.xhr = function () {\n        try {\n            return new window.XMLHttpRequest();\n        } catch (e) {\n        }\n    };\n    var xhrSuccessStatus = {\n            // File protocol always yields status code 0, assume 200\n            0: 200,\n            // Support: IE <=9 only\n            // #1450: sometimes IE returns 1223 when it should be 204\n            1223: 204\n        }, xhrSupported = jQuery.ajaxSettings.xhr();\n    support.cors = !!xhrSupported && 'withCredentials' in xhrSupported;\n    support.ajax = xhrSupported = !!xhrSupported;\n    jQuery.ajaxTransport(function (options) {\n        var callback, errorCallback;\n        // Cross domain only allowed if supported through XMLHttpRequest\n        if (support.cors || xhrSupported && !options.crossDomain) {\n            return {\n                send: function (headers, complete) {\n                    var i, xhr = options.xhr();\n                    xhr.open(options.type, options.url, options.async, options.username, options.password);\n                    // Apply custom fields if provided\n                    if (options.xhrFields) {\n                        for (i in options.xhrFields) {\n                            xhr[i] = options.xhrFields[i];\n                        }\n                    }\n                    // Override mime type if needed\n                    if (options.mimeType && xhr.overrideMimeType) {\n                        xhr.overrideMimeType(options.mimeType);\n                    }\n                    // X-Requested-With header\n                    // For cross-domain requests, seeing as conditions for a preflight are\n                    // akin to a jigsaw puzzle, we simply never set it to be sure.\n                    // (it can always be set on a per-request basis or even using ajaxSetup)\n                    // For same-domain requests, won't change header if already provided.\n                    if (!options.crossDomain && !headers['X-Requested-With']) {\n                        headers['X-Requested-With'] = 'XMLHttpRequest';\n                    }\n                    // Set headers\n                    for (i in headers) {\n                        xhr.setRequestHeader(i, headers[i]);\n                    }\n                    // Callback\n                    callback = function (type) {\n                        return function () {\n                            if (callback) {\n                                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n                                if (type === 'abort') {\n                                    xhr.abort();\n                                } else if (type === 'error') {\n                                    // Support: IE <=9 only\n                                    // On a manual native abort, IE9 throws\n                                    // errors on any property access that is not readyState\n                                    if (typeof xhr.status !== 'number') {\n                                        complete(0, 'error');\n                                    } else {\n                                        complete(// File: protocol always yields status 0; see #8605, #14207\n                                        xhr.status, xhr.statusText);\n                                    }\n                                } else {\n                                    complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only\n                                    // IE9 has no XHR2 but throws on binary (trac-11426)\n                                    // For XHR2 non-text, let the caller handle it (gh-2498)\n                                    (xhr.responseType || 'text') !== 'text' || typeof xhr.responseText !== 'string' ? { binary: xhr.response } : { text: xhr.responseText }, xhr.getAllResponseHeaders());\n                                }\n                            }\n                        };\n                    };\n                    // Listen to events\n                    xhr.onload = callback();\n                    errorCallback = xhr.onerror = callback('error');\n                    // Support: IE 9 only\n                    // Use onreadystatechange to replace onabort\n                    // to handle uncaught aborts\n                    if (xhr.onabort !== undefined) {\n                        xhr.onabort = errorCallback;\n                    } else {\n                        xhr.onreadystatechange = function () {\n                            // Check readyState before timeout as it changes\n                            if (xhr.readyState === 4) {\n                                // Allow onerror to be called first,\n                                // but that will not handle a native abort\n                                // Also, save errorCallback to a variable\n                                // as xhr.onerror cannot be accessed\n                                window.setTimeout(function () {\n                                    if (callback) {\n                                        errorCallback();\n                                    }\n                                });\n                            }\n                        };\n                    }\n                    // Create the abort callback\n                    callback = callback('abort');\n                    try {\n                        // Do send the request (this may raise an exception)\n                        xhr.send(options.hasContent && options.data || null);\n                    } catch (e) {\n                        // #14683: Only rethrow if this hasn't been notified as an error yet\n                        if (callback) {\n                            throw e;\n                        }\n                    }\n                },\n                abort: function () {\n                    if (callback) {\n                        callback();\n                    }\n                }\n            };\n        }\n    });\n    // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n    jQuery.ajaxPrefilter(function (s) {\n        if (s.crossDomain) {\n            s.contents.script = false;\n        }\n    });\n    // Install script dataType\n    jQuery.ajaxSetup({\n        accepts: { script: 'text/javascript, application/javascript, ' + 'application/ecmascript, application/x-ecmascript' },\n        contents: { script: /\\b(?:java|ecma)script\\b/ },\n        converters: {\n            'text script': function (text) {\n                jQuery.globalEval(text);\n                return text;\n            }\n        }\n    });\n    // Handle cache's special case and crossDomain\n    jQuery.ajaxPrefilter('script', function (s) {\n        if (s.cache === undefined) {\n            s.cache = false;\n        }\n        if (s.crossDomain) {\n            s.type = 'GET';\n        }\n    });\n    // Bind script tag hack transport\n    jQuery.ajaxTransport('script', function (s) {\n        // This transport only deals with cross domain requests\n        if (s.crossDomain) {\n            var script, callback;\n            return {\n                send: function (_, complete) {\n                    script = jQuery('<script>').prop({\n                        charset: s.scriptCharset,\n                        src: s.url\n                    }).on('load error', callback = function (evt) {\n                        script.remove();\n                        callback = null;\n                        if (evt) {\n                            complete(evt.type === 'error' ? 404 : 200, evt.type);\n                        }\n                    });\n                    // Use native DOM manipulation to avoid our domManip AJAX trickery\n                    document.head.appendChild(script[0]);\n                },\n                abort: function () {\n                    if (callback) {\n                        callback();\n                    }\n                }\n            };\n        }\n    });\n    var oldCallbacks = [], rjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n    // Default jsonp settings\n    jQuery.ajaxSetup({\n        jsonp: 'callback',\n        jsonpCallback: function () {\n            var callback = oldCallbacks.pop() || jQuery.expando + '_' + nonce++;\n            this[callback] = true;\n            return callback;\n        }\n    });\n    // Detect, normalize options and install callbacks for jsonp requests\n    jQuery.ajaxPrefilter('json jsonp', function (s, originalSettings, jqXHR) {\n        var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? 'url' : typeof s.data === 'string' && (s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0 && rjsonp.test(s.data) && 'data');\n        // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n        if (jsonProp || s.dataTypes[0] === 'jsonp') {\n            // Get callback name, remembering preexisting value associated with it\n            callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;\n            // Insert callback into url or form data\n            if (jsonProp) {\n                s[jsonProp] = s[jsonProp].replace(rjsonp, '$1' + callbackName);\n            } else if (s.jsonp !== false) {\n                s.url += (rquery.test(s.url) ? '&' : '?') + s.jsonp + '=' + callbackName;\n            }\n            // Use data converter to retrieve json after script execution\n            s.converters['script json'] = function () {\n                if (!responseContainer) {\n                    jQuery.error(callbackName + ' was not called');\n                }\n                return responseContainer[0];\n            };\n            // Force json dataType\n            s.dataTypes[0] = 'json';\n            // Install callback\n            overwritten = window[callbackName];\n            window[callbackName] = function () {\n                responseContainer = arguments;\n            };\n            // Clean-up function (fires after converters)\n            jqXHR.always(function () {\n                // If previous value didn't exist - remove it\n                if (overwritten === undefined) {\n                    jQuery(window).removeProp(callbackName);    // Otherwise restore preexisting value\n                } else {\n                    window[callbackName] = overwritten;\n                }\n                // Save back as free\n                if (s[callbackName]) {\n                    // Make sure that re-using the options doesn't screw things around\n                    s.jsonpCallback = originalSettings.jsonpCallback;\n                    // Save the callback name for future use\n                    oldCallbacks.push(callbackName);\n                }\n                // Call if it was a function and we have a response\n                if (responseContainer && jQuery.isFunction(overwritten)) {\n                    overwritten(responseContainer[0]);\n                }\n                responseContainer = overwritten = undefined;\n            });\n            // Delegate to script\n            return 'script';\n        }\n    });\n    // Support: Safari 8 only\n    // In Safari 8 documents created via document.implementation.createHTMLDocument\n    // collapse sibling forms: the second one becomes a child of the first one.\n    // Because of that, this security measure has to be disabled in Safari 8.\n    // https://bugs.webkit.org/show_bug.cgi?id=137337\n    support.createHTMLDocument = function () {\n        var body = document.implementation.createHTMLDocument('').body;\n        body.innerHTML = '<form></form><form></form>';\n        return body.childNodes.length === 2;\n    }();\n    // Argument \"data\" should be string of html\n    // context (optional): If specified, the fragment will be created in this context,\n    // defaults to document\n    // keepScripts (optional): If true, will include scripts passed in the html string\n    jQuery.parseHTML = function (data, context, keepScripts) {\n        if (typeof data !== 'string') {\n            return [];\n        }\n        if (typeof context === 'boolean') {\n            keepScripts = context;\n            context = false;\n        }\n        var base, parsed, scripts;\n        if (!context) {\n            // Stop scripts or inline event handlers from being executed immediately\n            // by using document.implementation\n            if (support.createHTMLDocument) {\n                context = document.implementation.createHTMLDocument('');\n                // Set the base href for the created document\n                // so any parsed elements with URLs\n                // are based on the document's URL (gh-2965)\n                base = context.createElement('base');\n                base.href = document.location.href;\n                context.head.appendChild(base);\n            } else {\n                context = document;\n            }\n        }\n        parsed = rsingleTag.exec(data);\n        scripts = !keepScripts && [];\n        // Single tag\n        if (parsed) {\n            return [context.createElement(parsed[1])];\n        }\n        parsed = buildFragment([data], context, scripts);\n        if (scripts && scripts.length) {\n            jQuery(scripts).remove();\n        }\n        return jQuery.merge([], parsed.childNodes);\n    };\n    /**\n * Load a url into a page\n */\n    jQuery.fn.load = function (url, params, callback) {\n        var selector, type, response, self = this, off = url.indexOf(' ');\n        if (off > -1) {\n            selector = stripAndCollapse(url.slice(off));\n            url = url.slice(0, off);\n        }\n        // If it's a function\n        if (jQuery.isFunction(params)) {\n            // We assume that it's the callback\n            callback = params;\n            params = undefined;    // Otherwise, build a param string\n        } else if (params && typeof params === 'object') {\n            type = 'POST';\n        }\n        // If we have elements to modify, make the request\n        if (self.length > 0) {\n            jQuery.ajax({\n                url: url,\n                // If \"type\" variable is undefined, then \"GET\" method will be used.\n                // Make value of this field explicit since\n                // user can override it through ajaxSetup method\n                type: type || 'GET',\n                dataType: 'html',\n                data: params\n            }).done(function (responseText) {\n                // Save response for use in complete callback\n                response = arguments;\n                self.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n                // Exclude scripts to avoid IE 'Permission Denied' errors\n                jQuery('<div>').append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n                responseText);    // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n                                  // but they are ignored because response was set above.\n                                  // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n            }).always(callback && function (jqXHR, status) {\n                self.each(function () {\n                    callback.apply(this, response || [\n                        jqXHR.responseText,\n                        status,\n                        jqXHR\n                    ]);\n                });\n            });\n        }\n        return this;\n    };\n    // Attach a bunch of functions for handling common AJAX events\n    jQuery.each([\n        'ajaxStart',\n        'ajaxStop',\n        'ajaxComplete',\n        'ajaxError',\n        'ajaxSuccess',\n        'ajaxSend'\n    ], function (i, type) {\n        jQuery.fn[type] = function (fn) {\n            return this.on(type, fn);\n        };\n    });\n    jQuery.expr.pseudos.animated = function (elem) {\n        return jQuery.grep(jQuery.timers, function (fn) {\n            return elem === fn.elem;\n        }).length;\n    };\n    jQuery.offset = {\n        setOffset: function (elem, options, i) {\n            var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, 'position'), curElem = jQuery(elem), props = {};\n            // Set position first, in-case top/left are set even on static elem\n            if (position === 'static') {\n                elem.style.position = 'relative';\n            }\n            curOffset = curElem.offset();\n            curCSSTop = jQuery.css(elem, 'top');\n            curCSSLeft = jQuery.css(elem, 'left');\n            calculatePosition = (position === 'absolute' || position === 'fixed') && (curCSSTop + curCSSLeft).indexOf('auto') > -1;\n            // Need to be able to calculate position if either\n            // top or left is auto and position is either absolute or fixed\n            if (calculatePosition) {\n                curPosition = curElem.position();\n                curTop = curPosition.top;\n                curLeft = curPosition.left;\n            } else {\n                curTop = parseFloat(curCSSTop) || 0;\n                curLeft = parseFloat(curCSSLeft) || 0;\n            }\n            if (jQuery.isFunction(options)) {\n                // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n                options = options.call(elem, i, jQuery.extend({}, curOffset));\n            }\n            if (options.top != null) {\n                props.top = options.top - curOffset.top + curTop;\n            }\n            if (options.left != null) {\n                props.left = options.left - curOffset.left + curLeft;\n            }\n            if ('using' in options) {\n                options.using.call(elem, props);\n            } else {\n                curElem.css(props);\n            }\n        }\n    };\n    jQuery.fn.extend({\n        offset: function (options) {\n            // Preserve chaining for setter\n            if (arguments.length) {\n                return options === undefined ? this : this.each(function (i) {\n                    jQuery.offset.setOffset(this, options, i);\n                });\n            }\n            var doc, docElem, rect, win, elem = this[0];\n            if (!elem) {\n                return;\n            }\n            // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n            // Support: IE <=11 only\n            // Running getBoundingClientRect on a\n            // disconnected node in IE throws an error\n            if (!elem.getClientRects().length) {\n                return {\n                    top: 0,\n                    left: 0\n                };\n            }\n            rect = elem.getBoundingClientRect();\n            doc = elem.ownerDocument;\n            docElem = doc.documentElement;\n            win = doc.defaultView;\n            return {\n                top: rect.top + win.pageYOffset - docElem.clientTop,\n                left: rect.left + win.pageXOffset - docElem.clientLeft\n            };\n        },\n        position: function () {\n            if (!this[0]) {\n                return;\n            }\n            var offsetParent, offset, elem = this[0], parentOffset = {\n                    top: 0,\n                    left: 0\n                };\n            // Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n            // because it is its only offset parent\n            if (jQuery.css(elem, 'position') === 'fixed') {\n                // Assume getBoundingClientRect is there when computed position is fixed\n                offset = elem.getBoundingClientRect();\n            } else {\n                // Get *real* offsetParent\n                offsetParent = this.offsetParent();\n                // Get correct offsets\n                offset = this.offset();\n                if (!nodeName(offsetParent[0], 'html')) {\n                    parentOffset = offsetParent.offset();\n                }\n                // Add offsetParent borders\n                parentOffset = {\n                    top: parentOffset.top + jQuery.css(offsetParent[0], 'borderTopWidth', true),\n                    left: parentOffset.left + jQuery.css(offsetParent[0], 'borderLeftWidth', true)\n                };\n            }\n            // Subtract parent offsets and element margins\n            return {\n                top: offset.top - parentOffset.top - jQuery.css(elem, 'marginTop', true),\n                left: offset.left - parentOffset.left - jQuery.css(elem, 'marginLeft', true)\n            };\n        },\n        // This method will return documentElement in the following cases:\n        // 1) For the element inside the iframe without offsetParent, this method will return\n        //    documentElement of the parent window\n        // 2) For the hidden or detached element\n        // 3) For body or html element, i.e. in case of the html node - it will return itself\n        //\n        // but those exceptions were never presented as a real life use-cases\n        // and might be considered as more preferable results.\n        //\n        // This logic, however, is not guaranteed and can change at any point in the future\n        offsetParent: function () {\n            return this.map(function () {\n                var offsetParent = this.offsetParent;\n                while (offsetParent && jQuery.css(offsetParent, 'position') === 'static') {\n                    offsetParent = offsetParent.offsetParent;\n                }\n                return offsetParent || documentElement;\n            });\n        }\n    });\n    // Create scrollLeft and scrollTop methods\n    jQuery.each({\n        scrollLeft: 'pageXOffset',\n        scrollTop: 'pageYOffset'\n    }, function (method, prop) {\n        var top = 'pageYOffset' === prop;\n        jQuery.fn[method] = function (val) {\n            return access(this, function (elem, method, val) {\n                // Coalesce documents and windows\n                var win;\n                if (jQuery.isWindow(elem)) {\n                    win = elem;\n                } else if (elem.nodeType === 9) {\n                    win = elem.defaultView;\n                }\n                if (val === undefined) {\n                    return win ? win[prop] : elem[method];\n                }\n                if (win) {\n                    win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n                } else {\n                    elem[method] = val;\n                }\n            }, method, val, arguments.length);\n        };\n    });\n    // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n    // Add the top/left cssHooks using jQuery.fn.position\n    // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n    // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n    // getComputedStyle returns percent when specified for top/left/bottom/right;\n    // rather than make the css module depend on the offset module, just check for it here\n    jQuery.each([\n        'top',\n        'left'\n    ], function (i, prop) {\n        jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n            if (computed) {\n                computed = curCSS(elem, prop);\n                // If curCSS returns percentage, fallback to offset\n                return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + 'px' : computed;\n            }\n        });\n    });\n    // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n    jQuery.each({\n        Height: 'height',\n        Width: 'width'\n    }, function (name, type) {\n        jQuery.each({\n            padding: 'inner' + name,\n            content: type,\n            '': 'outer' + name\n        }, function (defaultExtra, funcName) {\n            // Margin is only for outerHeight, outerWidth\n            jQuery.fn[funcName] = function (margin, value) {\n                var chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean'), extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');\n                return access(this, function (elem, type, value) {\n                    var doc;\n                    if (jQuery.isWindow(elem)) {\n                        // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n                        return funcName.indexOf('outer') === 0 ? elem['inner' + name] : elem.document.documentElement['client' + name];\n                    }\n                    // Get document width or height\n                    if (elem.nodeType === 9) {\n                        doc = elem.documentElement;\n                        // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n                        // whichever is greatest\n                        return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);\n                    }\n                    return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n                    jQuery.css(elem, type, extra) : // Set width or height on the element\n                    jQuery.style(elem, type, value, extra);\n                }, type, chainable ? margin : undefined, chainable);\n            };\n        });\n    });\n    jQuery.fn.extend({\n        bind: function (types, data, fn) {\n            return this.on(types, null, data, fn);\n        },\n        unbind: function (types, fn) {\n            return this.off(types, null, fn);\n        },\n        delegate: function (selector, types, data, fn) {\n            return this.on(types, selector, data, fn);\n        },\n        undelegate: function (selector, types, fn) {\n            // ( namespace ) or ( selector, types [, fn] )\n            return arguments.length === 1 ? this.off(selector, '**') : this.off(types, selector || '**', fn);\n        }\n    });\n    jQuery.holdReady = function (hold) {\n        if (hold) {\n            jQuery.readyWait++;\n        } else {\n            jQuery.ready(true);\n        }\n    };\n    jQuery.isArray = Array.isArray;\n    jQuery.parseJSON = JSON.parse;\n    jQuery.nodeName = nodeName;\n    // Register as a named AMD module, since jQuery can be concatenated with other\n    // files that may use define, but not via a proper concatenation script that\n    // understands anonymous AMD modules. A named AMD is safest and most robust\n    // way to register. Lowercase jquery is used because AMD module names are\n    // derived from file names, and jQuery is normally delivered in a lowercase\n    // file name. Do this after creating the global so that if an AMD module wants\n    // to call noConflict to hide this version of jQuery, it will work.\n    // Note that for maximum portability, libraries that are not jQuery should\n    // declare themselves as anonymous modules, and avoid setting a global if an\n    // AMD loader is present. jQuery is a special case. For more information, see\n    // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n    if (typeof define === 'function' && define.amd) {\n        define('jquery', [], function () {\n            return jQuery;\n        });\n    }\n    var\n        // Map over jQuery in case of overwrite\n        _jQuery = window.jQuery,\n        // Map over the $ in case of overwrite\n        _$ = window.$;\n    jQuery.noConflict = function (deep) {\n        if (window.$ === jQuery) {\n            window.$ = _$;\n        }\n        if (deep && window.jQuery === jQuery) {\n            window.jQuery = _jQuery;\n        }\n        return jQuery;\n    };\n    // Expose jQuery and $ identifiers, even in AMD\n    // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n    // and CommonJS for browser emulators (#13566)\n    if (!noGlobal) {\n        window.jQuery = window.$ = jQuery;\n    }\n    return jQuery;\n}));},\n411: /* slickgrid/lib/jquery.event.drag-2.3.0 */ function(require, module, exports) {\n/*!\n * jquery.event.drag - v 2.3.0\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2008-06-04\n// Updated: 2012-05-21\n// Updated: 2016-08-16   Luiz Gonzaga dos Santos Filho\n// REQUIRES: jquery 1.8 +, , event.drag 2.3.0\n// TESTED WITH: jQuery 1.8.3, 1.11.2, 2.2.4, and 3.1.0\nvar $ = require(417    /* ../slick.jquery */);\n// add the jquery instance method\n$.fn.drag = function (str, arg, opts) {\n    // figure out the event type\n    var type = typeof str == 'string' ? str : '',\n        // figure out the event handler...\n        fn = $.isFunction(str) ? str : $.isFunction(arg) ? arg : null;\n    // fix the event type\n    if (type.indexOf('drag') !== 0)\n        type = 'drag' + type;\n    // were options passed\n    opts = (str == fn ? arg : opts) || {};\n    // trigger or bind event handler\n    return fn ? this.on(type, opts, fn) : this.trigger(type);\n};\n// local refs (increase compression)\nvar $event = $.event, $special = $event.special,\n    // configure the drag special event\n    drag = $special.drag = {\n        // these are the default settings\n        defaults: {\n            which: 1,\n            // mouse button pressed to start drag sequence\n            distance: 0,\n            // distance dragged before dragstart\n            not: ':input',\n            // selector to suppress dragging on target elements\n            handle: null,\n            // selector to match handle target elements\n            relative: false,\n            // true to use \"position\", false to use \"offset\"\n            drop: true,\n            // false to suppress drop events, true or selector to allow\n            click: false    // false to suppress click events after dragend (no proxy)\n        },\n        // the key name for stored drag data\n        datakey: 'dragdata',\n        // prevent bubbling for better performance\n        noBubble: true,\n        // count bound related events\n        add: function (obj) {\n            // read the interaction data\n            var data = $.data(this, drag.datakey),\n                // read any passed options\n                opts = obj.data || {};\n            // count another realted event\n            data.related += 1;\n            // extend data options bound with this event\n            // don't iterate \"opts\" in case it is a node\n            $.each(drag.defaults, function (key, def) {\n                if (opts[key] !== undefined)\n                    data[key] = opts[key];\n            });\n        },\n        // forget unbound related events\n        remove: function () {\n            $.data(this, drag.datakey).related -= 1;\n        },\n        // configure interaction, capture settings\n        setup: function () {\n            // check for related events\n            if ($.data(this, drag.datakey))\n                return;\n            // initialize the drag data with copied defaults\n            var data = $.extend({ related: 0 }, drag.defaults);\n            // store the interaction data\n            $.data(this, drag.datakey, data);\n            // bind the mousedown event, which starts drag interactions\n            $event.add(this, 'touchstart mousedown', drag.init, data);\n            // prevent image dragging in IE...\n            if (this.attachEvent)\n                this.attachEvent('ondragstart', drag.dontstart);\n        },\n        // destroy configured interaction\n        teardown: function () {\n            var data = $.data(this, drag.datakey) || {};\n            // check for related events\n            if (data.related)\n                return;\n            // remove the stored data\n            $.removeData(this, drag.datakey);\n            // remove the mousedown event\n            $event.remove(this, 'touchstart mousedown', drag.init);\n            // enable text selection\n            drag.textselect(true);\n            // un-prevent image dragging in IE...\n            if (this.detachEvent)\n                this.detachEvent('ondragstart', drag.dontstart);\n        },\n        // initialize the interaction\n        init: function (event) {\n            // sorry, only one touch at a time\n            if (drag.touched)\n                return;\n            // the drag/drop interaction data\n            var dd = event.data, results;\n            // check the which directive\n            if (event.which != 0 && dd.which > 0 && event.which != dd.which)\n                return;\n            // check for suppressed selector\n            if ($(event.target).is(dd.not))\n                return;\n            // check for handle selector\n            if (dd.handle && !$(event.target).closest(dd.handle, event.currentTarget).length)\n                return;\n            drag.touched = event.type == 'touchstart' ? this : null;\n            dd.propagates = 1;\n            dd.mousedown = this;\n            dd.interactions = [drag.interaction(this, dd)];\n            dd.target = event.target;\n            dd.pageX = event.pageX;\n            dd.pageY = event.pageY;\n            dd.dragging = null;\n            // handle draginit event...\n            results = drag.hijack(event, 'draginit', dd);\n            // early cancel\n            if (!dd.propagates)\n                return;\n            // flatten the result set\n            results = drag.flatten(results);\n            // insert new interaction elements\n            if (results && results.length) {\n                dd.interactions = [];\n                $.each(results, function () {\n                    dd.interactions.push(drag.interaction(this, dd));\n                });\n            }\n            // remember how many interactions are propagating\n            dd.propagates = dd.interactions.length;\n            // locate and init the drop targets\n            if (dd.drop !== false && $special.drop)\n                $special.drop.handler(event, dd);\n            // disable text selection\n            drag.textselect(false);\n            // bind additional events...\n            if (drag.touched)\n                $event.add(drag.touched, 'touchmove touchend', drag.handler, dd);\n            else\n                $event.add(document, 'mousemove mouseup', drag.handler, dd);\n            // helps prevent text selection or scrolling\n            if (!drag.touched || dd.live)\n                return false;\n        },\n        // returns an interaction object\n        interaction: function (elem, dd) {\n            var offset = elem && elem.ownerDocument ? $(elem)[dd.relative ? 'position' : 'offset']() || {\n                top: 0,\n                left: 0\n            } : {\n                top: 0,\n                left: 0\n            };\n            return {\n                drag: elem,\n                callback: new drag.callback(),\n                droppable: [],\n                offset: offset\n            };\n        },\n        // handle drag-releatd DOM events\n        handler: function (event) {\n            // read the data before hijacking anything\n            var dd = event.data;\n            // handle various events\n            switch (event.type) {\n            // mousemove, check distance, start dragging\n            case !dd.dragging && 'touchmove':\n                event.preventDefault();\n            case !dd.dragging && 'mousemove':\n                //  drag tolerance, x² + y² = distance²\n                if (Math.pow(event.pageX - dd.pageX, 2) + Math.pow(event.pageY - dd.pageY, 2) < Math.pow(dd.distance, 2))\n                    break;\n                // distance tolerance not reached\n                event.target = dd.target;\n                // force target from \"mousedown\" event (fix distance issue)\n                drag.hijack(event, 'dragstart', dd);\n                // trigger \"dragstart\"\n                if (dd.propagates)\n                    // \"dragstart\" not rejected\n                    dd.dragging = true;\n            // activate interaction\n            // mousemove, dragging\n            case 'touchmove':\n                event.preventDefault();\n            case 'mousemove':\n                if (dd.dragging) {\n                    // trigger \"drag\"\n                    drag.hijack(event, 'drag', dd);\n                    if (dd.propagates) {\n                        // manage drop events\n                        if (dd.drop !== false && $special.drop)\n                            $special.drop.handler(event, dd);\n                        // \"dropstart\", \"dropend\"\n                        break;    // \"drag\" not rejected, stop\n                    }\n                    event.type = 'mouseup';    // helps \"drop\" handler behave\n                }\n            // mouseup, stop dragging\n            case 'touchend':\n            case 'mouseup':\n            default:\n                if (drag.touched)\n                    $event.remove(drag.touched, 'touchmove touchend', drag.handler);    // remove touch events\n                else\n                    $event.remove(document, 'mousemove mouseup', drag.handler);\n                // remove page events\n                if (dd.dragging) {\n                    if (dd.drop !== false && $special.drop)\n                        $special.drop.handler(event, dd);\n                    // \"drop\"\n                    drag.hijack(event, 'dragend', dd);    // trigger \"dragend\"\n                }\n                drag.textselect(true);\n                // enable text selection\n                // if suppressing click events...\n                if (dd.click === false && dd.dragging)\n                    $.data(dd.mousedown, 'suppress.click', new Date().getTime() + 5);\n                dd.dragging = drag.touched = false;\n                // deactivate element\n                break;\n            }\n        },\n        // re-use event object for custom events\n        hijack: function (event, type, dd, x, elem) {\n            // not configured\n            if (!dd)\n                return;\n            // remember the original event and type\n            var orig = {\n                    event: event.originalEvent,\n                    type: event.type\n                },\n                // is the event drag related or drog related?\n                mode = type.indexOf('drop') ? 'drag' : 'drop',\n                // iteration vars\n                result, i = x || 0, ia, $elems, callback, len = !isNaN(x) ? x : dd.interactions.length;\n            // modify the event type\n            event.type = type;\n            // protects originalEvent from side-effects\n            var noop = function () {\n            };\n            event.originalEvent = new $.Event(orig.event, {\n                preventDefault: noop,\n                stopPropagation: noop,\n                stopImmediatePropagation: noop\n            });\n            // initialize the results\n            dd.results = [];\n            // handle each interacted element\n            do\n                if (ia = dd.interactions[i]) {\n                    // validate the interaction\n                    if (type !== 'dragend' && ia.cancelled)\n                        continue;\n                    // set the dragdrop properties on the event object\n                    callback = drag.properties(event, dd, ia);\n                    // prepare for more results\n                    ia.results = [];\n                    // handle each element\n                    $(elem || ia[mode] || dd.droppable).each(function (p, subject) {\n                        // identify drag or drop targets individually\n                        callback.target = subject;\n                        // force propagtion of the custom event\n                        event.isPropagationStopped = function () {\n                            return false;\n                        };\n                        // handle the event\n                        result = subject ? $event.dispatch.call(subject, event, callback) : null;\n                        // stop the drag interaction for this element\n                        if (result === false) {\n                            if (mode == 'drag') {\n                                ia.cancelled = true;\n                                dd.propagates -= 1;\n                            }\n                            if (type == 'drop') {\n                                ia[mode][p] = null;\n                            }\n                        }    // assign any dropinit elements\n                        else if (type == 'dropinit')\n                            ia.droppable.push(drag.element(result) || subject);\n                        // accept a returned proxy element\n                        if (type == 'dragstart')\n                            ia.proxy = $(drag.element(result) || ia.drag)[0];\n                        // remember this result\n                        ia.results.push(result);\n                        // forget the event result, for recycling\n                        delete event.result;\n                        // break on cancelled handler\n                        if (type !== 'dropinit')\n                            return result;\n                    });\n                    // flatten the results\n                    dd.results[i] = drag.flatten(ia.results);\n                    // accept a set of valid drop targets\n                    if (type == 'dropinit')\n                        ia.droppable = drag.flatten(ia.droppable);\n                    // locate drop targets\n                    if (type == 'dragstart' && !ia.cancelled)\n                        callback.update();\n                }\n            while (++i < len);\n            // restore the original event & type\n            event.type = orig.type;\n            event.originalEvent = orig.event;\n            // return all handler results\n            return drag.flatten(dd.results);\n        },\n        // extend the callback object with drag/drop properties...\n        properties: function (event, dd, ia) {\n            var obj = ia.callback;\n            // elements\n            obj.drag = ia.drag;\n            obj.proxy = ia.proxy || ia.drag;\n            // starting mouse position\n            obj.startX = dd.pageX;\n            obj.startY = dd.pageY;\n            // current distance dragged\n            obj.deltaX = event.pageX - dd.pageX;\n            obj.deltaY = event.pageY - dd.pageY;\n            // original element position\n            obj.originalX = ia.offset.left;\n            obj.originalY = ia.offset.top;\n            // adjusted element position\n            obj.offsetX = obj.originalX + obj.deltaX;\n            obj.offsetY = obj.originalY + obj.deltaY;\n            // assign the drop targets information\n            obj.drop = drag.flatten((ia.drop || []).slice());\n            obj.available = drag.flatten((ia.droppable || []).slice());\n            return obj;\n        },\n        // determine is the argument is an element or jquery instance\n        element: function (arg) {\n            if (arg && (arg.jquery || arg.nodeType == 1))\n                return arg;\n        },\n        // flatten nested jquery objects and arrays into a single dimension array\n        flatten: function (arr) {\n            return $.map(arr, function (member) {\n                return member && member.jquery ? $.makeArray(member) : member && member.length ? drag.flatten(member) : member;\n            });\n        },\n        // toggles text selection attributes ON (true) or OFF (false)\n        textselect: function (bool) {\n            $(document)[bool ? 'off' : 'on']('selectstart', drag.dontstart).css('MozUserSelect', bool ? '' : 'none');\n            // .attr(\"unselectable\", bool ? \"off\" : \"on\" )\n            document.unselectable = bool ? 'off' : 'on';\n        },\n        // suppress \"selectstart\" and \"ondragstart\" events\n        dontstart: function () {\n            return false;\n        },\n        // a callback instance contructor\n        callback: function () {\n        }\n    };\n// callback methods\ndrag.callback.prototype = {\n    update: function () {\n        if ($special.drop && this.available.length)\n            $.each(this.available, function (i) {\n                $special.drop.locate(this, i);\n            });\n    }\n};\n// patch $.event.$dispatch to allow suppressing clicks\nvar $dispatch = $event.dispatch;\n$event.dispatch = function (event) {\n    if ($.data(this, 'suppress.' + event.type) - new Date().getTime() > 0) {\n        $.removeData(this, 'suppress.' + event.type);\n        return;\n    }\n    return $dispatch.apply(this, arguments);\n};\n// share the same special event configuration with related events...\n$special.draginit = $special.dragstart = $special.dragend = drag;},\n412: /* slickgrid/lib/jquery.event.drop-2.3.0 */ function(require, module, exports) {\n/*!\n * jquery.event.drop - v 2.3.0\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2008-06-04\n// Updated: 2012-05-21\n// Updated: 2016-08-16   Luiz Gonzaga dos Santos Filho\n// REQUIRES: jquery 1.8 +, , event.drag 2.3.0\n// TESTED WITH: jQuery 1.8.3, 1.11.2, 2.2.4, and 3.1.0\nvar $ = require(417    /* ../slick.jquery */);\n// Events: drop, dropstart, dropend\n// add the jquery instance method\n$.fn.drop = function (str, arg, opts) {\n    // figure out the event type\n    var type = typeof str == 'string' ? str : '',\n        // figure out the event handler...\n        fn = $.isFunction(str) ? str : $.isFunction(arg) ? arg : null;\n    // fix the event type\n    if (type.indexOf('drop') !== 0)\n        type = 'drop' + type;\n    // were options passed\n    opts = (str == fn ? arg : opts) || {};\n    // trigger or bind event handler\n    return fn ? this.on(type, opts, fn) : this.trigger(type);\n};\n// DROP MANAGEMENT UTILITY\n// returns filtered drop target elements, caches their positions\n$.drop = function (opts) {\n    opts = opts || {};\n    // safely set new options...\n    drop.multi = opts.multi === true ? Infinity : opts.multi === false ? 1 : !isNaN(opts.multi) ? opts.multi : drop.multi;\n    drop.delay = opts.delay || drop.delay;\n    drop.tolerance = $.isFunction(opts.tolerance) ? opts.tolerance : opts.tolerance === null ? null : drop.tolerance;\n    drop.mode = opts.mode || drop.mode || 'intersect';\n};\n// local refs (increase compression)\nvar $event = $.event, $special = $event.special,\n    // configure the drop special event\n    drop = $.event.special.drop = {\n        // these are the default settings\n        multi: 1,\n        // allow multiple drop winners per dragged element\n        delay: 20,\n        // async timeout delay\n        mode: 'overlap',\n        // drop tolerance mode\n        // internal cache\n        targets: [],\n        // the key name for stored drop data\n        datakey: 'dropdata',\n        // prevent bubbling for better performance\n        noBubble: true,\n        // count bound related events\n        add: function (obj) {\n            // read the interaction data\n            var data = $.data(this, drop.datakey);\n            // count another realted event\n            data.related += 1;\n        },\n        // forget unbound related events\n        remove: function () {\n            $.data(this, drop.datakey).related -= 1;\n        },\n        // configure the interactions\n        setup: function () {\n            // check for related events\n            if ($.data(this, drop.datakey))\n                return;\n            // initialize the drop element data\n            var data = {\n                related: 0,\n                active: [],\n                anyactive: 0,\n                winner: 0,\n                location: {}\n            };\n            // store the drop data on the element\n            $.data(this, drop.datakey, data);\n            // store the drop target in internal cache\n            drop.targets.push(this);\n        },\n        // destroy the configure interaction\n        teardown: function () {\n            var data = $.data(this, drop.datakey) || {};\n            // check for related events\n            if (data.related)\n                return;\n            // remove the stored data\n            $.removeData(this, drop.datakey);\n            // reference the targeted element\n            var element = this;\n            // remove from the internal cache\n            drop.targets = $.grep(drop.targets, function (target) {\n                return target !== element;\n            });\n        },\n        // shared event handler\n        handler: function (event, dd) {\n            // local vars\n            var results, $targets;\n            // make sure the right data is available\n            if (!dd)\n                return;\n            // handle various events\n            switch (event.type) {\n            // draginit, from $.event.special.drag\n            case 'mousedown':\n            // DROPINIT >>\n            case 'touchstart':\n                // DROPINIT >>\n                // collect and assign the drop targets\n                $targets = $(drop.targets);\n                if (typeof dd.drop == 'string')\n                    $targets = $targets.filter(dd.drop);\n                // reset drop data winner properties\n                $targets.each(function () {\n                    var data = $.data(this, drop.datakey);\n                    data.active = [];\n                    data.anyactive = 0;\n                    data.winner = 0;\n                });\n                // set available target elements\n                dd.droppable = $targets;\n                // activate drop targets for the initial element being dragged\n                $special.drag.hijack(event, 'dropinit', dd);\n                break;\n            // drag, from $.event.special.drag\n            case 'mousemove':\n            // TOLERATE >>\n            case 'touchmove':\n                // TOLERATE >>\n                drop.event = event;\n                // store the mousemove event\n                if (!drop.timer)\n                    // monitor drop targets\n                    drop.tolerate(dd);\n                break;\n            // dragend, from $.event.special.drag\n            case 'mouseup':\n            // DROP >> DROPEND >>\n            case 'touchend':\n                // DROP >> DROPEND >>\n                drop.timer = clearTimeout(drop.timer);\n                // delete timer\n                if (dd.propagates) {\n                    $special.drag.hijack(event, 'drop', dd);\n                    $special.drag.hijack(event, 'dropend', dd);\n                }\n                break;\n            }\n        },\n        // returns the location positions of an element\n        locate: function (elem, index) {\n            var data = $.data(elem, drop.datakey), $elem = $(elem), posi = $elem.offset() || {}, height = $elem.outerHeight(), width = $elem.outerWidth(), location = {\n                    elem: elem,\n                    width: width,\n                    height: height,\n                    top: posi.top,\n                    left: posi.left,\n                    right: posi.left + width,\n                    bottom: posi.top + height\n                };\n            // drag elements might not have dropdata\n            if (data) {\n                data.location = location;\n                data.index = index;\n                data.elem = elem;\n            }\n            return location;\n        },\n        // test the location positions of an element against another OR an X,Y coord\n        contains: function (target, test) {\n            // target { location } contains test [x,y] or { location }\n            return (test[0] || test.left) >= target.left && (test[0] || test.right) <= target.right && (test[1] || test.top) >= target.top && (test[1] || test.bottom) <= target.bottom;\n        },\n        // stored tolerance modes\n        modes: {\n            // fn scope: \"$.event.special.drop\" object\n            // target with mouse wins, else target with most overlap wins\n            'intersect': function (event, proxy, target) {\n                return this.contains(target, [\n                    event.pageX,\n                    event.pageY\n                ]) ? // check cursor\n                1000000000 : this.modes.overlap.apply(this, arguments);    // check overlap\n            },\n            // target with most overlap wins\n            'overlap': function (event, proxy, target) {\n                // calculate the area of overlap...\n                return Math.max(0, Math.min(target.bottom, proxy.bottom) - Math.max(target.top, proxy.top)) * Math.max(0, Math.min(target.right, proxy.right) - Math.max(target.left, proxy.left));\n            },\n            // proxy is completely contained within target bounds\n            'fit': function (event, proxy, target) {\n                return this.contains(target, proxy) ? 1 : 0;\n            },\n            // center of the proxy is contained within target bounds\n            'middle': function (event, proxy, target) {\n                return this.contains(target, [\n                    proxy.left + proxy.width * 0.5,\n                    proxy.top + proxy.height * 0.5\n                ]) ? 1 : 0;\n            }\n        },\n        // sort drop target cache by by winner (dsc), then index (asc)\n        sort: function (a, b) {\n            return b.winner - a.winner || a.index - b.index;\n        },\n        // async, recursive tolerance execution\n        tolerate: function (dd) {\n            // declare local refs\n            var i, drp, drg, data, arr, len, elem,\n                // interaction iteration variables\n                x = 0, ia, end = dd.interactions.length,\n                // determine the mouse coords\n                xy = [\n                    drop.event.pageX,\n                    drop.event.pageY\n                ],\n                // custom or stored tolerance fn\n                tolerance = drop.tolerance || drop.modes[drop.mode];\n            // go through each passed interaction...\n            do\n                if (ia = dd.interactions[x]) {\n                    // check valid interaction\n                    if (!ia)\n                        return;\n                    // initialize or clear the drop data\n                    ia.drop = [];\n                    // holds the drop elements\n                    arr = [];\n                    len = ia.droppable.length;\n                    // determine the proxy location, if needed\n                    if (tolerance)\n                        drg = drop.locate(ia.proxy);\n                    // reset the loop\n                    i = 0;\n                    // loop each stored drop target\n                    do\n                        if (elem = ia.droppable[i]) {\n                            data = $.data(elem, drop.datakey);\n                            drp = data.location;\n                            if (!drp)\n                                continue;\n                            // find a winner: tolerance function is defined, call it\n                            data.winner = tolerance ? tolerance.call(drop, drop.event, drg, drp)    // mouse position is always the fallback\n : drop.contains(drp, xy) ? 1 : 0;\n                            arr.push(data);\n                        }\n                    while (++i < len);\n                    // loop\n                    // sort the drop targets\n                    arr.sort(drop.sort);\n                    // reset the loop\n                    i = 0;\n                    // loop through all of the targets again\n                    do\n                        if (data = arr[i]) {\n                            // winners...\n                            if (data.winner && ia.drop.length < drop.multi) {\n                                // new winner... dropstart\n                                if (!data.active[x] && !data.anyactive) {\n                                    // check to make sure that this is not prevented\n                                    if ($special.drag.hijack(drop.event, 'dropstart', dd, x, data.elem)[0] !== false) {\n                                        data.active[x] = 1;\n                                        data.anyactive += 1;\n                                    }    // if false, it is not a winner\n                                    else\n                                        data.winner = 0;\n                                }\n                                // if it is still a winner\n                                if (data.winner)\n                                    ia.drop.push(data.elem);\n                            }    // losers...\n                            else if (data.active[x] && data.anyactive == 1) {\n                                // former winner... dropend\n                                $special.drag.hijack(drop.event, 'dropend', dd, x, data.elem);\n                                data.active[x] = 0;\n                                data.anyactive -= 1;\n                            }\n                        }\n                    while (++i < len);    // loop\n                }\n            while (++x < end);\n            // loop\n            // check if the mouse is still moving or is idle\n            if (drop.last && xy[0] == drop.last.pageX && xy[1] == drop.last.pageY)\n                delete drop.timer;    // idle, don't recurse\n            else\n                // recurse\n                drop.timer = setTimeout(function () {\n                    drop.tolerate(dd);\n                }, drop.delay);\n            // remember event, to compare idleness\n            drop.last = drop.event;\n        }\n    };\n// share the same special event configuration with related events...\n$special.dropinit = $special.dropstart = $special.dropend = drop;},\n413: /* slickgrid/plugins/slick.checkboxselectcolumn */ function(require, module, exports) {\n'use strict';\nvar $ = require(417    /* ../slick.jquery */);\nvar Slick = require(415    /* ../slick.core */);\nfunction CheckboxSelectColumn(options) {\n    var _grid;\n    var _self = this;\n    var _handler = new Slick.EventHandler();\n    var _selectedRowsLookup = {};\n    var _defaults = {\n        columnId: '_checkbox_selector',\n        cssClass: null,\n        toolTip: 'Select/Deselect All',\n        width: 30\n    };\n    var _options = $.extend(true, {}, _defaults, options);\n    function init(grid) {\n        _grid = grid;\n        _handler.subscribe(_grid.onSelectedRowsChanged, handleSelectedRowsChanged).subscribe(_grid.onClick, handleClick).subscribe(_grid.onHeaderClick, handleHeaderClick).subscribe(_grid.onKeyDown, handleKeyDown);\n    }\n    function destroy() {\n        _handler.unsubscribeAll();\n    }\n    function handleSelectedRowsChanged(e, args) {\n        var selectedRows = _grid.getSelectedRows();\n        var lookup = {}, row, i;\n        for (i = 0; i < selectedRows.length; i++) {\n            row = selectedRows[i];\n            lookup[row] = true;\n            if (lookup[row] !== _selectedRowsLookup[row]) {\n                _grid.invalidateRow(row);\n                delete _selectedRowsLookup[row];\n            }\n        }\n        for (i in _selectedRowsLookup) {\n            _grid.invalidateRow(i);\n        }\n        _selectedRowsLookup = lookup;\n        _grid.render();\n        if (selectedRows.length && selectedRows.length == _grid.getDataLength()) {\n            _grid.updateColumnHeader(_options.columnId, '<input type=\\'checkbox\\' checked=\\'checked\\'>', _options.toolTip);\n        } else {\n            _grid.updateColumnHeader(_options.columnId, '<input type=\\'checkbox\\'>', _options.toolTip);\n        }\n    }\n    function handleKeyDown(e, args) {\n        if (e.which == 32) {\n            if (_grid.getColumns()[args.cell].id === _options.columnId) {\n                // if editing, try to commit\n                if (!_grid.getEditorLock().isActive() || _grid.getEditorLock().commitCurrentEdit()) {\n                    toggleRowSelection(args.row);\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            }\n        }\n    }\n    function handleClick(e, args) {\n        // clicking on a row select checkbox\n        if (_grid.getColumns()[args.cell].id === _options.columnId && $(e.target).is(':checkbox')) {\n            // if editing, try to commit\n            if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return;\n            }\n            toggleRowSelection(args.row);\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n    function toggleRowSelection(row) {\n        if (_selectedRowsLookup[row]) {\n            _grid.setSelectedRows($.grep(_grid.getSelectedRows(), function (n) {\n                return n != row;\n            }));\n        } else {\n            _grid.setSelectedRows(_grid.getSelectedRows().concat(row));\n        }\n    }\n    function selectRows(rowArray) {\n        var i, l = rowArray.length, addRows = [];\n        for (i = 0; i < l; i++) {\n            if (!_selectedRowsLookup[rowArray[i]]) {\n                addRows[addRows.length] = rowArray[i];\n            }\n        }\n        _grid.setSelectedRows(_grid.getSelectedRows().concat(addRows));\n    }\n    function deSelectRows(rowArray) {\n        var i, l = rowArray.length, removeRows = [];\n        for (i = 0; i < l; i++) {\n            if (_selectedRowsLookup[rowArray[i]]) {\n                removeRows[removeRows.length] = rowArray[i];\n            }\n        }\n        _grid.setSelectedRows($.grep(_grid.getSelectedRows(), function (n) {\n            return removeRows.indexOf(n) < 0;\n        }));\n    }\n    function handleHeaderClick(e, args) {\n        if (args.column.id == _options.columnId && $(e.target).is(':checkbox')) {\n            // if editing, try to commit\n            if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return;\n            }\n            if ($(e.target).is(':checked')) {\n                var rows = [];\n                for (var i = 0; i < _grid.getDataLength(); i++) {\n                    rows.push(i);\n                }\n                _grid.setSelectedRows(rows);\n            } else {\n                _grid.setSelectedRows([]);\n            }\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n    function getColumnDefinition() {\n        return {\n            id: _options.columnId,\n            name: '<input type=\\'checkbox\\'>',\n            toolTip: _options.toolTip,\n            field: 'sel',\n            width: _options.width,\n            resizable: false,\n            sortable: false,\n            cssClass: _options.cssClass,\n            formatter: checkboxSelectionFormatter\n        };\n    }\n    function checkboxSelectionFormatter(row, cell, value, columnDef, dataContext) {\n        if (dataContext) {\n            return _selectedRowsLookup[row] ? '<input type=\\'checkbox\\' checked=\\'checked\\'>' : '<input type=\\'checkbox\\'>';\n        }\n        return null;\n    }\n    $.extend(this, {\n        'init': init,\n        'destroy': destroy,\n        'deSelectRows': deSelectRows,\n        'selectRows': selectRows,\n        'getColumnDefinition': getColumnDefinition\n    });\n}\nmodule.exports = { 'CheckboxSelectColumn': CheckboxSelectColumn };},\n414: /* slickgrid/plugins/slick.rowselectionmodel */ function(require, module, exports) {\n'use strict';\nvar $ = require(417    /* ../slick.jquery */);\nvar Slick = require(415    /* ../slick.core */);\nfunction RowSelectionModel(options) {\n    var _grid;\n    var _ranges = [];\n    var _self = this;\n    var _handler = new Slick.EventHandler();\n    var _inHandler;\n    var _options;\n    var _defaults = { selectActiveRow: true };\n    function init(grid) {\n        _options = $.extend(true, {}, _defaults, options);\n        _grid = grid;\n        _handler.subscribe(_grid.onActiveCellChanged, wrapHandler(handleActiveCellChange));\n        _handler.subscribe(_grid.onKeyDown, wrapHandler(handleKeyDown));\n        _handler.subscribe(_grid.onClick, wrapHandler(handleClick));\n    }\n    function destroy() {\n        _handler.unsubscribeAll();\n    }\n    function wrapHandler(handler) {\n        return function () {\n            if (!_inHandler) {\n                _inHandler = true;\n                handler.apply(this, arguments);\n                _inHandler = false;\n            }\n        };\n    }\n    function rangesToRows(ranges) {\n        var rows = [];\n        for (var i = 0; i < ranges.length; i++) {\n            for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n                rows.push(j);\n            }\n        }\n        return rows;\n    }\n    function rowsToRanges(rows) {\n        var ranges = [];\n        var lastCell = _grid.getColumns().length - 1;\n        for (var i = 0; i < rows.length; i++) {\n            ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n        }\n        return ranges;\n    }\n    function getRowsRange(from, to) {\n        var i, rows = [];\n        for (i = from; i <= to; i++) {\n            rows.push(i);\n        }\n        for (i = to; i < from; i++) {\n            rows.push(i);\n        }\n        return rows;\n    }\n    function getSelectedRows() {\n        return rangesToRows(_ranges);\n    }\n    function setSelectedRows(rows) {\n        setSelectedRanges(rowsToRanges(rows));\n    }\n    function setSelectedRanges(ranges) {\n        // simle check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n        if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)) {\n            return;\n        }\n        _ranges = ranges;\n        _self.onSelectedRangesChanged.notify(_ranges);\n    }\n    function getSelectedRanges() {\n        return _ranges;\n    }\n    function handleActiveCellChange(e, data) {\n        if (_options.selectActiveRow && data.row != null) {\n            setSelectedRanges([new Slick.Range(data.row, 0, data.row, _grid.getColumns().length - 1)]);\n        }\n    }\n    function handleKeyDown(e) {\n        var activeRow = _grid.getActiveCell();\n        if (activeRow && e.shiftKey && !e.ctrlKey && !e.altKey && !e.metaKey && (e.which == 38 || e.which == 40)) {\n            var selectedRows = getSelectedRows();\n            selectedRows.sort(function (x, y) {\n                return x - y;\n            });\n            if (!selectedRows.length) {\n                selectedRows = [activeRow.row];\n            }\n            var top = selectedRows[0];\n            var bottom = selectedRows[selectedRows.length - 1];\n            var active;\n            if (e.which == 40) {\n                active = activeRow.row < bottom || top == bottom ? ++bottom : ++top;\n            } else {\n                active = activeRow.row < bottom ? --bottom : --top;\n            }\n            if (active >= 0 && active < _grid.getDataLength()) {\n                _grid.scrollRowIntoView(active);\n                var tempRanges = rowsToRanges(getRowsRange(top, bottom));\n                setSelectedRanges(tempRanges);\n            }\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n    function handleClick(e) {\n        var cell = _grid.getCellFromEvent(e);\n        if (!cell || !_grid.canCellBeActive(cell.row, cell.cell)) {\n            return false;\n        }\n        if (!_grid.getOptions().multiSelect || !e.ctrlKey && !e.shiftKey && !e.metaKey) {\n            return false;\n        }\n        var selection = rangesToRows(_ranges);\n        var idx = $.inArray(cell.row, selection);\n        if (idx === -1 && (e.ctrlKey || e.metaKey)) {\n            selection.push(cell.row);\n            _grid.setActiveCell(cell.row, cell.cell);\n        } else if (idx !== -1 && (e.ctrlKey || e.metaKey)) {\n            selection = $.grep(selection, function (o, i) {\n                return o !== cell.row;\n            });\n            _grid.setActiveCell(cell.row, cell.cell);\n        } else if (selection.length && e.shiftKey) {\n            var last = selection.pop();\n            var from = Math.min(cell.row, last);\n            var to = Math.max(cell.row, last);\n            selection = [];\n            for (var i = from; i <= to; i++) {\n                if (i !== last) {\n                    selection.push(i);\n                }\n            }\n            selection.push(last);\n            _grid.setActiveCell(cell.row, cell.cell);\n        }\n        var tempRanges = rowsToRanges(selection);\n        setSelectedRanges(tempRanges);\n        e.stopImmediatePropagation();\n        return true;\n    }\n    $.extend(this, {\n        'getSelectedRows': getSelectedRows,\n        'setSelectedRows': setSelectedRows,\n        'getSelectedRanges': getSelectedRanges,\n        'setSelectedRanges': setSelectedRanges,\n        'init': init,\n        'destroy': destroy,\n        'onSelectedRangesChanged': new Slick.Event()\n    });\n}\nmodule.exports = { 'RowSelectionModel': RowSelectionModel };},\n415: /* slickgrid/slick.core */ function(require, module, exports) {\n'use strict';\n/***\n * Contains core SlickGrid classes.\n * @module Core\n * @namespace Slick\n */\n/***\n   * An event object for passing data to event handlers and letting them control propagation.\n   * <p>This is pretty much identical to how W3C and jQuery implement events.</p>\n   * @class EventData\n   * @constructor\n   */\nfunction EventData() {\n    var isPropagationStopped = false;\n    var isImmediatePropagationStopped = false;\n    /***\n     * Stops event from propagating up the DOM tree.\n     * @method stopPropagation\n     */\n    this.stopPropagation = function () {\n        isPropagationStopped = true;\n    };\n    /***\n     * Returns whether stopPropagation was called on this event object.\n     * @method isPropagationStopped\n     * @return {Boolean}\n     */\n    this.isPropagationStopped = function () {\n        return isPropagationStopped;\n    };\n    /***\n     * Prevents the rest of the handlers from being executed.\n     * @method stopImmediatePropagation\n     */\n    this.stopImmediatePropagation = function () {\n        isImmediatePropagationStopped = true;\n    };\n    /***\n     * Returns whether stopImmediatePropagation was called on this event object.\\\n     * @method isImmediatePropagationStopped\n     * @return {Boolean}\n     */\n    this.isImmediatePropagationStopped = function () {\n        return isImmediatePropagationStopped;\n    };\n}\n/***\n   * A simple publisher-subscriber implementation.\n   * @class Event\n   * @constructor\n   */\nfunction Event() {\n    var handlers = [];\n    /***\n     * Adds an event handler to be called when the event is fired.\n     * <p>Event handler will receive two arguments - an <code>EventData</code> and the <code>data</code>\n     * object the event was fired with.<p>\n     * @method subscribe\n     * @param fn {Function} Event handler.\n     */\n    this.subscribe = function (fn) {\n        handlers.push(fn);\n    };\n    /***\n     * Removes an event handler added with <code>subscribe(fn)</code>.\n     * @method unsubscribe\n     * @param fn {Function} Event handler to be removed.\n     */\n    this.unsubscribe = function (fn) {\n        for (var i = handlers.length - 1; i >= 0; i--) {\n            if (handlers[i] === fn) {\n                handlers.splice(i, 1);\n            }\n        }\n    };\n    /***\n     * Fires an event notifying all subscribers.\n     * @method notify\n     * @param args {Object} Additional data object to be passed to all handlers.\n     * @param e {EventData}\n     *      Optional.\n     *      An <code>EventData</code> object to be passed to all handlers.\n     *      For DOM events, an existing W3C/jQuery event object can be passed in.\n     * @param scope {Object}\n     *      Optional.\n     *      The scope (\"this\") within which the handler will be executed.\n     *      If not specified, the scope will be set to the <code>Event</code> instance.\n     */\n    this.notify = function (args, e, scope) {\n        e = e || new EventData();\n        scope = scope || this;\n        var returnValue;\n        for (var i = 0; i < handlers.length && !(e.isPropagationStopped() || e.isImmediatePropagationStopped()); i++) {\n            returnValue = handlers[i].call(scope, e, args);\n        }\n        return returnValue;\n    };\n}\nfunction EventHandler() {\n    var handlers = [];\n    this.subscribe = function (event, handler) {\n        handlers.push({\n            event: event,\n            handler: handler\n        });\n        event.subscribe(handler);\n        return this;    // allow chaining\n    };\n    this.unsubscribe = function (event, handler) {\n        var i = handlers.length;\n        while (i--) {\n            if (handlers[i].event === event && handlers[i].handler === handler) {\n                handlers.splice(i, 1);\n                event.unsubscribe(handler);\n                return;\n            }\n        }\n        return this;    // allow chaining\n    };\n    this.unsubscribeAll = function () {\n        var i = handlers.length;\n        while (i--) {\n            handlers[i].event.unsubscribe(handlers[i].handler);\n        }\n        handlers = [];\n        return this;    // allow chaining\n    };\n}\n/***\n   * A structure containing a range of cells.\n   * @class Range\n   * @constructor\n   * @param fromRow {Integer} Starting row.\n   * @param fromCell {Integer} Starting cell.\n   * @param toRow {Integer} Optional. Ending row. Defaults to <code>fromRow</code>.\n   * @param toCell {Integer} Optional. Ending cell. Defaults to <code>fromCell</code>.\n   */\nfunction Range(fromRow, fromCell, toRow, toCell) {\n    if (toRow === undefined && toCell === undefined) {\n        toRow = fromRow;\n        toCell = fromCell;\n    }\n    /***\n     * @property fromRow\n     * @type {Integer}\n     */\n    this.fromRow = Math.min(fromRow, toRow);\n    /***\n     * @property fromCell\n     * @type {Integer}\n     */\n    this.fromCell = Math.min(fromCell, toCell);\n    /***\n     * @property toRow\n     * @type {Integer}\n     */\n    this.toRow = Math.max(fromRow, toRow);\n    /***\n     * @property toCell\n     * @type {Integer}\n     */\n    this.toCell = Math.max(fromCell, toCell);\n    /***\n     * Returns whether a range represents a single row.\n     * @method isSingleRow\n     * @return {Boolean}\n     */\n    this.isSingleRow = function () {\n        return this.fromRow == this.toRow;\n    };\n    /***\n     * Returns whether a range represents a single cell.\n     * @method isSingleCell\n     * @return {Boolean}\n     */\n    this.isSingleCell = function () {\n        return this.fromRow == this.toRow && this.fromCell == this.toCell;\n    };\n    /***\n     * Returns whether a range contains a given cell.\n     * @method contains\n     * @param row {Integer}\n     * @param cell {Integer}\n     * @return {Boolean}\n     */\n    this.contains = function (row, cell) {\n        return row >= this.fromRow && row <= this.toRow && cell >= this.fromCell && cell <= this.toCell;\n    };\n    /***\n     * Returns a readable representation of a range.\n     * @method toString\n     * @return {String}\n     */\n    this.toString = function () {\n        if (this.isSingleCell()) {\n            return '(' + this.fromRow + ':' + this.fromCell + ')';\n        } else {\n            return '(' + this.fromRow + ':' + this.fromCell + ' - ' + this.toRow + ':' + this.toCell + ')';\n        }\n    };\n}\n/***\n   * A base class that all special / non-data rows (like Group and GroupTotals) derive from.\n   * @class NonDataItem\n   * @constructor\n   */\nfunction NonDataItem() {\n    this.__nonDataRow = true;\n}\n/***\n   * Information about a group of rows.\n   * @class Group\n   * @extends Slick.NonDataItem\n   * @constructor\n   */\nfunction Group() {\n    this.__group = true;\n    /**\n     * Grouping level, starting with 0.\n     * @property level\n     * @type {Number}\n     */\n    this.level = 0;\n    /***\n     * Number of rows in the group.\n     * @property count\n     * @type {Integer}\n     */\n    this.count = 0;\n    /***\n     * Grouping value.\n     * @property value\n     * @type {Object}\n     */\n    this.value = null;\n    /***\n     * Formatted display value of the group.\n     * @property title\n     * @type {String}\n     */\n    this.title = null;\n    /***\n     * Whether a group is collapsed.\n     * @property collapsed\n     * @type {Boolean}\n     */\n    this.collapsed = false;\n    /***\n     * Whether a group selection checkbox is checked.\n     * @property selectChecked\n     * @type {Boolean}\n     */\n    this.selectChecked = false;\n    /***\n     * GroupTotals, if any.\n     * @property totals\n     * @type {GroupTotals}\n     */\n    this.totals = null;\n    /**\n     * Rows that are part of the group.\n     * @property rows\n     * @type {Array}\n     */\n    this.rows = [];\n    /**\n     * Sub-groups that are part of the group.\n     * @property groups\n     * @type {Array}\n     */\n    this.groups = null;\n    /**\n     * A unique key used to identify the group.  This key can be used in calls to DataView\n     * collapseGroup() or expandGroup().\n     * @property groupingKey\n     * @type {Object}\n     */\n    this.groupingKey = null;\n}\nGroup.prototype = new NonDataItem();\n/***\n   * Compares two Group instances.\n   * @method equals\n   * @return {Boolean}\n   * @param group {Group} Group instance to compare to.\n   */\nGroup.prototype.equals = function (group) {\n    return this.value === group.value && this.count === group.count && this.collapsed === group.collapsed && this.title === group.title;\n};\n/***\n   * Information about group totals.\n   * An instance of GroupTotals will be created for each totals row and passed to the aggregators\n   * so that they can store arbitrary data in it.  That data can later be accessed by group totals\n   * formatters during the display.\n   * @class GroupTotals\n   * @extends Slick.NonDataItem\n   * @constructor\n   */\nfunction GroupTotals() {\n    this.__groupTotals = true;\n    /***\n     * Parent Group.\n     * @param group\n     * @type {Group}\n     */\n    this.group = null;\n    /***\n     * Whether the totals have been fully initialized / calculated.\n     * Will be set to false for lazy-calculated group totals.\n     * @param initialized\n     * @type {Boolean}\n     */\n    this.initialized = false;\n}\nGroupTotals.prototype = new NonDataItem();\n/***\n   * A locking helper to track the active edit controller and ensure that only a single controller\n   * can be active at a time.  This prevents a whole class of state and validation synchronization\n   * issues.  An edit controller (such as SlickGrid) can query if an active edit is in progress\n   * and attempt a commit or cancel before proceeding.\n   * @class EditorLock\n   * @constructor\n   */\nfunction EditorLock() {\n    var activeEditController = null;\n    /***\n     * Returns true if a specified edit controller is active (has the edit lock).\n     * If the parameter is not specified, returns true if any edit controller is active.\n     * @method isActive\n     * @param editController {EditController}\n     * @return {Boolean}\n     */\n    this.isActive = function (editController) {\n        return editController ? activeEditController === editController : activeEditController !== null;\n    };\n    /***\n     * Sets the specified edit controller as the active edit controller (acquire edit lock).\n     * If another edit controller is already active, and exception will be throw new Error(.\n     * @method activate\n     * @param editController {EditController} edit controller acquiring the lock\n     */\n    this.activate = function (editController) {\n        if (editController === activeEditController) {\n            // already activated?\n            return;\n        }\n        if (activeEditController !== null) {\n            throw new Error('SlickGrid.EditorLock.activate: an editController is still active, can\\'t activate another editController');\n        }\n        if (!editController.commitCurrentEdit) {\n            throw new Error('SlickGrid.EditorLock.activate: editController must implement .commitCurrentEdit()');\n        }\n        if (!editController.cancelCurrentEdit) {\n            throw new Error('SlickGrid.EditorLock.activate: editController must implement .cancelCurrentEdit()');\n        }\n        activeEditController = editController;\n    };\n    /***\n     * Unsets the specified edit controller as the active edit controller (release edit lock).\n     * If the specified edit controller is not the active one, an exception will be throw new Error(.\n     * @method deactivate\n     * @param editController {EditController} edit controller releasing the lock\n     */\n    this.deactivate = function (editController) {\n        if (activeEditController !== editController) {\n            throw new Error('SlickGrid.EditorLock.deactivate: specified editController is not the currently active one');\n        }\n        activeEditController = null;\n    };\n    /***\n     * Attempts to commit the current edit by calling \"commitCurrentEdit\" method on the active edit\n     * controller and returns whether the commit attempt was successful (commit may fail due to validation\n     * errors, etc.).  Edit controller's \"commitCurrentEdit\" must return true if the commit has succeeded\n     * and false otherwise.  If no edit controller is active, returns true.\n     * @method commitCurrentEdit\n     * @return {Boolean}\n     */\n    this.commitCurrentEdit = function () {\n        return activeEditController ? activeEditController.commitCurrentEdit() : true;\n    };\n    /***\n     * Attempts to cancel the current edit by calling \"cancelCurrentEdit\" method on the active edit\n     * controller and returns whether the edit was successfully cancelled.  If no edit controller is\n     * active, returns true.\n     * @method cancelCurrentEdit\n     * @return {Boolean}\n     */\n    this.cancelCurrentEdit = function cancelCurrentEdit() {\n        return activeEditController ? activeEditController.cancelCurrentEdit() : true;\n    };\n}\nmodule.exports = {\n    'Event': Event,\n    'EventData': EventData,\n    'EventHandler': EventHandler,\n    'Range': Range,\n    'NonDataRow': NonDataItem,\n    'Group': Group,\n    'GroupTotals': GroupTotals,\n    'EditorLock': EditorLock,\n    /***\n     * A global singleton editor lock.\n     * @class GlobalEditorLock\n     * @static\n     * @constructor\n     */\n    'GlobalEditorLock': new EditorLock(),\n    'keyCode': {\n        BACKSPACE: 8,\n        DELETE: 46,\n        DOWN: 40,\n        END: 35,\n        ENTER: 13,\n        ESCAPE: 27,\n        ESC: 27,\n        HOME: 36,\n        INSERT: 45,\n        LEFT: 37,\n        PAGE_DOWN: 34,\n        PAGE_UP: 33,\n        RIGHT: 39,\n        TAB: 9,\n        UP: 38,\n        C: 67,\n        V: 86\n    },\n    'preClickClassName': 'slick-edit-preclick'\n};},\n416: /* slickgrid/slick.grid */ function(require, module, exports) {\n'use strict';\n/**\r\n * @license\r\n * (c) 2009-2016 Michael Leibman\r\n * michael{dot}leibman{at}gmail{dot}com\r\n * http://github.com/mleibman/slickgrid\r\n *\r\n * Distributed under MIT license.\r\n * All rights reserved.\r\n *\r\n * SlickGrid v2.3\r\n *\r\n * NOTES:\r\n *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\r\n *     This increases the speed dramatically, but can only be done safely because there are no event handlers\r\n *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\r\n *     and do proper cleanup.\r\n */\nvar $ = require(417    /* ./slick.jquery */);\nvar Slick = require(415    /* ./slick.core */);\n// shared across all grids on the page\nvar scrollbarDimensions;\nvar maxSupportedCssHeight;\n// browser's breaking point\n//////////////////////////////////////////////////////////////////////////////////////////////\n// SlickGrid class implementation (available as Slick.Grid)\n/**\r\n   * Creates a new instance of the grid.\r\n   * @class SlickGrid\r\n   * @constructor\r\n   * @param {Node}              container   Container node to create the grid in.\r\n   * @param {Array,Object}      data        An array of objects for databinding.\r\n   * @param {Array}             columns     An array of column definitions.\r\n   * @param {Object}            options     Grid options.\r\n   **/\nfunction SlickGrid(container, data, columns, options) {\n    if (!$.fn.drag) {\n        require(411    /* ./lib/jquery.event.drag-2.3.0 */);\n    }\n    if (!$.fn.drop) {\n        require(412    /* ./lib/jquery.event.drop-2.3.0 */);\n    }\n    // settings\n    var defaults = {\n        explicitInitialization: false,\n        rowHeight: 25,\n        defaultColumnWidth: 80,\n        enableAddRow: false,\n        leaveSpaceForNewRows: false,\n        editable: false,\n        autoEdit: true,\n        enableCellNavigation: true,\n        enableColumnReorder: true,\n        asyncEditorLoading: false,\n        asyncEditorLoadDelay: 100,\n        forceFitColumns: false,\n        enableAsyncPostRender: false,\n        asyncPostRenderDelay: 50,\n        enableAsyncPostRenderCleanup: false,\n        asyncPostRenderCleanupDelay: 40,\n        autoHeight: false,\n        editorLock: Slick.GlobalEditorLock,\n        showHeaderRow: false,\n        headerRowHeight: 25,\n        createFooterRow: false,\n        showFooterRow: false,\n        footerRowHeight: 25,\n        createPreHeaderPanel: false,\n        showPreHeaderPanel: false,\n        preHeaderPanelHeight: 25,\n        showTopPanel: false,\n        topPanelHeight: 25,\n        formatterFactory: null,\n        editorFactory: null,\n        cellFlashingCssClass: 'flashing',\n        selectedCellCssClass: 'selected',\n        multiSelect: true,\n        enableTextSelectionOnCells: false,\n        dataItemColumnValueExtractor: null,\n        fullWidthRows: false,\n        multiColumnSort: false,\n        numberedMultiColumnSort: false,\n        tristateMultiColumnSort: false,\n        defaultFormatter: defaultFormatter,\n        forceSyncScrolling: false,\n        addNewRowCssClass: 'new-row',\n        preserveCopiedSelectionOnPaste: false,\n        showCellSelection: true\n    };\n    var columnDefaults = {\n        name: '',\n        resizable: true,\n        sortable: false,\n        minWidth: 30,\n        rerenderOnResize: false,\n        headerCssClass: null,\n        defaultSortAsc: true,\n        focusable: true,\n        selectable: true\n    };\n    // scroller\n    var th;\n    // virtual height\n    var h;\n    // real scrollable height\n    var ph;\n    // page height\n    var n;\n    // number of pages\n    var cj;\n    // \"jumpiness\" coefficient\n    var page = 0;\n    // current page\n    var offset = 0;\n    // current page offset\n    var vScrollDir = 1;\n    // private\n    var initialized = false;\n    var $container;\n    var uid = 'slickgrid_' + Math.round(1000000 * Math.random());\n    var self = this;\n    var $focusSink, $focusSink2;\n    var $headerScroller;\n    var $headers;\n    var $headerRow, $headerRowScroller, $headerRowSpacer;\n    var $footerRow, $footerRowScroller, $footerRowSpacer;\n    var $preHeaderPanel, $preHeaderPanelScroller, $preHeaderPanelSpacer;\n    var $topPanelScroller;\n    var $topPanel;\n    var $viewport;\n    var $canvas;\n    var $style;\n    var $boundAncestors;\n    var stylesheet, columnCssRulesL, columnCssRulesR;\n    var viewportH, viewportW;\n    var canvasWidth;\n    var viewportHasHScroll, viewportHasVScroll;\n    var headerColumnWidthDiff = 0, headerColumnHeightDiff = 0,\n        // border+padding\n        cellWidthDiff = 0, cellHeightDiff = 0, jQueryNewWidthBehaviour = false;\n    var absoluteColumnMinWidth;\n    var sortIndicatorCssClass = 'slick-sort-indicator';\n    var tabbingDirection = 1;\n    var activePosX;\n    var activeRow, activeCell;\n    var activeCellNode = null;\n    var currentEditor = null;\n    var serializedEditorValue;\n    var editController;\n    var rowsCache = {};\n    var renderedRows = 0;\n    var numVisibleRows;\n    var prevScrollTop = 0;\n    var scrollTop = 0;\n    var lastRenderedScrollTop = 0;\n    var lastRenderedScrollLeft = 0;\n    var prevScrollLeft = 0;\n    var scrollLeft = 0;\n    var selectionModel;\n    var selectedRows = [];\n    var plugins = [];\n    var cellCssClasses = {};\n    var columnsById = {};\n    var sortColumns = [];\n    var columnPosLeft = [];\n    var columnPosRight = [];\n    var pagingActive = false;\n    var pagingIsLastPage = false;\n    // async call handles\n    var h_editorLoader = null;\n    var h_render = null;\n    var h_postrender = null;\n    var h_postrenderCleanup = null;\n    var postProcessedRows = {};\n    var postProcessToRow = null;\n    var postProcessFromRow = null;\n    var postProcessedCleanupQueue = [];\n    var postProcessgroupId = 0;\n    // perf counters\n    var counter_rows_rendered = 0;\n    var counter_rows_removed = 0;\n    // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n    // See http://crbug.com/312427.\n    var rowNodeFromLastMouseWheelEvent;\n    // this node must not be deleted while inertial scrolling\n    var zombieRowNodeFromLastMouseWheelEvent;\n    // node that was hidden instead of getting deleted\n    var zombieRowCacheFromLastMouseWheelEvent;\n    // row cache for above node\n    var zombieRowPostProcessedFromLastMouseWheelEvent;\n    // post processing references for above node\n    // store css attributes if display:none is active in container or parent\n    var cssShow = {\n        position: 'absolute',\n        visibility: 'hidden',\n        display: 'block'\n    };\n    var $hiddenParents;\n    var oldProps = [];\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Initialization\n    function init() {\n        if (container instanceof $) {\n            $container = container;\n        } else {\n            $container = $(container);\n        }\n        if ($container.length < 1) {\n            throw new Error('SlickGrid requires a valid container, ' + container + ' does not exist in the DOM.');\n        }\n        cacheCssForHiddenInit();\n        // calculate these only once and share between grid instances\n        maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n        scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n        options = $.extend({}, defaults, options);\n        validateAndEnforceOptions();\n        columnDefaults.width = options.defaultColumnWidth;\n        columnsById = {};\n        for (var i = 0; i < columns.length; i++) {\n            var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n            columnsById[m.id] = i;\n            if (m.minWidth && m.width < m.minWidth) {\n                m.width = m.minWidth;\n            }\n            if (m.maxWidth && m.width > m.maxWidth) {\n                m.width = m.maxWidth;\n            }\n        }\n        // validate loaded JavaScript modules against requested options\n        if (options.enableColumnReorder && !$.fn.sortable) {\n            throw new Error('SlickGrid\\'s \\'enableColumnReorder = true\\' option requires jquery-ui.sortable module to be loaded');\n        }\n        editController = {\n            'commitCurrentEdit': commitCurrentEdit,\n            'cancelCurrentEdit': cancelCurrentEdit\n        };\n        $container.empty().css('overflow', 'hidden').css('outline', 0).addClass(uid).addClass('ui-widget');\n        // set up a positioning container if needed\n        if (!/relative|absolute|fixed/.test($container.css('position'))) {\n            $container.css('position', 'relative');\n        }\n        $focusSink = $('<div tabIndex=\\'0\\' hideFocus style=\\'position:fixed;width:0;height:0;top:0;left:0;outline:0;\\'></div>').appendTo($container);\n        if (options.createPreHeaderPanel) {\n            $preHeaderPanelScroller = $('<div class=\\'slick-preheader-panel ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n            $preHeaderPanel = $('<div />').appendTo($preHeaderPanelScroller);\n            $preHeaderPanelSpacer = $('<div style=\\'display:block;height:1px;position:absolute;top:0;left:0;\\'></div>').css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($preHeaderPanelScroller);\n            if (!options.showPreHeaderPanel) {\n                $preHeaderPanelScroller.hide();\n            }\n        }\n        $headerScroller = $('<div class=\\'slick-header ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n        $headers = $('<div class=\\'slick-header-columns\\' style=\\'left:-1000px\\' />').appendTo($headerScroller);\n        $headers.width(getHeadersWidth());\n        $headerRowScroller = $('<div class=\\'slick-headerrow ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n        $headerRow = $('<div class=\\'slick-headerrow-columns\\' />').appendTo($headerRowScroller);\n        $headerRowSpacer = $('<div style=\\'display:block;height:1px;position:absolute;top:0;left:0;\\'></div>').css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($headerRowScroller);\n        $topPanelScroller = $('<div class=\\'slick-top-panel-scroller ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n        $topPanel = $('<div class=\\'slick-top-panel\\' style=\\'width:10000px\\' />').appendTo($topPanelScroller);\n        if (!options.showTopPanel) {\n            $topPanelScroller.hide();\n        }\n        if (!options.showHeaderRow) {\n            $headerRowScroller.hide();\n        }\n        $viewport = $('<div class=\\'slick-viewport\\' style=\\'width:100%;overflow:auto;outline:0;position:relative;;\\'>').appendTo($container);\n        $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n        $canvas = $('<div class=\\'grid-canvas\\' />').appendTo($viewport);\n        if (options.createFooterRow) {\n            $footerRowScroller = $('<div class=\\'slick-footerrow ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n            $footerRow = $('<div class=\\'slick-footerrow-columns\\' />').appendTo($footerRowScroller);\n            $footerRowSpacer = $('<div style=\\'display:block;height:1px;position:absolute;top:0;left:0;\\'></div>').css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($footerRowScroller);\n            if (!options.showFooterRow) {\n                $footerRowScroller.hide();\n            }\n        }\n        if (options.numberedMultiColumnSort) {\n            sortIndicatorCssClass = 'slick-sort-indicator-numbered';\n        }\n        $focusSink2 = $focusSink.clone().appendTo($container);\n        if (!options.explicitInitialization) {\n            finishInitialization();\n        }\n    }\n    function finishInitialization() {\n        if (!initialized) {\n            initialized = true;\n            viewportW = parseFloat($.css($container[0], 'width', true));\n            // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n            // calculate the diff so we can set consistent sizes\n            measureCellPaddingAndBorder();\n            // for usability reasons, all text selection in SlickGrid is disabled\n            // with the exception of input and textarea elements (selection must\n            // be enabled there so that editors work as expected); note that\n            // selection in grid cells (grid body) is already unavailable in\n            // all browsers except IE\n            disableSelection($headers);\n            // disable all text selection in header (including input and textarea)\n            if (!options.enableTextSelectionOnCells) {\n                // disable text selection in grid cells except in input and textarea elements\n                // (this is IE-specific, because selectstart event will only fire in IE)\n                $viewport.on('selectstart.ui', function (event) {\n                    return $(event.target).is('input,textarea');\n                });\n            }\n            updateColumnCaches();\n            createColumnHeaders();\n            setupColumnSort();\n            createCssRules();\n            resizeCanvas();\n            bindAncestorScrollEvents();\n            $container.on('resize.slickgrid', resizeCanvas);\n            $viewport    //.on(\"click\", handleClick)\n.on('scroll', handleScroll);\n            $headerScroller.on('contextmenu', handleHeaderContextMenu).on('click', handleHeaderClick).on('mouseenter', '.slick-header-column', handleHeaderMouseEnter).on('mouseleave', '.slick-header-column', handleHeaderMouseLeave);\n            $headerRowScroller.on('scroll', handleHeaderRowScroll);\n            if (options.createFooterRow) {\n                $footerRowScroller.on('scroll', handleFooterRowScroll);\n            }\n            if (options.createPreHeaderPanel) {\n                $preHeaderPanelScroller.on('scroll', handlePreHeaderPanelScroll);\n            }\n            $focusSink.add($focusSink2).on('keydown', handleKeyDown);\n            $canvas.on('keydown', handleKeyDown).on('click', handleClick).on('dblclick', handleDblClick).on('contextmenu', handleContextMenu).on('draginit', handleDragInit).on('dragstart', { distance: 3 }, handleDragStart).on('drag', handleDrag).on('dragend', handleDragEnd).on('mouseenter', '.slick-cell', handleMouseEnter).on('mouseleave', '.slick-cell', handleMouseLeave);\n            // Work around http://crbug.com/312427.\n            if (navigator.userAgent.toLowerCase().match(/webkit/) && navigator.userAgent.toLowerCase().match(/macintosh/)) {\n                $canvas.on('mousewheel', handleMouseWheel);\n            }\n            restoreCssFromHiddenInit();\n        }\n    }\n    function cacheCssForHiddenInit() {\n        // handle display:none on container or container parents\n        $hiddenParents = $container.parents().addBack().not(':visible');\n        $hiddenParents.each(function () {\n            var old = {};\n            for (var name in cssShow) {\n                old[name] = this.style[name];\n                this.style[name] = cssShow[name];\n            }\n            oldProps.push(old);\n        });\n    }\n    function restoreCssFromHiddenInit() {\n        // finish handle display:none on container or container parents\n        // - put values back the way they were\n        $hiddenParents.each(function (i) {\n            var old = oldProps[i];\n            for (var name in cssShow) {\n                this.style[name] = old[name];\n            }\n        });\n    }\n    function registerPlugin(plugin) {\n        plugins.unshift(plugin);\n        plugin.init(self);\n    }\n    function unregisterPlugin(plugin) {\n        for (var i = plugins.length; i >= 0; i--) {\n            if (plugins[i] === plugin) {\n                if (plugins[i].destroy) {\n                    plugins[i].destroy();\n                }\n                plugins.splice(i, 1);\n                break;\n            }\n        }\n    }\n    function setSelectionModel(model) {\n        if (selectionModel) {\n            selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n            if (selectionModel.destroy) {\n                selectionModel.destroy();\n            }\n        }\n        selectionModel = model;\n        if (selectionModel) {\n            selectionModel.init(self);\n            selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n        }\n    }\n    function getSelectionModel() {\n        return selectionModel;\n    }\n    function getCanvasNode() {\n        return $canvas[0];\n    }\n    function measureScrollbar() {\n        var $c = $('<div style=\\'position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;\\'></div>').appendTo('body');\n        var dim = {\n            width: $c.width() - $c[0].clientWidth,\n            height: $c.height() - $c[0].clientHeight\n        };\n        $c.remove();\n        return dim;\n    }\n    function getColumnTotalWidth(includeScrollbar) {\n        var totalWidth = 0;\n        for (var i = 0, ii = columns.length; i < ii; i++) {\n            var width = columns[i].width;\n            totalWidth += width;\n        }\n        if (includeScrollbar) {\n            totalWidth += scrollbarDimensions.width;\n        }\n        return totalWidth;\n    }\n    function getHeadersWidth() {\n        var headersWidth = getColumnTotalWidth(true);\n        return Math.max(headersWidth, viewportW) + 1000;\n    }\n    function getCanvasWidth() {\n        var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n        var rowWidth = 0;\n        var i = columns.length;\n        while (i--) {\n            rowWidth += columns[i].width;\n        }\n        return options.fullWidthRows ? Math.max(rowWidth, availableWidth) : rowWidth;\n    }\n    function updateCanvasWidth(forceColumnWidthsUpdate) {\n        var oldCanvasWidth = canvasWidth;\n        canvasWidth = getCanvasWidth();\n        if (canvasWidth != oldCanvasWidth) {\n            $canvas.width(canvasWidth);\n            $headerRow.width(canvasWidth);\n            if (options.createFooterRow) {\n                $footerRow.width(canvasWidth);\n            }\n            if (options.createPreHeaderPanel) {\n                $preHeaderPanel.width(canvasWidth);\n            }\n            $headers.width(getHeadersWidth());\n            viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n        }\n        var w = canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0);\n        $headerRowSpacer.width(w);\n        if (options.createFooterRow) {\n            $footerRowSpacer.width(w);\n        }\n        if (options.createPreHeaderPanel) {\n            $preHeaderPanelSpacer.width(w);\n        }\n        if (canvasWidth != oldCanvasWidth || forceColumnWidthsUpdate) {\n            applyColumnWidths();\n        }\n    }\n    function disableSelection($target) {\n        if ($target && $target.jquery) {\n            $target.attr('unselectable', 'on').css('MozUserSelect', 'none').on('selectstart.ui', function () {\n                return false;\n            });    // from jquery:ui.core.js 1.7.2\n        }\n    }\n    function getMaxSupportedCssHeight() {\n        var supportedHeight = 1000000;\n        // FF reports the height back but still renders blank after ~6M px\n        var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n        var div = $('<div style=\\'display:none\\' />').appendTo(document.body);\n        while (true) {\n            var test = supportedHeight * 2;\n            div.css('height', test);\n            if (test > testUpTo || div.height() !== test) {\n                break;\n            } else {\n                supportedHeight = test;\n            }\n        }\n        div.remove();\n        return supportedHeight;\n    }\n    function getUID() {\n        return uid;\n    }\n    function getHeaderColumnWidthDiff() {\n        return headerColumnWidthDiff;\n    }\n    function getScrollbarDimensions() {\n        return scrollbarDimensions;\n    }\n    // TODO:  this is static.  need to handle page mutation.\n    function bindAncestorScrollEvents() {\n        var elem = $canvas[0];\n        while ((elem = elem.parentNode) != document.body && elem != null) {\n            // bind to scroll containers only\n            if (elem == $viewport[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\n                var $elem = $(elem);\n                if (!$boundAncestors) {\n                    $boundAncestors = $elem;\n                } else {\n                    $boundAncestors = $boundAncestors.add($elem);\n                }\n                $elem.on('scroll.' + uid, handleActiveCellPositionChange);\n            }\n        }\n    }\n    function unbindAncestorScrollEvents() {\n        if (!$boundAncestors) {\n            return;\n        }\n        $boundAncestors.off('scroll.' + uid);\n        $boundAncestors = null;\n    }\n    function updateColumnHeader(columnId, title, toolTip) {\n        if (!initialized) {\n            return;\n        }\n        var idx = getColumnIndex(columnId);\n        if (idx == null) {\n            return;\n        }\n        var columnDef = columns[idx];\n        var $header = $headers.children().eq(idx);\n        if ($header) {\n            if (title !== undefined) {\n                columns[idx].name = title;\n            }\n            if (toolTip !== undefined) {\n                columns[idx].toolTip = toolTip;\n            }\n            trigger(self.onBeforeHeaderCellDestroy, {\n                'node': $header[0],\n                'column': columnDef,\n                'grid': self\n            });\n            $header.attr('title', toolTip || '').children().eq(0).html(title);\n            trigger(self.onHeaderCellRendered, {\n                'node': $header[0],\n                'column': columnDef,\n                'grid': self\n            });\n        }\n    }\n    function getHeaderRow() {\n        return $headerRow[0];\n    }\n    function getFooterRow() {\n        return $footerRow[0];\n    }\n    function getPreHeaderPanel() {\n        return $preHeaderPanel[0];\n    }\n    function getHeaderRowColumn(columnId) {\n        var idx = getColumnIndex(columnId);\n        var $header = $headerRow.children().eq(idx);\n        return $header && $header[0];\n    }\n    function getFooterRowColumn(columnId) {\n        var idx = getColumnIndex(columnId);\n        var $footer = $footerRow.children().eq(idx);\n        return $footer && $footer[0];\n    }\n    function createColumnHeaders() {\n        function onMouseEnter() {\n            $(this).addClass('ui-state-hover');\n        }\n        function onMouseLeave() {\n            $(this).removeClass('ui-state-hover');\n        }\n        $headers.find('.slick-header-column').each(function () {\n            var columnDef = $(this).data('column');\n            if (columnDef) {\n                trigger(self.onBeforeHeaderCellDestroy, {\n                    'node': this,\n                    'column': columnDef,\n                    'grid': self\n                });\n            }\n        });\n        $headers.empty();\n        $headers.width(getHeadersWidth());\n        $headerRow.find('.slick-headerrow-column').each(function () {\n            var columnDef = $(this).data('column');\n            if (columnDef) {\n                trigger(self.onBeforeHeaderRowCellDestroy, {\n                    'node': this,\n                    'column': columnDef,\n                    'grid': self\n                });\n            }\n        });\n        $headerRow.empty();\n        if (options.createFooterRow) {\n            $footerRow.find('.slick-footerrow-column').each(function () {\n                var columnDef = $(this).data('column');\n                if (columnDef) {\n                    trigger(self.onBeforeFooterRowCellDestroy, {\n                        'node': this,\n                        'column': columnDef\n                    });\n                }\n            });\n            $footerRow.empty();\n        }\n        for (var i = 0; i < columns.length; i++) {\n            var m = columns[i];\n            var header = $('<div class=\\'ui-state-default slick-header-column\\' />').html('<span class=\\'slick-column-name\\'>' + m.name + '</span>').width(m.width - headerColumnWidthDiff).attr('id', '' + uid + m.id).attr('title', m.toolTip || '').data('column', m).addClass(m.headerCssClass || '').appendTo($headers);\n            if (options.enableColumnReorder || m.sortable) {\n                header.on('mouseenter', onMouseEnter).on('mouseleave', onMouseLeave);\n            }\n            if (m.sortable) {\n                header.addClass('slick-header-sortable');\n                header.append('<span class=\\'' + sortIndicatorCssClass + '\\' />');\n            }\n            trigger(self.onHeaderCellRendered, {\n                'node': header[0],\n                'column': m,\n                'grid': self\n            });\n            if (options.showHeaderRow) {\n                var headerRowCell = $('<div class=\\'ui-state-default slick-headerrow-column l' + i + ' r' + i + '\\'></div>').data('column', m).appendTo($headerRow);\n                trigger(self.onHeaderRowCellRendered, {\n                    'node': headerRowCell[0],\n                    'column': m,\n                    'grid': self\n                });\n            }\n            if (options.createFooterRow && options.showFooterRow) {\n                var footerRowCell = $('<div class=\\'ui-state-default slick-footerrow-column l' + i + ' r' + i + '\\'></div>').data('column', m).appendTo($footerRow);\n                trigger(self.onFooterRowCellRendered, {\n                    'node': footerRowCell[0],\n                    'column': m\n                });\n            }\n        }\n        setSortColumns(sortColumns);\n        setupColumnResize();\n        if (options.enableColumnReorder) {\n            if (typeof options.enableColumnReorder == 'function') {\n                options.enableColumnReorder(self, $headers, headerColumnWidthDiff, setColumns, setupColumnResize, columns, getColumnIndex, uid, trigger);\n            } else {\n                setupColumnReorder();\n            }\n        }\n    }\n    function setupColumnSort() {\n        $headers.click(function (e) {\n            // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n            e.metaKey = e.metaKey || e.ctrlKey;\n            if ($(e.target).hasClass('slick-resizable-handle')) {\n                return;\n            }\n            var $col = $(e.target).closest('.slick-header-column');\n            if (!$col.length) {\n                return;\n            }\n            var column = $col.data('column');\n            if (column.sortable) {\n                if (!getEditorLock().commitCurrentEdit()) {\n                    return;\n                }\n                var sortColumn = null;\n                var i = 0;\n                for (; i < sortColumns.length; i++) {\n                    if (sortColumns[i].columnId == column.id) {\n                        sortColumn = sortColumns[i];\n                        sortColumn.sortAsc = !sortColumn.sortAsc;\n                        break;\n                    }\n                }\n                var hadSortCol = !!sortColumn;\n                if (options.tristateMultiColumnSort) {\n                    if (!sortColumn) {\n                        sortColumn = {\n                            columnId: column.id,\n                            sortAsc: column.defaultSortAsc\n                        };\n                    }\n                    if (hadSortCol && sortColumn.sortAsc) {\n                        // three state: remove sort rather than go back to ASC\n                        sortColumns.splice(i, 1);\n                        sortColumn = null;\n                    }\n                    if (!options.multiColumnSort) {\n                        sortColumns = [];\n                    }\n                    if (sortColumn && (!hadSortCol || !options.multiColumnSort)) {\n                        sortColumns.push(sortColumn);\n                    }\n                } else {\n                    // legacy behaviour\n                    if (e.metaKey && options.multiColumnSort) {\n                        if (sortColumn) {\n                            sortColumns.splice(i, 1);\n                        }\n                    } else {\n                        if (!e.shiftKey && !e.metaKey || !options.multiColumnSort) {\n                            sortColumns = [];\n                        }\n                        if (!sortColumn) {\n                            sortColumn = {\n                                columnId: column.id,\n                                sortAsc: column.defaultSortAsc\n                            };\n                            sortColumns.push(sortColumn);\n                        } else if (sortColumns.length == 0) {\n                            sortColumns.push(sortColumn);\n                        }\n                    }\n                }\n                setSortColumns(sortColumns);\n                if (sortColumns.length > 0) {\n                    if (!options.multiColumnSort) {\n                        trigger(self.onSort, {\n                            multiColumnSort: false,\n                            sortCol: column,\n                            sortAsc: sortColumns[0].sortAsc,\n                            grid: self\n                        }, e);\n                    } else {\n                        trigger(self.onSort, {\n                            multiColumnSort: true,\n                            sortCols: $.map(sortColumns, function (col) {\n                                return {\n                                    sortCol: columns[getColumnIndex(col.columnId)],\n                                    sortAsc: col.sortAsc\n                                };\n                            }),\n                            grid: self\n                        }, e);\n                    }\n                }\n            }\n        });\n    }\n    function setupColumnReorder() {\n        $headers.filter(':ui-sortable').sortable('destroy');\n        $headers.sortable({\n            containment: 'parent',\n            distance: 3,\n            axis: 'x',\n            cursor: 'default',\n            tolerance: 'intersection',\n            helper: 'clone',\n            placeholder: 'slick-sortable-placeholder ui-state-default slick-header-column',\n            start: function (e, ui) {\n                ui.placeholder.width(ui.helper.outerWidth() - headerColumnWidthDiff);\n                $(ui.helper).addClass('slick-header-column-active');\n            },\n            beforeStop: function (e, ui) {\n                $(ui.helper).removeClass('slick-header-column-active');\n            },\n            stop: function (e) {\n                if (!getEditorLock().commitCurrentEdit()) {\n                    $(this).sortable('cancel');\n                    return;\n                }\n                var reorderedIds = $headers.sortable('toArray');\n                var reorderedColumns = [];\n                for (var i = 0; i < reorderedIds.length; i++) {\n                    reorderedColumns.push(columns[getColumnIndex(reorderedIds[i].replace(uid, ''))]);\n                }\n                setColumns(reorderedColumns);\n                trigger(self.onColumnsReordered, { grid: self });\n                e.stopPropagation();\n                setupColumnResize();\n            }\n        });\n    }\n    function setupColumnResize() {\n        var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n        columnElements = $headers.children();\n        columnElements.find('.slick-resizable-handle').remove();\n        columnElements.each(function (i, e) {\n            if (i >= columns.length) {\n                return;\n            }\n            if (columns[i].resizable) {\n                if (firstResizable === undefined) {\n                    firstResizable = i;\n                }\n                lastResizable = i;\n            }\n        });\n        if (firstResizable === undefined) {\n            return;\n        }\n        columnElements.each(function (i, e) {\n            if (i >= columns.length) {\n                return;\n            }\n            if (i < firstResizable || options.forceFitColumns && i >= lastResizable) {\n                return;\n            }\n            $col = $(e);\n            $('<div class=\\'slick-resizable-handle\\' />').appendTo(e).on('dragstart', function (e, dd) {\n                if (!getEditorLock().commitCurrentEdit()) {\n                    return false;\n                }\n                pageX = e.pageX;\n                $(this).parent().addClass('slick-header-column-active');\n                var shrinkLeewayOnRight = null, stretchLeewayOnRight = null;\n                // lock each column's width option to current width\n                columnElements.each(function (i, e) {\n                    if (i >= columns.length) {\n                        return;\n                    }\n                    columns[i].previousWidth = $(e).outerWidth();\n                });\n                if (options.forceFitColumns) {\n                    shrinkLeewayOnRight = 0;\n                    stretchLeewayOnRight = 0;\n                    // colums on right affect maxPageX/minPageX\n                    for (j = i + 1; j < columns.length; j++) {\n                        c = columns[j];\n                        if (c.resizable) {\n                            if (stretchLeewayOnRight !== null) {\n                                if (c.maxWidth) {\n                                    stretchLeewayOnRight += c.maxWidth - c.previousWidth;\n                                } else {\n                                    stretchLeewayOnRight = null;\n                                }\n                            }\n                            shrinkLeewayOnRight += c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                        }\n                    }\n                }\n                var shrinkLeewayOnLeft = 0, stretchLeewayOnLeft = 0;\n                for (j = 0; j <= i; j++) {\n                    // columns on left only affect minPageX\n                    c = columns[j];\n                    if (c.resizable) {\n                        if (stretchLeewayOnLeft !== null) {\n                            if (c.maxWidth) {\n                                stretchLeewayOnLeft += c.maxWidth - c.previousWidth;\n                            } else {\n                                stretchLeewayOnLeft = null;\n                            }\n                        }\n                        shrinkLeewayOnLeft += c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                    }\n                }\n                if (shrinkLeewayOnRight === null) {\n                    shrinkLeewayOnRight = 100000;\n                }\n                if (shrinkLeewayOnLeft === null) {\n                    shrinkLeewayOnLeft = 100000;\n                }\n                if (stretchLeewayOnRight === null) {\n                    stretchLeewayOnRight = 100000;\n                }\n                if (stretchLeewayOnLeft === null) {\n                    stretchLeewayOnLeft = 100000;\n                }\n                maxPageX = pageX + Math.min(shrinkLeewayOnRight, stretchLeewayOnLeft);\n                minPageX = pageX - Math.min(shrinkLeewayOnLeft, stretchLeewayOnRight);\n            }).on('drag', function (e, dd) {\n                var actualMinWidth, d = Math.min(maxPageX, Math.max(minPageX, e.pageX)) - pageX, x;\n                if (d < 0) {\n                    // shrink column\n                    x = d;\n                    for (j = i; j >= 0; j--) {\n                        c = columns[j];\n                        if (c.resizable) {\n                            actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                            if (x && c.previousWidth + x < actualMinWidth) {\n                                x += c.previousWidth - actualMinWidth;\n                                c.width = actualMinWidth;\n                            } else {\n                                c.width = c.previousWidth + x;\n                                x = 0;\n                            }\n                        }\n                    }\n                    if (options.forceFitColumns) {\n                        x = -d;\n                        for (j = i + 1; j < columns.length; j++) {\n                            c = columns[j];\n                            if (c.resizable) {\n                                if (x && c.maxWidth && c.maxWidth - c.previousWidth < x) {\n                                    x -= c.maxWidth - c.previousWidth;\n                                    c.width = c.maxWidth;\n                                } else {\n                                    c.width = c.previousWidth + x;\n                                    x = 0;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    // stretch column\n                    x = d;\n                    for (j = i; j >= 0; j--) {\n                        c = columns[j];\n                        if (c.resizable) {\n                            if (x && c.maxWidth && c.maxWidth - c.previousWidth < x) {\n                                x -= c.maxWidth - c.previousWidth;\n                                c.width = c.maxWidth;\n                            } else {\n                                c.width = c.previousWidth + x;\n                                x = 0;\n                            }\n                        }\n                    }\n                    if (options.forceFitColumns) {\n                        x = -d;\n                        for (j = i + 1; j < columns.length; j++) {\n                            c = columns[j];\n                            if (c.resizable) {\n                                actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                                if (x && c.previousWidth + x < actualMinWidth) {\n                                    x += c.previousWidth - actualMinWidth;\n                                    c.width = actualMinWidth;\n                                } else {\n                                    c.width = c.previousWidth + x;\n                                    x = 0;\n                                }\n                            }\n                        }\n                    }\n                }\n                applyColumnHeaderWidths();\n                if (options.syncColumnCellResize) {\n                    applyColumnWidths();\n                }\n            }).on('dragend', function (e, dd) {\n                var newWidth;\n                $(this).parent().removeClass('slick-header-column-active');\n                for (j = 0; j < columns.length; j++) {\n                    c = columns[j];\n                    newWidth = $(columnElements[j]).outerWidth();\n                    if (c.previousWidth !== newWidth && c.rerenderOnResize) {\n                        invalidateAllRows();\n                    }\n                }\n                updateCanvasWidth(true);\n                render();\n                trigger(self.onColumnsResized, { grid: self });\n            });\n        });\n    }\n    function getVBoxDelta($el) {\n        var p = [\n            'borderTopWidth',\n            'borderBottomWidth',\n            'paddingTop',\n            'paddingBottom'\n        ];\n        var delta = 0;\n        $.each(p, function (n, val) {\n            delta += parseFloat($el.css(val)) || 0;\n        });\n        return delta;\n    }\n    function measureCellPaddingAndBorder() {\n        var el;\n        var h = [\n            'borderLeftWidth',\n            'borderRightWidth',\n            'paddingLeft',\n            'paddingRight'\n        ];\n        var v = [\n            'borderTopWidth',\n            'borderBottomWidth',\n            'paddingTop',\n            'paddingBottom'\n        ];\n        // jquery prior to version 1.8 handles .width setter/getter as a direct css write/read\n        // jquery 1.8 changed .width to read the true inner element width if box-sizing is set to border-box, and introduced a setter for .outerWidth\n        // so for equivalent functionality, prior to 1.8 use .width, and after use .outerWidth\n        var verArray = $.fn.jquery.split('.');\n        jQueryNewWidthBehaviour = verArray[0] == 1 && verArray[1] >= 8 || verArray[0] >= 2;\n        el = $('<div class=\\'ui-state-default slick-header-column\\' style=\\'visibility:hidden\\'>-</div>').appendTo($headers);\n        headerColumnWidthDiff = headerColumnHeightDiff = 0;\n        if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box') {\n            $.each(h, function (n, val) {\n                headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n            });\n            $.each(v, function (n, val) {\n                headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n            });\n        }\n        el.remove();\n        var r = $('<div class=\\'slick-row\\' />').appendTo($canvas);\n        el = $('<div class=\\'slick-cell\\' id=\\'\\' style=\\'visibility:hidden\\'>-</div>').appendTo(r);\n        cellWidthDiff = cellHeightDiff = 0;\n        if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box') {\n            $.each(h, function (n, val) {\n                cellWidthDiff += parseFloat(el.css(val)) || 0;\n            });\n            $.each(v, function (n, val) {\n                cellHeightDiff += parseFloat(el.css(val)) || 0;\n            });\n        }\n        r.remove();\n        absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n    }\n    function createCssRules() {\n        $style = $('<style type=\\'text/css\\' rel=\\'stylesheet\\' />').appendTo($('head'));\n        var rowHeight = options.rowHeight - cellHeightDiff;\n        var rules = [\n            '.' + uid + ' .slick-header-column { left: 1000px; }',\n            '.' + uid + ' .slick-top-panel { height:' + options.topPanelHeight + 'px; }',\n            '.' + uid + ' .slick-preheader-panel { height:' + options.preHeaderPanelHeight + 'px; }',\n            '.' + uid + ' .slick-headerrow-columns { height:' + options.headerRowHeight + 'px; }',\n            '.' + uid + ' .slick-footerrow-columns { height:' + options.footerRowHeight + 'px; }',\n            '.' + uid + ' .slick-cell { height:' + rowHeight + 'px; }',\n            '.' + uid + ' .slick-row { height:' + options.rowHeight + 'px; }'\n        ];\n        for (var i = 0; i < columns.length; i++) {\n            rules.push('.' + uid + ' .l' + i + ' { }');\n            rules.push('.' + uid + ' .r' + i + ' { }');\n        }\n        if ($style[0].styleSheet) {\n            // IE\n            $style[0].styleSheet.cssText = rules.join(' ');\n        } else {\n            $style[0].appendChild(document.createTextNode(rules.join(' ')));\n        }\n    }\n    function getColumnCssRules(idx) {\n        var i;\n        if (!stylesheet) {\n            var sheets = document.styleSheets;\n            for (i = 0; i < sheets.length; i++) {\n                if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]) {\n                    stylesheet = sheets[i];\n                    break;\n                }\n            }\n            if (!stylesheet) {\n                throw new Error('Cannot find stylesheet.');\n            }\n            // find and cache column CSS rules\n            columnCssRulesL = [];\n            columnCssRulesR = [];\n            var cssRules = stylesheet.cssRules || stylesheet.rules;\n            var matches, columnIdx;\n            for (i = 0; i < cssRules.length; i++) {\n                var selector = cssRules[i].selectorText;\n                if (matches = /\\.l\\d+/.exec(selector)) {\n                    columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n                    columnCssRulesL[columnIdx] = cssRules[i];\n                } else if (matches = /\\.r\\d+/.exec(selector)) {\n                    columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n                    columnCssRulesR[columnIdx] = cssRules[i];\n                }\n            }\n        }\n        return {\n            'left': columnCssRulesL[idx],\n            'right': columnCssRulesR[idx]\n        };\n    }\n    function removeCssRules() {\n        $style.remove();\n        stylesheet = null;\n    }\n    function destroy() {\n        getEditorLock().cancelCurrentEdit();\n        trigger(self.onBeforeDestroy, { grid: self });\n        var i = plugins.length;\n        while (i--) {\n            unregisterPlugin(plugins[i]);\n        }\n        if (options.enableColumnReorder) {\n            $headers.filter(':ui-sortable').sortable('destroy');\n        }\n        unbindAncestorScrollEvents();\n        $container.off('.slickgrid');\n        removeCssRules();\n        $canvas.off('draginit dragstart dragend drag');\n        $container.empty().removeClass(uid);\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // General\n    function trigger(evt, args, e) {\n        e = e || new Slick.EventData();\n        args = args || {};\n        args.grid = self;\n        return evt.notify(args, e, self);\n    }\n    function getEditorLock() {\n        return options.editorLock;\n    }\n    function getEditController() {\n        return editController;\n    }\n    function getColumnIndex(id) {\n        return columnsById[id];\n    }\n    function autosizeColumns() {\n        var i, c, widths = [], shrinkLeeway = 0, total = 0, prevTotal, availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n        for (i = 0; i < columns.length; i++) {\n            c = columns[i];\n            widths.push(c.width);\n            total += c.width;\n            if (c.resizable) {\n                shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n            }\n        }\n        // shrink\n        prevTotal = total;\n        while (total > availWidth && shrinkLeeway) {\n            var shrinkProportion = (total - availWidth) / shrinkLeeway;\n            for (i = 0; i < columns.length && total > availWidth; i++) {\n                c = columns[i];\n                var width = widths[i];\n                if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth) {\n                    continue;\n                }\n                var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n                var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n                shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n                total -= shrinkSize;\n                shrinkLeeway -= shrinkSize;\n                widths[i] -= shrinkSize;\n            }\n            if (prevTotal <= total) {\n                // avoid infinite loop\n                break;\n            }\n            prevTotal = total;\n        }\n        // grow\n        prevTotal = total;\n        while (total < availWidth) {\n            var growProportion = availWidth / total;\n            for (i = 0; i < columns.length && total < availWidth; i++) {\n                c = columns[i];\n                var currentWidth = widths[i];\n                var growSize;\n                if (!c.resizable || c.maxWidth <= currentWidth) {\n                    growSize = 0;\n                } else {\n                    growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, c.maxWidth - currentWidth || 1000000) || 1;\n                }\n                total += growSize;\n                widths[i] += total <= availWidth ? growSize : 0;\n            }\n            if (prevTotal >= total) {\n                // avoid infinite loop\n                break;\n            }\n            prevTotal = total;\n        }\n        var reRender = false;\n        for (i = 0; i < columns.length; i++) {\n            if (columns[i].rerenderOnResize && columns[i].width != widths[i]) {\n                reRender = true;\n            }\n            columns[i].width = widths[i];\n        }\n        applyColumnHeaderWidths();\n        updateCanvasWidth(true);\n        if (reRender) {\n            invalidateAllRows();\n            render();\n        }\n    }\n    function applyColumnHeaderWidths() {\n        if (!initialized) {\n            return;\n        }\n        var h;\n        for (var i = 0, headers = $headers.children(), ii = columns.length; i < ii; i++) {\n            h = $(headers[i]);\n            if (jQueryNewWidthBehaviour) {\n                if (h.outerWidth() !== columns[i].width) {\n                    h.outerWidth(columns[i].width);\n                }\n            } else {\n                if (h.width() !== columns[i].width - headerColumnWidthDiff) {\n                    h.width(columns[i].width - headerColumnWidthDiff);\n                }\n            }\n        }\n        updateColumnCaches();\n    }\n    function applyColumnWidths() {\n        var x = 0, w, rule;\n        for (var i = 0; i < columns.length; i++) {\n            w = columns[i].width;\n            rule = getColumnCssRules(i);\n            rule.left.style.left = x + 'px';\n            rule.right.style.right = canvasWidth - x - w + 'px';\n            x += columns[i].width;\n        }\n    }\n    function setSortColumn(columnId, ascending) {\n        setSortColumns([{\n                columnId: columnId,\n                sortAsc: ascending\n            }]);\n    }\n    function setSortColumns(cols) {\n        sortColumns = cols;\n        var numberCols = options.numberedMultiColumnSort && sortColumns.length > 1;\n        var headerColumnEls = $headers.children();\n        var sortIndicatorEl = headerColumnEls.removeClass('slick-header-column-sorted').find('.' + sortIndicatorCssClass).removeClass('slick-sort-indicator-asc slick-sort-indicator-desc');\n        if (numberCols) {\n            sortIndicatorEl.text('');\n        }\n        $.each(sortColumns, function (i, col) {\n            if (col.sortAsc == null) {\n                col.sortAsc = true;\n            }\n            var columnIndex = getColumnIndex(col.columnId);\n            if (columnIndex != null) {\n                sortIndicatorEl = headerColumnEls.eq(columnIndex).addClass('slick-header-column-sorted').find('.' + sortIndicatorCssClass).addClass(col.sortAsc ? 'slick-sort-indicator-asc' : 'slick-sort-indicator-desc');\n                if (numberCols) {\n                    sortIndicatorEl.text(i + 1);\n                }\n            }\n        });\n    }\n    function getSortColumns() {\n        return sortColumns;\n    }\n    function handleSelectedRangesChanged(e, ranges) {\n        selectedRows = [];\n        var hash = {};\n        for (var i = 0; i < ranges.length; i++) {\n            for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n                if (!hash[j]) {\n                    // prevent duplicates\n                    selectedRows.push(j);\n                    hash[j] = {};\n                }\n                for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n                    if (canCellBeSelected(j, k)) {\n                        hash[j][columns[k].id] = options.selectedCellCssClass;\n                    }\n                }\n            }\n        }\n        setCellCssStyles(options.selectedCellCssClass, hash);\n        trigger(self.onSelectedRowsChanged, {\n            rows: getSelectedRows(),\n            grid: self\n        }, e);\n    }\n    function getColumns() {\n        return columns;\n    }\n    function updateColumnCaches() {\n        // Pre-calculate cell boundaries.\n        columnPosLeft = [];\n        columnPosRight = [];\n        var x = 0;\n        for (var i = 0, ii = columns.length; i < ii; i++) {\n            columnPosLeft[i] = x;\n            columnPosRight[i] = x + columns[i].width;\n            x += columns[i].width;\n        }\n    }\n    function setColumns(columnDefinitions) {\n        columns = columnDefinitions;\n        columnsById = {};\n        for (var i = 0; i < columns.length; i++) {\n            var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n            columnsById[m.id] = i;\n            if (m.minWidth && m.width < m.minWidth) {\n                m.width = m.minWidth;\n            }\n            if (m.maxWidth && m.width > m.maxWidth) {\n                m.width = m.maxWidth;\n            }\n        }\n        updateColumnCaches();\n        if (initialized) {\n            invalidateAllRows();\n            createColumnHeaders();\n            removeCssRules();\n            createCssRules();\n            resizeCanvas();\n            applyColumnWidths();\n            handleScroll();\n        }\n    }\n    function getOptions() {\n        return options;\n    }\n    function setOptions(args, suppressRender) {\n        if (!getEditorLock().commitCurrentEdit()) {\n            return;\n        }\n        makeActiveCellNormal();\n        if (options.enableAddRow !== args.enableAddRow) {\n            invalidateRow(getDataLength());\n        }\n        options = $.extend(options, args);\n        validateAndEnforceOptions();\n        $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n        if (!suppressRender) {\n            render();\n        }\n    }\n    function validateAndEnforceOptions() {\n        if (options.autoHeight) {\n            options.leaveSpaceForNewRows = false;\n        }\n    }\n    function setData(newData, scrollToTop) {\n        data = newData;\n        invalidateAllRows();\n        updateRowCount();\n        if (scrollToTop) {\n            scrollTo(0);\n        }\n    }\n    function getData() {\n        return data;\n    }\n    function getDataLength() {\n        if (data.getLength) {\n            return data.getLength();\n        } else {\n            return data.length;\n        }\n    }\n    function getDataLengthIncludingAddNew() {\n        return getDataLength() + (!options.enableAddRow ? 0 : !pagingActive || pagingIsLastPage ? 1 : 0);\n    }\n    function getDataItem(i) {\n        if (data.getItem) {\n            return data.getItem(i);\n        } else {\n            return data[i];\n        }\n    }\n    function getTopPanel() {\n        return $topPanel[0];\n    }\n    function setTopPanelVisibility(visible) {\n        if (options.showTopPanel != visible) {\n            options.showTopPanel = visible;\n            if (visible) {\n                $topPanelScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $topPanelScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function setHeaderRowVisibility(visible) {\n        if (options.showHeaderRow != visible) {\n            options.showHeaderRow = visible;\n            if (visible) {\n                $headerRowScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $headerRowScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function setFooterRowVisibility(visible) {\n        if (options.showFooterRow != visible) {\n            options.showFooterRow = visible;\n            if (visible) {\n                $footerRowScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $footerRowScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function setPreHeaderPanelVisibility(visible) {\n        if (options.showPreHeaderPanel != visible) {\n            options.showPreHeaderPanel = visible;\n            if (visible) {\n                $preHeaderPanelScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $preHeaderPanelScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function getContainerNode() {\n        return $container.get(0);\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Rendering / Scrolling\n    function getRowTop(row) {\n        return options.rowHeight * row - offset;\n    }\n    function getRowFromPosition(y) {\n        return Math.floor((y + offset) / options.rowHeight);\n    }\n    function scrollTo(y) {\n        y = Math.max(y, 0);\n        y = Math.min(y, th - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0));\n        var oldOffset = offset;\n        page = Math.min(n - 1, Math.floor(y / ph));\n        offset = Math.round(page * cj);\n        var newScrollTop = y - offset;\n        if (offset != oldOffset) {\n            var range = getVisibleRange(newScrollTop);\n            cleanupRows(range);\n            updateRowPositions();\n        }\n        if (prevScrollTop != newScrollTop) {\n            vScrollDir = prevScrollTop + oldOffset < newScrollTop + offset ? 1 : -1;\n            $viewport[0].scrollTop = lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop;\n            trigger(self.onViewportChanged, { grid: self });\n        }\n    }\n    function defaultFormatter(row, cell, value, columnDef, dataContext) {\n        if (value == null) {\n            return '';\n        } else {\n            return (value + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n    }\n    function getFormatter(row, column) {\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        // look up by id, then index\n        var columnOverrides = rowMetadata && rowMetadata.columns && (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n        return columnOverrides && columnOverrides.formatter || rowMetadata && rowMetadata.formatter || column.formatter || options.formatterFactory && options.formatterFactory.getFormatter(column) || options.defaultFormatter;\n    }\n    function getEditor(row, cell) {\n        var column = columns[cell];\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        var columnMetadata = rowMetadata && rowMetadata.columns;\n        if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined) {\n            return columnMetadata[column.id].editor;\n        }\n        if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\n            return columnMetadata[cell].editor;\n        }\n        return column.editor || options.editorFactory && options.editorFactory.getEditor(column);\n    }\n    function getDataItemValueForColumn(item, columnDef) {\n        if (options.dataItemColumnValueExtractor) {\n            return options.dataItemColumnValueExtractor(item, columnDef);\n        }\n        return item[columnDef.field];\n    }\n    function appendRowHtml(stringArray, row, range, dataLength) {\n        var d = getDataItem(row);\n        var dataLoading = row < dataLength && !d;\n        var rowCss = 'slick-row' + (dataLoading ? ' loading' : '') + (row === activeRow ? ' active' : '') + (row % 2 == 1 ? ' odd' : ' even');\n        if (!d) {\n            rowCss += ' ' + options.addNewRowCssClass;\n        }\n        var metadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (metadata && metadata.cssClasses) {\n            rowCss += ' ' + metadata.cssClasses;\n        }\n        stringArray.push('<div class=\\'ui-widget-content ' + rowCss + '\\' style=\\'top:' + getRowTop(row) + 'px\\'>');\n        var colspan, m;\n        for (var i = 0, ii = columns.length; i < ii; i++) {\n            m = columns[i];\n            colspan = 1;\n            if (metadata && metadata.columns) {\n                var columnData = metadata.columns[m.id] || metadata.columns[i];\n                colspan = columnData && columnData.colspan || 1;\n                if (colspan === '*') {\n                    colspan = ii - i;\n                }\n            }\n            // Do not render cells outside of the viewport.\n            if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n                if (columnPosLeft[i] > range.rightPx) {\n                    // All columns to the right are outside the range.\n                    break;\n                }\n                appendCellHtml(stringArray, row, i, colspan, d);\n            }\n            if (colspan > 1) {\n                i += colspan - 1;\n            }\n        }\n        stringArray.push('</div>');\n    }\n    function appendCellHtml(stringArray, row, cell, colspan, item) {\n        // stringArray: stringBuilder containing the HTML parts\n        // row, cell: row and column index\n        // colspan: HTML colspan\n        // item: grid data for row\n        var m = columns[cell];\n        var cellCss = 'slick-cell l' + cell + ' r' + Math.min(columns.length - 1, cell + colspan - 1) + (m.cssClass ? ' ' + m.cssClass : '');\n        if (row === activeRow && cell === activeCell) {\n            cellCss += ' active';\n        }\n        // TODO:  merge them together in the setter\n        for (var key in cellCssClasses) {\n            if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]) {\n                cellCss += ' ' + cellCssClasses[key][row][m.id];\n            }\n        }\n        var value = null;\n        if (item) {\n            value = getDataItemValueForColumn(item, m);\n        }\n        var formatterResult = getFormatter(row, m)(row, cell, value, m, item);\n        // get addl css class names from object type formatter return and from string type return of onBeforeAppendCell\n        var addlCssClasses = trigger(self.onBeforeAppendCell, {\n            row: row,\n            cell: cell,\n            grid: self,\n            value: value,\n            dataContext: item\n        }) || '';\n        addlCssClasses += formatterResult.addClasses ? (addlCssClasses ? ' ' : '') + formatterResult.addClasses : '';\n        stringArray.push('<div class=\\'' + cellCss + (addlCssClasses ? ' ' + addlCssClasses : '') + '\\'>');\n        // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n        if (item) {\n            stringArray.push(typeof formatterResult !== 'object' ? formatterResult : formatterResult.text);\n        }\n        stringArray.push('</div>');\n        rowsCache[row].cellRenderQueue.push(cell);\n        rowsCache[row].cellColSpans[cell] = colspan;\n    }\n    function cleanupRows(rangeToKeep) {\n        for (var i in rowsCache) {\n            if ((i = parseInt(i, 10)) !== activeRow && (i < rangeToKeep.top || i > rangeToKeep.bottom)) {\n                removeRowFromCache(i);\n            }\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n    }\n    function invalidate() {\n        updateRowCount();\n        invalidateAllRows();\n        render();\n    }\n    function invalidateAllRows() {\n        if (currentEditor) {\n            makeActiveCellNormal();\n        }\n        for (var row in rowsCache) {\n            removeRowFromCache(row);\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n    }\n    function queuePostProcessedRowForCleanup(cacheEntry, postProcessedRow, rowIdx) {\n        postProcessgroupId++;\n        // store and detach node for later async cleanup\n        for (var columnIdx in postProcessedRow) {\n            if (postProcessedRow.hasOwnProperty(columnIdx)) {\n                postProcessedCleanupQueue.push({\n                    actionType: 'C',\n                    groupId: postProcessgroupId,\n                    node: cacheEntry.cellNodesByColumnIdx[columnIdx | 0],\n                    columnIdx: columnIdx | 0,\n                    rowIdx: rowIdx\n                });\n            }\n        }\n        postProcessedCleanupQueue.push({\n            actionType: 'R',\n            groupId: postProcessgroupId,\n            node: cacheEntry.rowNode\n        });\n        $(cacheEntry.rowNode).detach();\n    }\n    function queuePostProcessedCellForCleanup(cellnode, columnIdx, rowIdx) {\n        postProcessedCleanupQueue.push({\n            actionType: 'C',\n            groupId: postProcessgroupId,\n            node: cellnode,\n            columnIdx: columnIdx,\n            rowIdx: rowIdx\n        });\n        $(cellnode).detach();\n    }\n    function removeRowFromCache(row) {\n        var cacheEntry = rowsCache[row];\n        if (!cacheEntry) {\n            return;\n        }\n        if (rowNodeFromLastMouseWheelEvent === cacheEntry.rowNode) {\n            cacheEntry.rowNode.style.display = 'none';\n            zombieRowNodeFromLastMouseWheelEvent = rowNodeFromLastMouseWheelEvent;\n            zombieRowCacheFromLastMouseWheelEvent = cacheEntry;\n            zombieRowPostProcessedFromLastMouseWheelEvent = postProcessedRows[row];    // ignore post processing cleanup in this case - it will be dealt with later\n        } else {\n            if (options.enableAsyncPostRenderCleanup && postProcessedRows[row]) {\n                queuePostProcessedRowForCleanup(cacheEntry, postProcessedRows[row], row);\n            } else {\n                $canvas[0].removeChild(cacheEntry.rowNode);\n            }\n        }\n        delete rowsCache[row];\n        delete postProcessedRows[row];\n        renderedRows--;\n        counter_rows_removed++;\n    }\n    function invalidateRows(rows) {\n        var i, rl;\n        if (!rows || !rows.length) {\n            return;\n        }\n        vScrollDir = 0;\n        rl = rows.length;\n        for (i = 0; i < rl; i++) {\n            if (currentEditor && activeRow === rows[i]) {\n                makeActiveCellNormal();\n            }\n            if (rowsCache[rows[i]]) {\n                removeRowFromCache(rows[i]);\n            }\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n    }\n    function invalidateRow(row) {\n        invalidateRows([row]);\n    }\n    function applyFormatResultToCellNode(formatterResult, cellNode, suppressRemove) {\n        if (typeof formatterResult !== 'object') {\n            cellNode.innerHTML = formatterResult;\n            return;\n        }\n        cellNode.innerHTML = formatterResult.text;\n        if (formatterResult.removeClasses && !suppressRemove) {\n            cellNode.removeClass(formatterResult.removeClasses);\n        }\n        if (formatterResult.addClasses) {\n            cellNode.addClass(formatterResult.addClasses);\n        }\n    }\n    function updateCell(row, cell) {\n        var cellNode = getCellNode(row, cell);\n        if (!cellNode) {\n            return;\n        }\n        var m = columns[cell], d = getDataItem(row);\n        if (currentEditor && activeRow === row && activeCell === cell) {\n            currentEditor.loadValue(d);\n        } else {\n            var formatterResult = d ? getFormatter(row, m)(row, cell, getDataItemValueForColumn(d, m), m, d) : '';\n            applyFormatResultToCellNode(formatterResult, cellNode);\n            invalidatePostProcessingResults(row);\n        }\n    }\n    function updateRow(row) {\n        var cacheEntry = rowsCache[row];\n        if (!cacheEntry) {\n            return;\n        }\n        ensureCellNodesInRowsCache(row);\n        var formatterResult, d = getDataItem(row);\n        for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n            if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n                continue;\n            }\n            columnIdx = columnIdx | 0;\n            var m = columns[columnIdx], node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n            if (row === activeRow && columnIdx === activeCell && currentEditor) {\n                currentEditor.loadValue(d);\n            } else if (d) {\n                formatterResult = getFormatter(row, m)(row, columnIdx, getDataItemValueForColumn(d, m), m, d);\n                applyFormatResultToCellNode(formatterResult, node);\n            } else {\n                node.innerHTML = '';\n            }\n        }\n        invalidatePostProcessingResults(row);\n    }\n    function getViewportHeight() {\n        return parseFloat($.css($container[0], 'height', true)) - parseFloat($.css($container[0], 'paddingTop', true)) - parseFloat($.css($container[0], 'paddingBottom', true)) - parseFloat($.css($headerScroller[0], 'height')) - getVBoxDelta($headerScroller) - (options.showTopPanel ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0) - (options.showHeaderRow ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0) - (options.createFooterRow && options.showFooterRow ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0) - (options.createPreHeaderPanel && options.showPreHeaderPanel ? options.preHeaderPanelHeight + getVBoxDelta($preHeaderPanelScroller) : 0);\n    }\n    function resizeCanvas() {\n        if (!initialized) {\n            return;\n        }\n        if (options.autoHeight) {\n            viewportH = options.rowHeight * getDataLengthIncludingAddNew();\n        } else {\n            viewportH = getViewportHeight();\n        }\n        numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n        viewportW = parseFloat($.css($container[0], 'width', true));\n        if (!options.autoHeight) {\n            $viewport.height(viewportH);\n        }\n        if (options.forceFitColumns) {\n            autosizeColumns();\n        }\n        updateRowCount();\n        handleScroll();\n        // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n        lastRenderedScrollLeft = -1;\n        render();\n    }\n    function updatePagingStatusFromView(pagingInfo) {\n        pagingActive = pagingInfo.pageSize !== 0;\n        pagingIsLastPage = pagingInfo.pageNum == pagingInfo.totalPages - 1;\n    }\n    function updateRowCount() {\n        if (!initialized) {\n            return;\n        }\n        var dataLength = getDataLength();\n        var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n        var numberOfRows = dataLengthIncludingAddNew + (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n        var oldViewportHasVScroll = viewportHasVScroll;\n        // with autoHeight, we do not need to accommodate the vertical scroll bar\n        viewportHasVScroll = !options.autoHeight && numberOfRows * options.rowHeight > viewportH;\n        viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n        makeActiveCellNormal();\n        // remove the rows that are now outside of the data range\n        // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n        var r1 = dataLength - 1;\n        for (var i in rowsCache) {\n            if (i > r1) {\n                removeRowFromCache(i);\n            }\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n        if (activeCellNode && activeRow > r1) {\n            resetActiveCell();\n        }\n        var oldH = h;\n        th = Math.max(options.rowHeight * numberOfRows, viewportH - scrollbarDimensions.height);\n        if (th < maxSupportedCssHeight) {\n            // just one page\n            h = ph = th;\n            n = 1;\n            cj = 0;\n        } else {\n            // break into pages\n            h = maxSupportedCssHeight;\n            ph = h / 100;\n            n = Math.floor(th / ph);\n            cj = (th - h) / (n - 1);\n        }\n        if (h !== oldH) {\n            $canvas.css('height', h);\n            scrollTop = $viewport[0].scrollTop;\n        }\n        var oldScrollTopInRange = scrollTop + offset <= th - viewportH;\n        if (th == 0 || scrollTop == 0) {\n            page = offset = 0;\n        } else if (oldScrollTopInRange) {\n            // maintain virtual position\n            scrollTo(scrollTop + offset);\n        } else {\n            // scroll to bottom\n            scrollTo(th - viewportH);\n        }\n        if (h != oldH && options.autoHeight) {\n            resizeCanvas();\n        }\n        if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll) {\n            autosizeColumns();\n        }\n        updateCanvasWidth(false);\n    }\n    function getVisibleRange(viewportTop, viewportLeft) {\n        if (viewportTop == null) {\n            viewportTop = scrollTop;\n        }\n        if (viewportLeft == null) {\n            viewportLeft = scrollLeft;\n        }\n        return {\n            top: getRowFromPosition(viewportTop),\n            bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n            leftPx: viewportLeft,\n            rightPx: viewportLeft + viewportW\n        };\n    }\n    function getRenderedRange(viewportTop, viewportLeft) {\n        var range = getVisibleRange(viewportTop, viewportLeft);\n        var buffer = Math.round(viewportH / options.rowHeight);\n        var minBuffer = 3;\n        if (vScrollDir == -1) {\n            range.top -= buffer;\n            range.bottom += minBuffer;\n        } else if (vScrollDir == 1) {\n            range.top -= minBuffer;\n            range.bottom += buffer;\n        } else {\n            range.top -= minBuffer;\n            range.bottom += minBuffer;\n        }\n        range.top = Math.max(0, range.top);\n        range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n        range.leftPx -= viewportW;\n        range.rightPx += viewportW;\n        range.leftPx = Math.max(0, range.leftPx);\n        range.rightPx = Math.min(canvasWidth, range.rightPx);\n        return range;\n    }\n    function ensureCellNodesInRowsCache(row) {\n        var cacheEntry = rowsCache[row];\n        if (cacheEntry) {\n            if (cacheEntry.cellRenderQueue.length) {\n                var lastChild = cacheEntry.rowNode.lastChild;\n                while (cacheEntry.cellRenderQueue.length) {\n                    var columnIdx = cacheEntry.cellRenderQueue.pop();\n                    cacheEntry.cellNodesByColumnIdx[columnIdx] = lastChild;\n                    lastChild = lastChild.previousSibling;\n                }\n            }\n        }\n    }\n    function cleanUpCells(range, row) {\n        var totalCellsRemoved = 0;\n        var cacheEntry = rowsCache[row];\n        // Remove cells outside the range.\n        var cellsToRemove = [];\n        for (var i in cacheEntry.cellNodesByColumnIdx) {\n            // I really hate it when people mess with Array.prototype.\n            if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)) {\n                continue;\n            }\n            // This is a string, so it needs to be cast back to a number.\n            i = i | 0;\n            var colspan = cacheEntry.cellColSpans[i];\n            if (columnPosLeft[i] > range.rightPx || columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx) {\n                if (!(row == activeRow && i == activeCell)) {\n                    cellsToRemove.push(i);\n                }\n            }\n        }\n        var cellToRemove, node;\n        postProcessgroupId++;\n        while ((cellToRemove = cellsToRemove.pop()) != null) {\n            node = cacheEntry.cellNodesByColumnIdx[cellToRemove];\n            if (options.enableAsyncPostRenderCleanup && postProcessedRows[row] && postProcessedRows[row][cellToRemove]) {\n                queuePostProcessedCellForCleanup(node, cellToRemove, row);\n            } else {\n                cacheEntry.rowNode.removeChild(node);\n            }\n            delete cacheEntry.cellColSpans[cellToRemove];\n            delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n            if (postProcessedRows[row]) {\n                delete postProcessedRows[row][cellToRemove];\n            }\n            totalCellsRemoved++;\n        }\n    }\n    function cleanUpAndRenderCells(range) {\n        var cacheEntry;\n        var stringArray = [];\n        var processedRows = [];\n        var cellsAdded;\n        var totalCellsAdded = 0;\n        var colspan;\n        for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n            cacheEntry = rowsCache[row];\n            if (!cacheEntry) {\n                continue;\n            }\n            // cellRenderQueue populated in renderRows() needs to be cleared first\n            ensureCellNodesInRowsCache(row);\n            cleanUpCells(range, row);\n            // Render missing cells.\n            cellsAdded = 0;\n            var metadata = data.getItemMetadata && data.getItemMetadata(row);\n            metadata = metadata && metadata.columns;\n            var d = getDataItem(row);\n            // TODO:  shorten this loop (index? heuristics? binary search?)\n            for (var i = 0, ii = columns.length; i < ii; i++) {\n                // Cells to the right are outside the range.\n                if (columnPosLeft[i] > range.rightPx) {\n                    break;\n                }\n                // Already rendered.\n                if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n                    i += colspan > 1 ? colspan - 1 : 0;\n                    continue;\n                }\n                colspan = 1;\n                if (metadata) {\n                    var columnData = metadata[columns[i].id] || metadata[i];\n                    colspan = columnData && columnData.colspan || 1;\n                    if (colspan === '*') {\n                        colspan = ii - i;\n                    }\n                }\n                if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n                    appendCellHtml(stringArray, row, i, colspan, d);\n                    cellsAdded++;\n                }\n                i += colspan > 1 ? colspan - 1 : 0;\n            }\n            if (cellsAdded) {\n                totalCellsAdded += cellsAdded;\n                processedRows.push(row);\n            }\n        }\n        if (!stringArray.length) {\n            return;\n        }\n        var x = document.createElement('div');\n        x.innerHTML = stringArray.join('');\n        var processedRow;\n        var node;\n        while ((processedRow = processedRows.pop()) != null) {\n            cacheEntry = rowsCache[processedRow];\n            var columnIdx;\n            while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n                node = x.lastChild;\n                cacheEntry.rowNode.appendChild(node);\n                cacheEntry.cellNodesByColumnIdx[columnIdx] = node;\n            }\n        }\n    }\n    function renderRows(range) {\n        var parentNode = $canvas[0], stringArray = [], rows = [], needToReselectCell = false, dataLength = getDataLength();\n        for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n            if (rowsCache[i]) {\n                continue;\n            }\n            renderedRows++;\n            rows.push(i);\n            // Create an entry right away so that appendRowHtml() can\n            // start populatating it.\n            rowsCache[i] = {\n                'rowNode': null,\n                // ColSpans of rendered cells (by column idx).\n                // Can also be used for checking whether a cell has been rendered.\n                'cellColSpans': [],\n                // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n                'cellNodesByColumnIdx': [],\n                // Column indices of cell nodes that have been rendered, but not yet indexed in\n                // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n                // end of the row.\n                'cellRenderQueue': []\n            };\n            appendRowHtml(stringArray, i, range, dataLength);\n            if (activeCellNode && activeRow === i) {\n                needToReselectCell = true;\n            }\n            counter_rows_rendered++;\n        }\n        if (!rows.length) {\n            return;\n        }\n        var x = document.createElement('div');\n        x.innerHTML = stringArray.join('');\n        for (var i = 0, ii = rows.length; i < ii; i++) {\n            rowsCache[rows[i]].rowNode = parentNode.appendChild(x.firstChild);\n        }\n        if (needToReselectCell) {\n            activeCellNode = getCellNode(activeRow, activeCell);\n        }\n    }\n    function startPostProcessing() {\n        if (!options.enableAsyncPostRender) {\n            return;\n        }\n        clearTimeout(h_postrender);\n        h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n    }\n    function startPostProcessingCleanup() {\n        if (!options.enableAsyncPostRenderCleanup) {\n            return;\n        }\n        clearTimeout(h_postrenderCleanup);\n        h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n    }\n    function invalidatePostProcessingResults(row) {\n        // change status of columns to be re-rendered\n        for (var columnIdx in postProcessedRows[row]) {\n            if (postProcessedRows[row].hasOwnProperty(columnIdx)) {\n                postProcessedRows[row][columnIdx] = 'C';\n            }\n        }\n        postProcessFromRow = Math.min(postProcessFromRow, row);\n        postProcessToRow = Math.max(postProcessToRow, row);\n        startPostProcessing();\n    }\n    function updateRowPositions() {\n        for (var row in rowsCache) {\n            rowsCache[row].rowNode.style.top = getRowTop(row) + 'px';\n        }\n    }\n    function render() {\n        if (!initialized) {\n            return;\n        }\n        var visible = getVisibleRange();\n        var rendered = getRenderedRange();\n        // remove rows no longer in the viewport\n        cleanupRows(rendered);\n        // add new rows & missing cells in existing rows\n        if (lastRenderedScrollLeft != scrollLeft) {\n            cleanUpAndRenderCells(rendered);\n        }\n        // render missing rows\n        renderRows(rendered);\n        postProcessFromRow = visible.top;\n        postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n        startPostProcessing();\n        lastRenderedScrollTop = scrollTop;\n        lastRenderedScrollLeft = scrollLeft;\n        h_render = null;\n    }\n    function handleHeaderRowScroll() {\n        var scrollLeft = $headerRowScroller[0].scrollLeft;\n        if (scrollLeft != $viewport[0].scrollLeft) {\n            $viewport[0].scrollLeft = scrollLeft;\n        }\n    }\n    function handleFooterRowScroll() {\n        var scrollLeft = $footerRowScroller[0].scrollLeft;\n        if (scrollLeft != $viewport[0].scrollLeft) {\n            $viewport[0].scrollLeft = scrollLeft;\n        }\n    }\n    function handlePreHeaderPanelScroll() {\n        var scrollLeft = $preHeaderPanelScroller[0].scrollLeft;\n        if (scrollLeft != $viewport[0].scrollLeft) {\n            $viewport[0].scrollLeft = scrollLeft;\n        }\n    }\n    function handleScroll() {\n        scrollTop = $viewport[0].scrollTop;\n        scrollLeft = $viewport[0].scrollLeft;\n        var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n        var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n        if (hScrollDist) {\n            prevScrollLeft = scrollLeft;\n            $headerScroller[0].scrollLeft = scrollLeft;\n            $topPanelScroller[0].scrollLeft = scrollLeft;\n            $headerRowScroller[0].scrollLeft = scrollLeft;\n            if (options.createFooterRow) {\n                $footerRowScroller[0].scrollLeft = scrollLeft;\n            }\n            if (options.createPreHeaderPanel) {\n                $preHeaderPanelScroller[0].scrollLeft = scrollLeft;\n            }\n        }\n        if (vScrollDist) {\n            vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n            prevScrollTop = scrollTop;\n            // switch virtual pages if needed\n            if (vScrollDist < viewportH) {\n                scrollTo(scrollTop + offset);\n            } else {\n                var oldOffset = offset;\n                if (h == viewportH) {\n                    page = 0;\n                } else {\n                    page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n                }\n                offset = Math.round(page * cj);\n                if (oldOffset != offset) {\n                    invalidateAllRows();\n                }\n            }\n        }\n        if (hScrollDist || vScrollDist) {\n            if (h_render) {\n                clearTimeout(h_render);\n            }\n            if (Math.abs(lastRenderedScrollTop - scrollTop) > 20 || Math.abs(lastRenderedScrollLeft - scrollLeft) > 20) {\n                if (options.forceSyncScrolling || Math.abs(lastRenderedScrollTop - scrollTop) < viewportH && Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW) {\n                    render();\n                } else {\n                    h_render = setTimeout(render, 50);\n                }\n                trigger(self.onViewportChanged, { grid: self });\n            }\n        }\n        trigger(self.onScroll, {\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            grid: self\n        });\n    }\n    function asyncPostProcessRows() {\n        var dataLength = getDataLength();\n        while (postProcessFromRow <= postProcessToRow) {\n            var row = vScrollDir >= 0 ? postProcessFromRow++ : postProcessToRow--;\n            var cacheEntry = rowsCache[row];\n            if (!cacheEntry || row >= dataLength) {\n                continue;\n            }\n            if (!postProcessedRows[row]) {\n                postProcessedRows[row] = {};\n            }\n            ensureCellNodesInRowsCache(row);\n            for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n                if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n                    continue;\n                }\n                columnIdx = columnIdx | 0;\n                var m = columns[columnIdx];\n                var processedStatus = postProcessedRows[row][columnIdx];\n                // C=cleanup and re-render, R=rendered\n                if (m.asyncPostRender && processedStatus !== 'R') {\n                    var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n                    if (node) {\n                        m.asyncPostRender(node, row, getDataItem(row), m, processedStatus === 'C');\n                    }\n                    postProcessedRows[row][columnIdx] = 'R';\n                }\n            }\n            h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n            return;\n        }\n    }\n    function asyncPostProcessCleanupRows() {\n        if (postProcessedCleanupQueue.length > 0) {\n            var groupId = postProcessedCleanupQueue[0].groupId;\n            // loop through all queue members with this groupID\n            while (postProcessedCleanupQueue.length > 0 && postProcessedCleanupQueue[0].groupId == groupId) {\n                var entry = postProcessedCleanupQueue.shift();\n                if (entry.actionType == 'R') {\n                    $(entry.node).remove();\n                }\n                if (entry.actionType == 'C') {\n                    var column = columns[entry.columnIdx];\n                    if (column.asyncPostRenderCleanup && entry.node) {\n                        // cleanup must also remove element\n                        column.asyncPostRenderCleanup(entry.node, entry.rowIdx, column);\n                    }\n                }\n            }\n            // call this function again after the specified delay\n            h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n        }\n    }\n    function updateCellCssStylesOnRenderedRows(addedHash, removedHash) {\n        var node, columnId, addedRowHash, removedRowHash;\n        for (var row in rowsCache) {\n            removedRowHash = removedHash && removedHash[row];\n            addedRowHash = addedHash && addedHash[row];\n            if (removedRowHash) {\n                for (columnId in removedRowHash) {\n                    if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n                        node = getCellNode(row, getColumnIndex(columnId));\n                        if (node) {\n                            $(node).removeClass(removedRowHash[columnId]);\n                        }\n                    }\n                }\n            }\n            if (addedRowHash) {\n                for (columnId in addedRowHash) {\n                    if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n                        node = getCellNode(row, getColumnIndex(columnId));\n                        if (node) {\n                            $(node).addClass(addedRowHash[columnId]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function addCellCssStyles(key, hash) {\n        if (cellCssClasses[key]) {\n            throw new Error('addCellCssStyles: cell CSS hash with key \\'' + key + '\\' already exists.');\n        }\n        cellCssClasses[key] = hash;\n        updateCellCssStylesOnRenderedRows(hash, null);\n        trigger(self.onCellCssStylesChanged, {\n            'key': key,\n            'hash': hash,\n            'grid': self\n        });\n    }\n    function removeCellCssStyles(key) {\n        if (!cellCssClasses[key]) {\n            return;\n        }\n        updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n        delete cellCssClasses[key];\n        trigger(self.onCellCssStylesChanged, {\n            'key': key,\n            'hash': null,\n            'grid': self\n        });\n    }\n    function setCellCssStyles(key, hash) {\n        var prevHash = cellCssClasses[key];\n        cellCssClasses[key] = hash;\n        updateCellCssStylesOnRenderedRows(hash, prevHash);\n        trigger(self.onCellCssStylesChanged, {\n            'key': key,\n            'hash': hash,\n            'grid': self\n        });\n    }\n    function getCellCssStyles(key) {\n        return cellCssClasses[key];\n    }\n    function flashCell(row, cell, speed) {\n        speed = speed || 100;\n        if (rowsCache[row]) {\n            var $cell = $(getCellNode(row, cell));\n            var toggleCellClass = function (times) {\n                if (!times) {\n                    return;\n                }\n                setTimeout(function () {\n                    $cell.queue(function () {\n                        $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n                        toggleCellClass(times - 1);\n                    });\n                }, speed);\n            };\n            toggleCellClass(4);\n        }\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Interactivity\n    function handleMouseWheel(e) {\n        var rowNode = $(e.target).closest('.slick-row')[0];\n        if (rowNode != rowNodeFromLastMouseWheelEvent) {\n            if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent != rowNode) {\n                if (options.enableAsyncPostRenderCleanup && zombieRowPostProcessedFromLastMouseWheelEvent) {\n                    queuePostProcessedRowForCleanup(zombieRowCacheFromLastMouseWheelEvent, zombieRowPostProcessedFromLastMouseWheelEvent);\n                } else {\n                    $canvas[0].removeChild(zombieRowNodeFromLastMouseWheelEvent);\n                }\n                zombieRowNodeFromLastMouseWheelEvent = null;\n                zombieRowCacheFromLastMouseWheelEvent = null;\n                zombieRowPostProcessedFromLastMouseWheelEvent = null;\n                if (options.enableAsyncPostRenderCleanup) {\n                    startPostProcessingCleanup();\n                }\n            }\n            rowNodeFromLastMouseWheelEvent = rowNode;\n        }\n    }\n    function handleDragInit(e, dd) {\n        var cell = getCellFromEvent(e);\n        if (!cell || !cellExists(cell.row, cell.cell)) {\n            return false;\n        }\n        var retval = trigger(self.onDragInit, dd, e);\n        if (e.isImmediatePropagationStopped()) {\n            return retval;\n        }\n        // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n        // cancel out of it\n        return false;\n    }\n    function handleDragStart(e, dd) {\n        var cell = getCellFromEvent(e);\n        if (!cell || !cellExists(cell.row, cell.cell)) {\n            return false;\n        }\n        var retval = trigger(self.onDragStart, dd, e);\n        if (e.isImmediatePropagationStopped()) {\n            return retval;\n        }\n        return false;\n    }\n    function handleDrag(e, dd) {\n        return trigger(self.onDrag, dd, e);\n    }\n    function handleDragEnd(e, dd) {\n        trigger(self.onDragEnd, dd, e);\n    }\n    function handleKeyDown(e) {\n        trigger(self.onKeyDown, {\n            row: activeRow,\n            cell: activeCell,\n            grid: self\n        }, e);\n        var handled = e.isImmediatePropagationStopped();\n        var keyCode = Slick.keyCode;\n        if (!handled) {\n            if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n                // editor may specify an array of keys to bubble\n                if (options.editable && currentEditor && currentEditor.keyCaptureList) {\n                    if (currentEditor.keyCaptureList.indexOf(e.which) > -1) {\n                        return;\n                    }\n                }\n                if (e.which == keyCode.ESCAPE) {\n                    if (!getEditorLock().isActive()) {\n                        return;    // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n                    }\n                    cancelEditAndSetFocus();\n                } else if (e.which == keyCode.PAGE_DOWN) {\n                    navigatePageDown();\n                    handled = true;\n                } else if (e.which == keyCode.PAGE_UP) {\n                    navigatePageUp();\n                    handled = true;\n                } else if (e.which == keyCode.LEFT) {\n                    handled = navigateLeft();\n                } else if (e.which == keyCode.RIGHT) {\n                    handled = navigateRight();\n                } else if (e.which == keyCode.UP) {\n                    handled = navigateUp();\n                } else if (e.which == keyCode.DOWN) {\n                    handled = navigateDown();\n                } else if (e.which == keyCode.TAB) {\n                    handled = navigateNext();\n                } else if (e.which == keyCode.ENTER) {\n                    if (options.editable) {\n                        if (currentEditor) {\n                            // adding new row\n                            if (activeRow === getDataLength()) {\n                                navigateDown();\n                            } else {\n                                commitEditAndSetFocus();\n                            }\n                        } else {\n                            if (getEditorLock().commitCurrentEdit()) {\n                                makeActiveCellEditable();\n                            }\n                        }\n                    }\n                    handled = true;\n                }\n            } else if (e.which == keyCode.TAB && e.shiftKey && !e.ctrlKey && !e.altKey) {\n                handled = navigatePrev();\n            }\n        }\n        if (handled) {\n            // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n            e.stopPropagation();\n            e.preventDefault();\n            try {\n                e.originalEvent.keyCode = 0;    // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n            } // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n            // (hitting control key only, nothing else), \"Shift\" (maybe others)\n            catch (error) {\n            }\n        }\n    }\n    function handleClick(e) {\n        if (!currentEditor) {\n            // if this click resulted in some cell child node getting focus,\n            // don't steal it back - keyboard events will still bubble up\n            // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n            if (e.target != document.activeElement || $(e.target).hasClass('slick-cell')) {\n                setFocus();\n            }\n        }\n        var cell = getCellFromEvent(e);\n        if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n            return;\n        }\n        trigger(self.onClick, {\n            row: cell.row,\n            cell: cell.cell,\n            grid: self\n        }, e);\n        if (e.isImmediatePropagationStopped()) {\n            return;\n        }\n        // this optimisation causes trouble - MLeibman #329\n        //if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)) {\n        if (canCellBeActive(cell.row, cell.cell)) {\n            if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()) {\n                scrollRowIntoView(cell.row, false);\n                var preClickModeOn = e.target && e.target.className === Slick.preClickClassName;\n                setActiveCellInternal(getCellNode(cell.row, cell.cell), null, preClickModeOn);\n            }\n        }\n    }\n    function handleContextMenu(e) {\n        var $cell = $(e.target).closest('.slick-cell', $canvas);\n        if ($cell.length === 0) {\n            return;\n        }\n        // are we editing this cell?\n        if (activeCellNode === $cell[0] && currentEditor !== null) {\n            return;\n        }\n        trigger(self.onContextMenu, { grid: self }, e);\n    }\n    function handleDblClick(e) {\n        var cell = getCellFromEvent(e);\n        if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n            return;\n        }\n        trigger(self.onDblClick, {\n            row: cell.row,\n            cell: cell.cell,\n            grid: self\n        }, e);\n        if (e.isImmediatePropagationStopped()) {\n            return;\n        }\n        if (options.editable) {\n            gotoCell(cell.row, cell.cell, true);\n        }\n    }\n    function handleHeaderMouseEnter(e) {\n        trigger(self.onHeaderMouseEnter, {\n            'column': $(this).data('column'),\n            'grid': self\n        }, e);\n    }\n    function handleHeaderMouseLeave(e) {\n        trigger(self.onHeaderMouseLeave, {\n            'column': $(this).data('column'),\n            'grid': self\n        }, e);\n    }\n    function handleHeaderContextMenu(e) {\n        var $header = $(e.target).closest('.slick-header-column', '.slick-header-columns');\n        var column = $header && $header.data('column');\n        trigger(self.onHeaderContextMenu, {\n            column: column,\n            grid: self\n        }, e);\n    }\n    function handleHeaderClick(e) {\n        var $header = $(e.target).closest('.slick-header-column', '.slick-header-columns');\n        var column = $header && $header.data('column');\n        if (column) {\n            trigger(self.onHeaderClick, {\n                column: column,\n                grid: self\n            }, e);\n        }\n    }\n    function handleMouseEnter(e) {\n        trigger(self.onMouseEnter, { grid: self }, e);\n    }\n    function handleMouseLeave(e) {\n        trigger(self.onMouseLeave, { grid: self }, e);\n    }\n    function cellExists(row, cell) {\n        return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n    }\n    function getCellFromPoint(x, y) {\n        var row = getRowFromPosition(y);\n        var cell = 0;\n        var w = 0;\n        for (var i = 0; i < columns.length && w < x; i++) {\n            w += columns[i].width;\n            cell++;\n        }\n        if (cell < 0) {\n            cell = 0;\n        }\n        return {\n            row: row,\n            cell: cell - 1\n        };\n    }\n    function getCellFromNode(cellNode) {\n        // read column number from .l<columnNumber> CSS class\n        var cls = /l\\d+/.exec(cellNode.className);\n        if (!cls) {\n            throw new Error('getCellFromNode: cannot get cell - ' + cellNode.className);\n        }\n        return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n    }\n    function getRowFromNode(rowNode) {\n        for (var row in rowsCache) {\n            if (rowsCache[row].rowNode === rowNode) {\n                return row | 0;\n            }\n        }\n        return null;\n    }\n    function getCellFromEvent(e) {\n        var $cell = $(e.target).closest('.slick-cell', $canvas);\n        if (!$cell.length) {\n            return null;\n        }\n        var row = getRowFromNode($cell[0].parentNode);\n        var cell = getCellFromNode($cell[0]);\n        if (row == null || cell == null) {\n            return null;\n        } else {\n            return {\n                'row': row,\n                'cell': cell\n            };\n        }\n    }\n    function getCellNodeBox(row, cell) {\n        if (!cellExists(row, cell)) {\n            return null;\n        }\n        var y1 = getRowTop(row);\n        var y2 = y1 + options.rowHeight - 1;\n        var x1 = 0;\n        for (var i = 0; i < cell; i++) {\n            x1 += columns[i].width;\n        }\n        var x2 = x1 + columns[cell].width;\n        return {\n            top: y1,\n            left: x1,\n            bottom: y2,\n            right: x2\n        };\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Cell switching\n    function resetActiveCell() {\n        setActiveCellInternal(null, false);\n    }\n    function setFocus() {\n        if (tabbingDirection == -1) {\n            $focusSink[0].focus();\n        } else {\n            $focusSink2[0].focus();\n        }\n    }\n    function scrollCellIntoView(row, cell, doPaging) {\n        scrollRowIntoView(row, doPaging);\n        var colspan = getColspan(row, cell);\n        internalScrollColumnIntoView(columnPosLeft[cell], columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)]);\n    }\n    function internalScrollColumnIntoView(left, right) {\n        var scrollRight = scrollLeft + viewportW;\n        if (left < scrollLeft) {\n            $viewport.scrollLeft(left);\n            handleScroll();\n            render();\n        } else if (right > scrollRight) {\n            $viewport.scrollLeft(Math.min(left, right - $viewport[0].clientWidth));\n            handleScroll();\n            render();\n        }\n    }\n    function scrollColumnIntoView(cell) {\n        internalScrollColumnIntoView(columnPosLeft[cell], columnPosRight[cell]);\n    }\n    function setActiveCellInternal(newCell, opt_editMode, preClickModeOn, suppressActiveCellChangedEvent) {\n        if (activeCellNode !== null) {\n            makeActiveCellNormal();\n            $(activeCellNode).removeClass('active');\n            if (rowsCache[activeRow]) {\n                $(rowsCache[activeRow].rowNode).removeClass('active');\n            }\n        }\n        var activeCellChanged = activeCellNode !== newCell;\n        activeCellNode = newCell;\n        if (activeCellNode != null) {\n            activeRow = getRowFromNode(activeCellNode.parentNode);\n            activeCell = activePosX = getCellFromNode(activeCellNode);\n            if (opt_editMode == null) {\n                opt_editMode = activeRow == getDataLength() || options.autoEdit;\n            }\n            if (options.showCellSelection) {\n                $(activeCellNode).addClass('active');\n                $(rowsCache[activeRow].rowNode).addClass('active');\n            }\n            if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)) {\n                clearTimeout(h_editorLoader);\n                if (options.asyncEditorLoading) {\n                    h_editorLoader = setTimeout(function () {\n                        makeActiveCellEditable(undefined, preClickModeOn);\n                    }, options.asyncEditorLoadDelay);\n                } else {\n                    makeActiveCellEditable(undefined, preClickModeOn);\n                }\n            }\n        } else {\n            activeRow = activeCell = null;\n        }\n        // this optimisation causes trouble - MLeibman #329\n        //if (activeCellChanged) {\n        if (!suppressActiveCellChangedEvent) {\n            trigger(self.onActiveCellChanged, getActiveCell());\n        }    //}\n    }\n    function clearTextSelection() {\n        if (document.selection && document.selection.empty) {\n            try {\n                //IE fails here if selected element is not in dom\n                document.selection.empty();\n            } catch (e) {\n            }\n        } else if (window.getSelection) {\n            var sel = window.getSelection();\n            if (sel && sel.removeAllRanges) {\n                sel.removeAllRanges();\n            }\n        }\n    }\n    function isCellPotentiallyEditable(row, cell) {\n        var dataLength = getDataLength();\n        // is the data for this row loaded?\n        if (row < dataLength && !getDataItem(row)) {\n            return false;\n        }\n        // are we in the Add New row?  can we create new from this cell?\n        if (columns[cell].cannotTriggerInsert && row >= dataLength) {\n            return false;\n        }\n        // does this cell have an editor?\n        if (!getEditor(row, cell)) {\n            return false;\n        }\n        return true;\n    }\n    function makeActiveCellNormal() {\n        if (!currentEditor) {\n            return;\n        }\n        trigger(self.onBeforeCellEditorDestroy, {\n            editor: currentEditor,\n            grid: self\n        });\n        currentEditor.destroy();\n        currentEditor = null;\n        if (activeCellNode) {\n            var d = getDataItem(activeRow);\n            $(activeCellNode).removeClass('editable invalid');\n            if (d) {\n                var column = columns[activeCell];\n                var formatter = getFormatter(activeRow, column);\n                var formatterResult = formatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d, self);\n                applyFormatResultToCellNode(formatterResult, activeCellNode);\n                invalidatePostProcessingResults(activeRow);\n            }\n        }\n        // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n        // IE can't set focus to anything else correctly\n        if (navigator.userAgent.toLowerCase().match(/msie/)) {\n            clearTextSelection();\n        }\n        getEditorLock().deactivate(editController);\n    }\n    function makeActiveCellEditable(editor, preClickModeOn) {\n        if (!activeCellNode) {\n            return;\n        }\n        if (!options.editable) {\n            throw new Error('Grid : makeActiveCellEditable : should never get called when options.editable is false');\n        }\n        // cancel pending async call if there is one\n        clearTimeout(h_editorLoader);\n        if (!isCellPotentiallyEditable(activeRow, activeCell)) {\n            return;\n        }\n        var columnDef = columns[activeCell];\n        var item = getDataItem(activeRow);\n        if (trigger(self.onBeforeEditCell, {\n                row: activeRow,\n                cell: activeCell,\n                item: item,\n                column: columnDef,\n                grid: self\n            }) === false) {\n            setFocus();\n            return;\n        }\n        getEditorLock().activate(editController);\n        $(activeCellNode).addClass('editable');\n        var useEditor = editor || getEditor(activeRow, activeCell);\n        // don't clear the cell if a custom editor is passed through\n        if (!editor && !useEditor.suppressClearOnEdit) {\n            activeCellNode.innerHTML = '';\n        }\n        currentEditor = new useEditor({\n            grid: self,\n            gridPosition: absBox($container[0]),\n            position: absBox(activeCellNode),\n            container: activeCellNode,\n            column: columnDef,\n            item: item || {},\n            commitChanges: commitEditAndSetFocus,\n            cancelChanges: cancelEditAndSetFocus\n        });\n        if (item) {\n            currentEditor.loadValue(item);\n            if (preClickModeOn && currentEditor.preClick) {\n                currentEditor.preClick();\n            }\n        }\n        serializedEditorValue = currentEditor.serializeValue();\n        if (currentEditor.position) {\n            handleActiveCellPositionChange();\n        }\n    }\n    function commitEditAndSetFocus() {\n        // if the commit fails, it would do so due to a validation error\n        // if so, do not steal the focus from the editor\n        if (getEditorLock().commitCurrentEdit()) {\n            setFocus();\n            if (options.autoEdit) {\n                navigateDown();\n            }\n        }\n    }\n    function cancelEditAndSetFocus() {\n        if (getEditorLock().cancelCurrentEdit()) {\n            setFocus();\n        }\n    }\n    function absBox(elem) {\n        var box = {\n            top: elem.offsetTop,\n            left: elem.offsetLeft,\n            bottom: 0,\n            right: 0,\n            width: $(elem).outerWidth(),\n            height: $(elem).outerHeight(),\n            visible: true\n        };\n        box.bottom = box.top + box.height;\n        box.right = box.left + box.width;\n        // walk up the tree\n        var offsetParent = elem.offsetParent;\n        while ((elem = elem.parentNode) != document.body) {\n            if (elem == null)\n                break;\n            if (box.visible && elem.scrollHeight != elem.offsetHeight && $(elem).css('overflowY') != 'visible') {\n                box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n            }\n            if (box.visible && elem.scrollWidth != elem.offsetWidth && $(elem).css('overflowX') != 'visible') {\n                box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n            }\n            box.left -= elem.scrollLeft;\n            box.top -= elem.scrollTop;\n            if (elem === offsetParent) {\n                box.left += elem.offsetLeft;\n                box.top += elem.offsetTop;\n                offsetParent = elem.offsetParent;\n            }\n            box.bottom = box.top + box.height;\n            box.right = box.left + box.width;\n        }\n        return box;\n    }\n    function getActiveCellPosition() {\n        return absBox(activeCellNode);\n    }\n    function getGridPosition() {\n        return absBox($container[0]);\n    }\n    function handleActiveCellPositionChange() {\n        if (!activeCellNode) {\n            return;\n        }\n        trigger(self.onActiveCellPositionChanged, { grid: self });\n        if (currentEditor) {\n            var cellBox = getActiveCellPosition();\n            if (currentEditor.show && currentEditor.hide) {\n                if (!cellBox.visible) {\n                    currentEditor.hide();\n                } else {\n                    currentEditor.show();\n                }\n            }\n            if (currentEditor.position) {\n                currentEditor.position(cellBox);\n            }\n        }\n    }\n    function getCellEditor() {\n        return currentEditor;\n    }\n    function getActiveCell() {\n        if (!activeCellNode) {\n            return null;\n        } else {\n            return {\n                row: activeRow,\n                cell: activeCell,\n                grid: self\n            };\n        }\n    }\n    function getActiveCellNode() {\n        return activeCellNode;\n    }\n    function scrollRowIntoView(row, doPaging) {\n        var rowAtTop = row * options.rowHeight;\n        var rowAtBottom = (row + 1) * options.rowHeight - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0);\n        // need to page down?\n        if ((row + 1) * options.rowHeight > scrollTop + viewportH + offset) {\n            scrollTo(doPaging ? rowAtTop : rowAtBottom);\n            render();\n        }    // or page up?\n        else if (row * options.rowHeight < scrollTop + offset) {\n            scrollTo(doPaging ? rowAtBottom : rowAtTop);\n            render();\n        }\n    }\n    function scrollRowToTop(row) {\n        scrollTo(row * options.rowHeight);\n        render();\n    }\n    function scrollPage(dir) {\n        var deltaRows = dir * numVisibleRows;\n        scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n        render();\n        if (options.enableCellNavigation && activeRow != null) {\n            var row = activeRow + deltaRows;\n            var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n            if (row >= dataLengthIncludingAddNew) {\n                row = dataLengthIncludingAddNew - 1;\n            }\n            if (row < 0) {\n                row = 0;\n            }\n            var cell = 0, prevCell = null;\n            var prevActivePosX = activePosX;\n            while (cell <= activePosX) {\n                if (canCellBeActive(row, cell)) {\n                    prevCell = cell;\n                }\n                cell += getColspan(row, cell);\n            }\n            if (prevCell !== null) {\n                setActiveCellInternal(getCellNode(row, prevCell));\n                activePosX = prevActivePosX;\n            } else {\n                resetActiveCell();\n            }\n        }\n    }\n    function navigatePageDown() {\n        scrollPage(1);\n    }\n    function navigatePageUp() {\n        scrollPage(-1);\n    }\n    function getColspan(row, cell) {\n        var metadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (!metadata || !metadata.columns) {\n            return 1;\n        }\n        var columnData = metadata.columns[columns[cell].id] || metadata.columns[cell];\n        var colspan = columnData && columnData.colspan;\n        if (colspan === '*') {\n            colspan = columns.length - cell;\n        } else {\n            colspan = colspan || 1;\n        }\n        return colspan;\n    }\n    function findFirstFocusableCell(row) {\n        var cell = 0;\n        while (cell < columns.length) {\n            if (canCellBeActive(row, cell)) {\n                return cell;\n            }\n            cell += getColspan(row, cell);\n        }\n        return null;\n    }\n    function findLastFocusableCell(row) {\n        var cell = 0;\n        var lastFocusableCell = null;\n        while (cell < columns.length) {\n            if (canCellBeActive(row, cell)) {\n                lastFocusableCell = cell;\n            }\n            cell += getColspan(row, cell);\n        }\n        return lastFocusableCell;\n    }\n    function gotoRight(row, cell, posX) {\n        if (cell >= columns.length) {\n            return null;\n        }\n        do {\n            cell += getColspan(row, cell);\n        } while (cell < columns.length && !canCellBeActive(row, cell));\n        if (cell < columns.length) {\n            return {\n                'row': row,\n                'cell': cell,\n                'posX': cell\n            };\n        }\n        return null;\n    }\n    function gotoLeft(row, cell, posX) {\n        if (cell <= 0) {\n            return null;\n        }\n        var firstFocusableCell = findFirstFocusableCell(row);\n        if (firstFocusableCell === null || firstFocusableCell >= cell) {\n            return null;\n        }\n        var prev = {\n            'row': row,\n            'cell': firstFocusableCell,\n            'posX': firstFocusableCell\n        };\n        var pos;\n        while (true) {\n            pos = gotoRight(prev.row, prev.cell, prev.posX);\n            if (!pos) {\n                return null;\n            }\n            if (pos.cell >= cell) {\n                return prev;\n            }\n            prev = pos;\n        }\n    }\n    function gotoDown(row, cell, posX) {\n        var prevCell;\n        var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n        while (true) {\n            if (++row >= dataLengthIncludingAddNew) {\n                return null;\n            }\n            prevCell = cell = 0;\n            while (cell <= posX) {\n                prevCell = cell;\n                cell += getColspan(row, cell);\n            }\n            if (canCellBeActive(row, prevCell)) {\n                return {\n                    'row': row,\n                    'cell': prevCell,\n                    'posX': posX\n                };\n            }\n        }\n    }\n    function gotoUp(row, cell, posX) {\n        var prevCell;\n        while (true) {\n            if (--row < 0) {\n                return null;\n            }\n            prevCell = cell = 0;\n            while (cell <= posX) {\n                prevCell = cell;\n                cell += getColspan(row, cell);\n            }\n            if (canCellBeActive(row, prevCell)) {\n                return {\n                    'row': row,\n                    'cell': prevCell,\n                    'posX': posX\n                };\n            }\n        }\n    }\n    function gotoNext(row, cell, posX) {\n        if (row == null && cell == null) {\n            row = cell = posX = 0;\n            if (canCellBeActive(row, cell)) {\n                return {\n                    'row': row,\n                    'cell': cell,\n                    'posX': cell\n                };\n            }\n        }\n        var pos = gotoRight(row, cell, posX);\n        if (pos) {\n            return pos;\n        }\n        var firstFocusableCell = null;\n        var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n        // if at last row, cycle through columns rather than get stuck in the last one\n        if (row === dataLengthIncludingAddNew - 1) {\n            row--;\n        }\n        while (++row < dataLengthIncludingAddNew) {\n            firstFocusableCell = findFirstFocusableCell(row);\n            if (firstFocusableCell !== null) {\n                return {\n                    'row': row,\n                    'cell': firstFocusableCell,\n                    'posX': firstFocusableCell\n                };\n            }\n        }\n        return null;\n    }\n    function gotoPrev(row, cell, posX) {\n        if (row == null && cell == null) {\n            row = getDataLengthIncludingAddNew() - 1;\n            cell = posX = columns.length - 1;\n            if (canCellBeActive(row, cell)) {\n                return {\n                    'row': row,\n                    'cell': cell,\n                    'posX': cell\n                };\n            }\n        }\n        var pos;\n        var lastSelectableCell;\n        while (!pos) {\n            pos = gotoLeft(row, cell, posX);\n            if (pos) {\n                break;\n            }\n            if (--row < 0) {\n                return null;\n            }\n            cell = 0;\n            lastSelectableCell = findLastFocusableCell(row);\n            if (lastSelectableCell !== null) {\n                pos = {\n                    'row': row,\n                    'cell': lastSelectableCell,\n                    'posX': lastSelectableCell\n                };\n            }\n        }\n        return pos;\n    }\n    function navigateRight() {\n        return navigate('right');\n    }\n    function navigateLeft() {\n        return navigate('left');\n    }\n    function navigateDown() {\n        return navigate('down');\n    }\n    function navigateUp() {\n        return navigate('up');\n    }\n    function navigateNext() {\n        return navigate('next');\n    }\n    function navigatePrev() {\n        return navigate('prev');\n    }\n    /**\r\n     * @param {string} dir Navigation direction.\r\n     * @return {boolean} Whether navigation resulted in a change of active cell.\r\n     */\n    function navigate(dir) {\n        if (!options.enableCellNavigation) {\n            return false;\n        }\n        if (!activeCellNode && dir != 'prev' && dir != 'next') {\n            return false;\n        }\n        if (!getEditorLock().commitCurrentEdit()) {\n            return true;\n        }\n        setFocus();\n        var tabbingDirections = {\n            'up': -1,\n            'down': 1,\n            'left': -1,\n            'right': 1,\n            'prev': -1,\n            'next': 1\n        };\n        tabbingDirection = tabbingDirections[dir];\n        var stepFunctions = {\n            'up': gotoUp,\n            'down': gotoDown,\n            'left': gotoLeft,\n            'right': gotoRight,\n            'prev': gotoPrev,\n            'next': gotoNext\n        };\n        var stepFn = stepFunctions[dir];\n        var pos = stepFn(activeRow, activeCell, activePosX);\n        if (pos) {\n            var isAddNewRow = pos.row == getDataLength();\n            scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n            setActiveCellInternal(getCellNode(pos.row, pos.cell));\n            activePosX = pos.posX;\n            return true;\n        } else {\n            setActiveCellInternal(getCellNode(activeRow, activeCell));\n            return false;\n        }\n    }\n    function getCellNode(row, cell) {\n        if (rowsCache[row]) {\n            ensureCellNodesInRowsCache(row);\n            return rowsCache[row].cellNodesByColumnIdx[cell];\n        }\n        return null;\n    }\n    function setActiveCell(row, cell, opt_editMode, preClickModeOn, suppressActiveCellChangedEvent) {\n        if (!initialized) {\n            return;\n        }\n        if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n            return;\n        }\n        if (!options.enableCellNavigation) {\n            return;\n        }\n        scrollCellIntoView(row, cell, false);\n        setActiveCellInternal(getCellNode(row, cell), opt_editMode, preClickModeOn, suppressActiveCellChangedEvent);\n    }\n    function canCellBeActive(row, cell) {\n        if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() || row < 0 || cell >= columns.length || cell < 0) {\n            return false;\n        }\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (rowMetadata && typeof rowMetadata.focusable === 'boolean') {\n            return rowMetadata.focusable;\n        }\n        var columnMetadata = rowMetadata && rowMetadata.columns;\n        if (columnMetadata && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable === 'boolean') {\n            return columnMetadata[columns[cell].id].focusable;\n        }\n        if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === 'boolean') {\n            return columnMetadata[cell].focusable;\n        }\n        return columns[cell].focusable;\n    }\n    function canCellBeSelected(row, cell) {\n        if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n            return false;\n        }\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (rowMetadata && typeof rowMetadata.selectable === 'boolean') {\n            return rowMetadata.selectable;\n        }\n        var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n        if (columnMetadata && typeof columnMetadata.selectable === 'boolean') {\n            return columnMetadata.selectable;\n        }\n        return columns[cell].selectable;\n    }\n    function gotoCell(row, cell, forceEdit) {\n        if (!initialized) {\n            return;\n        }\n        if (!canCellBeActive(row, cell)) {\n            return;\n        }\n        if (!getEditorLock().commitCurrentEdit()) {\n            return;\n        }\n        scrollCellIntoView(row, cell, false);\n        var newCell = getCellNode(row, cell);\n        // if selecting the 'add new' row, start editing right away\n        setActiveCellInternal(newCell, forceEdit || row === getDataLength() || options.autoEdit);\n        // if no editor was created, set the focus back on the grid\n        if (!currentEditor) {\n            setFocus();\n        }\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // IEditor implementation for the editor lock\n    function commitCurrentEdit() {\n        var item = getDataItem(activeRow);\n        var column = columns[activeCell];\n        if (currentEditor) {\n            if (currentEditor.isValueChanged()) {\n                var validationResults = currentEditor.validate();\n                if (validationResults.valid) {\n                    if (activeRow < getDataLength()) {\n                        var editCommand = {\n                            row: activeRow,\n                            cell: activeCell,\n                            editor: currentEditor,\n                            serializedValue: currentEditor.serializeValue(),\n                            prevSerializedValue: serializedEditorValue,\n                            execute: function () {\n                                this.editor.applyValue(item, this.serializedValue);\n                                updateRow(this.row);\n                                trigger(self.onCellChange, {\n                                    row: activeRow,\n                                    cell: activeCell,\n                                    item: item,\n                                    grid: self\n                                });\n                            },\n                            undo: function () {\n                                this.editor.applyValue(item, this.prevSerializedValue);\n                                updateRow(this.row);\n                                trigger(self.onCellChange, {\n                                    row: activeRow,\n                                    cell: activeCell,\n                                    item: item,\n                                    grid: self\n                                });\n                            }\n                        };\n                        if (options.editCommandHandler) {\n                            makeActiveCellNormal();\n                            options.editCommandHandler(item, column, editCommand);\n                        } else {\n                            editCommand.execute();\n                            makeActiveCellNormal();\n                        }\n                    } else {\n                        var newItem = {};\n                        currentEditor.applyValue(newItem, currentEditor.serializeValue());\n                        makeActiveCellNormal();\n                        trigger(self.onAddNewRow, {\n                            item: newItem,\n                            column: column,\n                            grid: self\n                        });\n                    }\n                    // check whether the lock has been re-acquired by event handlers\n                    return !getEditorLock().isActive();\n                } else {\n                    // Re-add the CSS class to trigger transitions, if any.\n                    $(activeCellNode).removeClass('invalid');\n                    $(activeCellNode).width();\n                    // force layout\n                    $(activeCellNode).addClass('invalid');\n                    trigger(self.onValidationError, {\n                        editor: currentEditor,\n                        cellNode: activeCellNode,\n                        validationResults: validationResults,\n                        row: activeRow,\n                        cell: activeCell,\n                        column: column,\n                        grid: self\n                    });\n                    currentEditor.focus();\n                    return false;\n                }\n            }\n            makeActiveCellNormal();\n        }\n        return true;\n    }\n    function cancelCurrentEdit() {\n        makeActiveCellNormal();\n        return true;\n    }\n    function rowsToRanges(rows) {\n        var ranges = [];\n        var lastCell = columns.length - 1;\n        for (var i = 0; i < rows.length; i++) {\n            ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n        }\n        return ranges;\n    }\n    function getSelectedRows() {\n        if (!selectionModel) {\n            throw new Error('Selection model is not set');\n        }\n        return selectedRows;\n    }\n    function setSelectedRows(rows) {\n        if (!selectionModel) {\n            throw new Error('Selection model is not set');\n        }\n        selectionModel.setSelectedRanges(rowsToRanges(rows));\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Debug\n    this.debug = function () {\n        var s = '';\n        s += '\\n' + 'counter_rows_rendered:  ' + counter_rows_rendered;\n        s += '\\n' + 'counter_rows_removed:  ' + counter_rows_removed;\n        s += '\\n' + 'renderedRows:  ' + renderedRows;\n        s += '\\n' + 'numVisibleRows:  ' + numVisibleRows;\n        s += '\\n' + 'maxSupportedCssHeight:  ' + maxSupportedCssHeight;\n        s += '\\n' + 'n(umber of pages):  ' + n;\n        s += '\\n' + '(current) page:  ' + page;\n        s += '\\n' + 'page height (ph):  ' + ph;\n        s += '\\n' + 'vScrollDir:  ' + vScrollDir;\n        alert(s);\n    };\n    // a debug helper to be able to access private members\n    this.eval = function (expr) {\n        return eval(expr);\n    };\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Public API\n    $.extend(this, {\n        'slickGridVersion': '2.3.4',\n        // Events\n        'onScroll': new Slick.Event(),\n        'onSort': new Slick.Event(),\n        'onHeaderMouseEnter': new Slick.Event(),\n        'onHeaderMouseLeave': new Slick.Event(),\n        'onHeaderContextMenu': new Slick.Event(),\n        'onHeaderClick': new Slick.Event(),\n        'onHeaderCellRendered': new Slick.Event(),\n        'onBeforeHeaderCellDestroy': new Slick.Event(),\n        'onHeaderRowCellRendered': new Slick.Event(),\n        'onFooterRowCellRendered': new Slick.Event(),\n        'onBeforeHeaderRowCellDestroy': new Slick.Event(),\n        'onBeforeFooterRowCellDestroy': new Slick.Event(),\n        'onMouseEnter': new Slick.Event(),\n        'onMouseLeave': new Slick.Event(),\n        'onClick': new Slick.Event(),\n        'onDblClick': new Slick.Event(),\n        'onContextMenu': new Slick.Event(),\n        'onKeyDown': new Slick.Event(),\n        'onAddNewRow': new Slick.Event(),\n        'onBeforeAppendCell': new Slick.Event(),\n        'onValidationError': new Slick.Event(),\n        'onViewportChanged': new Slick.Event(),\n        'onColumnsReordered': new Slick.Event(),\n        'onColumnsResized': new Slick.Event(),\n        'onCellChange': new Slick.Event(),\n        'onBeforeEditCell': new Slick.Event(),\n        'onBeforeCellEditorDestroy': new Slick.Event(),\n        'onBeforeDestroy': new Slick.Event(),\n        'onActiveCellChanged': new Slick.Event(),\n        'onActiveCellPositionChanged': new Slick.Event(),\n        'onDragInit': new Slick.Event(),\n        'onDragStart': new Slick.Event(),\n        'onDrag': new Slick.Event(),\n        'onDragEnd': new Slick.Event(),\n        'onSelectedRowsChanged': new Slick.Event(),\n        'onCellCssStylesChanged': new Slick.Event(),\n        // Methods\n        'registerPlugin': registerPlugin,\n        'unregisterPlugin': unregisterPlugin,\n        'getColumns': getColumns,\n        'setColumns': setColumns,\n        'getColumnIndex': getColumnIndex,\n        'updateColumnHeader': updateColumnHeader,\n        'setSortColumn': setSortColumn,\n        'setSortColumns': setSortColumns,\n        'getSortColumns': getSortColumns,\n        'autosizeColumns': autosizeColumns,\n        'getOptions': getOptions,\n        'setOptions': setOptions,\n        'getData': getData,\n        'getDataLength': getDataLength,\n        'getDataItem': getDataItem,\n        'setData': setData,\n        'getSelectionModel': getSelectionModel,\n        'setSelectionModel': setSelectionModel,\n        'getSelectedRows': getSelectedRows,\n        'setSelectedRows': setSelectedRows,\n        'getContainerNode': getContainerNode,\n        'updatePagingStatusFromView': updatePagingStatusFromView,\n        'render': render,\n        'invalidate': invalidate,\n        'invalidateRow': invalidateRow,\n        'invalidateRows': invalidateRows,\n        'invalidateAllRows': invalidateAllRows,\n        'updateCell': updateCell,\n        'updateRow': updateRow,\n        'getViewport': getVisibleRange,\n        'getRenderedRange': getRenderedRange,\n        'resizeCanvas': resizeCanvas,\n        'updateRowCount': updateRowCount,\n        'scrollRowIntoView': scrollRowIntoView,\n        'scrollRowToTop': scrollRowToTop,\n        'scrollCellIntoView': scrollCellIntoView,\n        'scrollColumnIntoView': scrollColumnIntoView,\n        'getCanvasNode': getCanvasNode,\n        'getUID': getUID,\n        'getHeaderColumnWidthDiff': getHeaderColumnWidthDiff,\n        'getScrollbarDimensions': getScrollbarDimensions,\n        'getHeadersWidth': getHeadersWidth,\n        'getCanvasWidth': getCanvasWidth,\n        'focus': setFocus,\n        'getCellFromPoint': getCellFromPoint,\n        'getCellFromEvent': getCellFromEvent,\n        'getActiveCell': getActiveCell,\n        'setActiveCell': setActiveCell,\n        'getActiveCellNode': getActiveCellNode,\n        'getActiveCellPosition': getActiveCellPosition,\n        'resetActiveCell': resetActiveCell,\n        'editActiveCell': makeActiveCellEditable,\n        'getCellEditor': getCellEditor,\n        'getCellNode': getCellNode,\n        'getCellNodeBox': getCellNodeBox,\n        'canCellBeSelected': canCellBeSelected,\n        'canCellBeActive': canCellBeActive,\n        'navigatePrev': navigatePrev,\n        'navigateNext': navigateNext,\n        'navigateUp': navigateUp,\n        'navigateDown': navigateDown,\n        'navigateLeft': navigateLeft,\n        'navigateRight': navigateRight,\n        'navigatePageUp': navigatePageUp,\n        'navigatePageDown': navigatePageDown,\n        'gotoCell': gotoCell,\n        'getTopPanel': getTopPanel,\n        'setTopPanelVisibility': setTopPanelVisibility,\n        'getPreHeaderPanel': getPreHeaderPanel,\n        'setPreHeaderPanelVisibility': setPreHeaderPanelVisibility,\n        'setHeaderRowVisibility': setHeaderRowVisibility,\n        'getHeaderRow': getHeaderRow,\n        'getHeaderRowColumn': getHeaderRowColumn,\n        'setFooterRowVisibility': setFooterRowVisibility,\n        'getFooterRow': getFooterRow,\n        'getFooterRowColumn': getFooterRowColumn,\n        'getGridPosition': getGridPosition,\n        'flashCell': flashCell,\n        'addCellCssStyles': addCellCssStyles,\n        'setCellCssStyles': setCellCssStyles,\n        'removeCellCssStyles': removeCellCssStyles,\n        'getCellCssStyles': getCellCssStyles,\n        'init': finishInitialization,\n        'destroy': destroy,\n        // IEditor implementation\n        'getEditorLock': getEditorLock,\n        'getEditController': getEditController\n    });\n    init();\n}\nmodule.exports = { Grid: SlickGrid };},\n417: /* slickgrid/slick.jquery */ function(require, module, exports) {\nmodule.exports = typeof $ !== 'undefined' ? $ : require(410    /* jquery */);},\n418: /* underscore.template/lib/index */ function(require, module, exports) {\n'use strict';\nvar _ = require(419    /* ./underscore.template */);\nvar UnderscoreTemplate = _.template;\nfunction Template(text, data, settings) {\n    return UnderscoreTemplate(text, data, settings);\n}\nTemplate._ = _;\nmodule.exports = Template;\n// If we're in the browser,\n// define it if we're using AMD, otherwise leak a global.\nif (typeof define === 'function' && define.amd) {\n    define(function () {\n        return Template;\n    });\n} else if (typeof window !== 'undefined' || typeof navigator !== 'undefined') {\n    window.UnderscoreTemplate = Template;\n}},\n419: /* underscore.template/lib/underscore.template */ function(require, module, exports) {\n'use strict';\n//     Underscore.js 1.5.2\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n// Establish the object that gets returned to break out of a loop iteration.\nvar breaker = {};\n// Save bytes in the minified (but not gzipped) version:\nvar ArrayProto = Array.prototype, ObjProto = Object.prototype;\n// Create quick reference variables for speed access to core prototypes.\nvar slice = ArrayProto.slice, toString = ObjProto.toString, hasOwnProperty = ObjProto.hasOwnProperty;\n// All **ECMAScript 5** native function implementations that we hope to use\n// are declared here.\nvar nativeForEach = ArrayProto.forEach, nativeKeys = Object.keys, nativeIsArray = Array.isArray;\n// Create a safe reference to the Underscore object for use below.\nvar _ = function () {\n};\n// Collection Functions\n// --------------------\n// The cornerstone, an `each` implementation, aka `forEach`.\n// Handles objects with the built-in `forEach`, arrays, and raw objects.\n// Delegates to **ECMAScript 5**'s native `forEach` if available.\nvar each = _.each = _.forEach = function (obj, iterator, context) {\n    if (obj == null)\n        return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n        for (var i = 0, length = obj.length; i < length; i++) {\n            if (iterator.call(context, obj[i], i, obj) === breaker)\n                return;\n        }\n    } else {\n        var keys = _.keys(obj);\n        for (var i = 0, length = keys.length; i < length; i++) {\n            if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker)\n                return;\n        }\n    }\n};\n// Object Functions\n// ----------------\n// Retrieve the names of an object's properties.\n// Delegates to **ECMAScript 5**'s native `Object.keys`\n_.keys = nativeKeys || function (obj) {\n    if (obj !== Object(obj))\n        throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj)\n        if (_.has(obj, key))\n            keys.push(key);\n    return keys;\n};\n// Fill in a given object with default properties.\n_.defaults = function (obj) {\n    each(slice.call(arguments, 1), function (source) {\n        if (source) {\n            for (var prop in source) {\n                if (obj[prop] === void 0)\n                    obj[prop] = source[prop];\n            }\n        }\n    });\n    return obj;\n};\n// Is a given value an array?\n// Delegates to ECMA5's native Array.isArray\n_.isArray = nativeIsArray || function (obj) {\n    return toString.call(obj) === '[object Array]';\n};\n// Shortcut function for checking if an object has a given property directly\n// on itself (in other words, not on a prototype).\n_.has = function (obj, path) {\n    if (!_.isArray(path)) {\n        return obj != null && hasOwnProperty.call(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n        var key = path[i];\n        if (obj == null || !hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n        obj = obj[key];\n    }\n    return !!length;\n};\n// List of HTML entities for escaping.\nvar entityMap = {\n    escape: {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        '\\'': '&#x27;'\n    }\n};\n// Regexes containing the keys and values listed immediately above.\nvar entityRegexes = { escape: new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g') };\n// Functions for escaping and unescaping strings to/from HTML interpolation.\n_.each(['escape'], function (method) {\n    _[method] = function (string) {\n        if (string == null)\n            return '';\n        return ('' + string).replace(entityRegexes[method], function (match) {\n            return entityMap[method][match];\n        });\n    };\n});\n// By default, Underscore uses ERB-style template delimiters, change the\n// following template settings to use alternative delimiters.\n_.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n};\n// When customizing `templateSettings`, if you don't want to define an\n// interpolation, evaluation or escaping regex, we need one that is\n// guaranteed not to match.\nvar noMatch = /(.)^/;\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar escapes = {\n    '\\'': '\\'',\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n};\nvar escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n// JavaScript micro-templating, similar to John Resig's implementation.\n// Underscore templating handles arbitrary delimiters, preserves whitespace,\n// and correctly escapes quotes within interpolated code.\n_.template = function (text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp([\n        (settings.escape || noMatch).source,\n        (settings.interpolate || noMatch).source,\n        (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = '__p+=\\'';\n    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n        source += text.slice(index, offset).replace(escaper, function (match) {\n            return '\\\\' + escapes[match];\n        });\n        if (escape) {\n            source += '\\'+\\n((__t=(' + escape + '))==null?\\'\\':_.escape(__t))+\\n\\'';\n        }\n        if (interpolate) {\n            source += '\\'+\\n((__t=(' + interpolate + '))==null?\\'\\':__t)+\\n\\'';\n        }\n        if (evaluate) {\n            source += '\\';\\n' + evaluate + '\\n__p+=\\'';\n        }\n        index = offset + match.length;\n        return match;\n    });\n    source += '\\';\\n';\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable)\n        source = 'with(obj||{}){\\n' + source + '}\\n';\n    source = 'var __t,__p=\\'\\',__j=Array.prototype.join,' + 'print=function(){__p+=__j.call(arguments,\\'\\');};\\n' + source + 'return __p;\\n';\n    try {\n        render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n        e.source = source;\n        throw e;\n    }\n    if (data)\n        return render(data, _);\n    var template = function (data) {\n        return render.call(this, data, _);\n    };\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n    return template;\n};\nmodule.exports = _;}\n}, {\"models/widgets/tables/cell_editors\":402,\"models/widgets/tables/cell_formatters\":403,\"models/widgets/tables/data_table\":404,\"models/widgets/tables/index\":405,\"models/widgets/tables/main\":406,\"models/widgets/tables/table_column\":407,\"models/widgets/tables/table_widget\":408,\"models/widgets/widget\":409}, 406);\n})\n\n\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar extend1 = function (child, parent) {\n        for (var key in parent) {\n            if (hasProp.call(parent, key))\n                child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\nvar p = require(14    /* core/properties */);\nvar dom_1 = require(5    /* core/dom */);\nvar object_1 = require(29    /* core/util/object */);\nvar dom_view_1 = require(6    /* core/dom_view */);\nvar model_1 = require(49    /* ../../../model */);\nvar data_table_1 = require(404    /* ./data_table */);\nexports.CellEditorView = function (superClass) {\n    extend1(CellEditorView, superClass);\n    CellEditorView.prototype.className = 'bk-cell-editor';\n    CellEditorView.prototype.inputEl = null;\n    CellEditorView.prototype.emptyValue = null;\n    CellEditorView.prototype.defaultValue = null;\n    function CellEditorView(options) {\n        this.args = options;\n        CellEditorView.__super__.constructor.call(this, object_1.extend({ model: options.column.editor }, options));\n    }\n    CellEditorView.prototype.initialize = function (options) {\n        CellEditorView.__super__.initialize.call(this, options);\n        return this.render();\n    };\n    CellEditorView.prototype.render = function () {\n        CellEditorView.__super__.render.call(this);\n        this.args.container.appendChild(this.el);\n        this.el.appendChild(this.inputEl);\n        this.renderEditor();\n        this.disableNavigation();\n        return this;\n    };\n    CellEditorView.prototype.renderEditor = function () {\n    };\n    CellEditorView.prototype.disableNavigation = function () {\n        return this.inputEl.addEventListener('keydown', function (_this) {\n            return function (event) {\n                switch (event.keyCode) {\n                case dom_1.Keys.Left:\n                case dom_1.Keys.Right:\n                case dom_1.Keys.Up:\n                case dom_1.Keys.Down:\n                case dom_1.Keys.PageUp:\n                case dom_1.Keys.PageDown:\n                    return event.stopImmediatePropagation();\n                }\n            };\n        }(this));\n    };\n    CellEditorView.prototype.destroy = function () {\n        return this.remove();\n    };\n    CellEditorView.prototype.focus = function () {\n        return this.inputEl.focus();\n    };\n    CellEditorView.prototype.show = function () {\n    };\n    CellEditorView.prototype.hide = function () {\n    };\n    CellEditorView.prototype.position = function () {\n    };\n    CellEditorView.prototype.getValue = function () {\n        return this.inputEl.value;\n    };\n    CellEditorView.prototype.setValue = function (val) {\n        return this.inputEl.value = val;\n    };\n    CellEditorView.prototype.serializeValue = function () {\n        return this.getValue();\n    };\n    CellEditorView.prototype.isValueChanged = function () {\n        return !(this.getValue() === '' && this.defaultValue == null) && this.getValue() !== this.defaultValue;\n    };\n    CellEditorView.prototype.applyValue = function (item, state) {\n        return this.args.grid.getData().setField(item[data_table_1.DTINDEX_NAME], this.args.column.field, state);\n    };\n    CellEditorView.prototype.loadValue = function (item) {\n        var value;\n        value = item[this.args.column.field];\n        this.defaultValue = value != null ? value : this.emptyValue;\n        return this.setValue(this.defaultValue);\n    };\n    CellEditorView.prototype.validateValue = function (value) {\n        var result;\n        if (this.args.column.validator) {\n            result = this.args.column.validator(value);\n            if (!result.valid) {\n                return result;\n            }\n        }\n        return {\n            valid: true,\n            msg: null\n        };\n    };\n    CellEditorView.prototype.validate = function () {\n        return this.validateValue(this.getValue());\n    };\n    return CellEditorView;\n}(dom_view_1.DOMView);\nexports.CellEditor = function (superClass) {\n    extend1(CellEditor, superClass);\n    function CellEditor() {\n        return CellEditor.__super__.constructor.apply(this, arguments);\n    }\n    CellEditor.prototype.type = 'CellEditor';\n    CellEditor.prototype.default_view = exports.CellEditorView;\n    return CellEditor;\n}(model_1.Model);\nexports.StringEditorView = function (superClass) {\n    extend1(StringEditorView, superClass);\n    function StringEditorView() {\n        return StringEditorView.__super__.constructor.apply(this, arguments);\n    }\n    StringEditorView.prototype.emptyValue = '';\n    StringEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\n    StringEditorView.prototype.renderEditor = function () {\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    StringEditorView.prototype.loadValue = function (item) {\n        StringEditorView.__super__.loadValue.call(this, item);\n        this.inputEl.defaultValue = this.defaultValue;\n        return this.inputEl.select();\n    };\n    return StringEditorView;\n}(exports.CellEditorView);\nexports.StringEditor = function (superClass) {\n    extend1(StringEditor, superClass);\n    function StringEditor() {\n        return StringEditor.__super__.constructor.apply(this, arguments);\n    }\n    StringEditor.prototype.type = 'StringEditor';\n    StringEditor.prototype.default_view = exports.StringEditorView;\n    StringEditor.define({\n        completions: [\n            p.Array,\n            []\n        ]\n    });\n    return StringEditor;\n}(exports.CellEditor);\nexports.TextEditorView = function (superClass) {\n    extend1(TextEditorView, superClass);\n    function TextEditorView() {\n        return TextEditorView.__super__.constructor.apply(this, arguments);\n    }\n    return TextEditorView;\n}(exports.CellEditorView);\nexports.TextEditor = function (superClass) {\n    extend1(TextEditor, superClass);\n    function TextEditor() {\n        return TextEditor.__super__.constructor.apply(this, arguments);\n    }\n    TextEditor.prototype.type = 'TextEditor';\n    TextEditor.prototype.default_view = exports.TextEditorView;\n    return TextEditor;\n}(exports.CellEditor);\nexports.SelectEditorView = function (superClass) {\n    extend1(SelectEditorView, superClass);\n    function SelectEditorView() {\n        return SelectEditorView.__super__.constructor.apply(this, arguments);\n    }\n    SelectEditorView.prototype.inputEl = dom_1.select();\n    SelectEditorView.prototype.renderEditor = function () {\n        var i, len, ref;\n        ref = this.model.options;\n        for (i = 0, len = ref.length; i < len; i++) {\n            dom_1.option = ref[i];\n            this.inputEl.appendChild(dom_1.option({ value: dom_1.option }, dom_1.option));\n        }\n        return this.focus();\n    };\n    SelectEditorView.prototype.loadValue = function (item) {\n        SelectEditorView.__super__.loadValue.call(this, item);\n        return this.inputEl.select();\n    };\n    return SelectEditorView;\n}(exports.CellEditorView);\nexports.SelectEditor = function (superClass) {\n    extend1(SelectEditor, superClass);\n    function SelectEditor() {\n        return SelectEditor.__super__.constructor.apply(this, arguments);\n    }\n    SelectEditor.prototype.type = 'SelectEditor';\n    SelectEditor.prototype.default_view = exports.SelectEditorView;\n    SelectEditor.define({\n        options: [\n            p.Array,\n            []\n        ]\n    });\n    return SelectEditor;\n}(exports.CellEditor);\nexports.PercentEditorView = function (superClass) {\n    extend1(PercentEditorView, superClass);\n    function PercentEditorView() {\n        return PercentEditorView.__super__.constructor.apply(this, arguments);\n    }\n    return PercentEditorView;\n}(exports.CellEditorView);\nexports.PercentEditor = function (superClass) {\n    extend1(PercentEditor, superClass);\n    function PercentEditor() {\n        return PercentEditor.__super__.constructor.apply(this, arguments);\n    }\n    PercentEditor.prototype.type = 'PercentEditor';\n    PercentEditor.prototype.default_view = exports.PercentEditorView;\n    return PercentEditor;\n}(exports.CellEditor);\nexports.CheckboxEditorView = function (superClass) {\n    extend1(CheckboxEditorView, superClass);\n    function CheckboxEditorView() {\n        return CheckboxEditorView.__super__.constructor.apply(this, arguments);\n    }\n    CheckboxEditorView.prototype.inputEl = dom_1.input({\n        type: 'checkbox',\n        value: 'true'\n    });\n    CheckboxEditorView.prototype.renderEditor = function () {\n        return this.focus();\n    };\n    CheckboxEditorView.prototype.loadValue = function (item) {\n        this.defaultValue = !!item[this.args.column.field];\n        return this.inputEl.checked = this.defaultValue;\n    };\n    CheckboxEditorView.prototype.serializeValue = function () {\n        return this.inputEl.checked;\n    };\n    return CheckboxEditorView;\n}(exports.CellEditorView);\nexports.CheckboxEditor = function (superClass) {\n    extend1(CheckboxEditor, superClass);\n    function CheckboxEditor() {\n        return CheckboxEditor.__super__.constructor.apply(this, arguments);\n    }\n    CheckboxEditor.prototype.type = 'CheckboxEditor';\n    CheckboxEditor.prototype.default_view = exports.CheckboxEditorView;\n    return CheckboxEditor;\n}(exports.CellEditor);\nexports.IntEditorView = function (superClass) {\n    extend1(IntEditorView, superClass);\n    function IntEditorView() {\n        return IntEditorView.__super__.constructor.apply(this, arguments);\n    }\n    IntEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\n    IntEditorView.prototype.renderEditor = function () {\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    IntEditorView.prototype.remove = function () {\n        return IntEditorView.__super__.remove.call(this);\n    };\n    IntEditorView.prototype.serializeValue = function () {\n        return parseInt(this.getValue(), 10) || 0;\n    };\n    IntEditorView.prototype.loadValue = function (item) {\n        IntEditorView.__super__.loadValue.call(this, item);\n        this.inputEl.defaultValue = this.defaultValue;\n        return this.inputEl.select();\n    };\n    IntEditorView.prototype.validateValue = function (value) {\n        if (isNaN(value)) {\n            return {\n                valid: false,\n                msg: 'Please enter a valid integer'\n            };\n        } else {\n            return IntEditorView.__super__.validateValue.call(this, value);\n        }\n    };\n    return IntEditorView;\n}(exports.CellEditorView);\nexports.IntEditor = function (superClass) {\n    extend1(IntEditor, superClass);\n    function IntEditor() {\n        return IntEditor.__super__.constructor.apply(this, arguments);\n    }\n    IntEditor.prototype.type = 'IntEditor';\n    IntEditor.prototype.default_view = exports.IntEditorView;\n    IntEditor.define({\n        step: [\n            p.Number,\n            1\n        ]\n    });\n    return IntEditor;\n}(exports.CellEditor);\nexports.NumberEditorView = function (superClass) {\n    extend1(NumberEditorView, superClass);\n    function NumberEditorView() {\n        return NumberEditorView.__super__.constructor.apply(this, arguments);\n    }\n    NumberEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\n    NumberEditorView.prototype.renderEditor = function () {\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    NumberEditorView.prototype.remove = function () {\n        return NumberEditorView.__super__.remove.call(this);\n    };\n    NumberEditorView.prototype.serializeValue = function () {\n        return parseFloat(this.getValue()) || 0;\n    };\n    NumberEditorView.prototype.loadValue = function (item) {\n        NumberEditorView.__super__.loadValue.call(this, item);\n        this.inputEl.defaultValue = this.defaultValue;\n        return this.inputEl.select();\n    };\n    NumberEditorView.prototype.validateValue = function (value) {\n        if (isNaN(value)) {\n            return {\n                valid: false,\n                msg: 'Please enter a valid number'\n            };\n        } else {\n            return NumberEditorView.__super__.validateValue.call(this, value);\n        }\n    };\n    return NumberEditorView;\n}(exports.CellEditorView);\nexports.NumberEditor = function (superClass) {\n    extend1(NumberEditor, superClass);\n    function NumberEditor() {\n        return NumberEditor.__super__.constructor.apply(this, arguments);\n    }\n    NumberEditor.prototype.type = 'NumberEditor';\n    NumberEditor.prototype.default_view = exports.NumberEditorView;\n    NumberEditor.define({\n        step: [\n            p.Number,\n            0.01\n        ]\n    });\n    return NumberEditor;\n}(exports.CellEditor);\nexports.TimeEditorView = function (superClass) {\n    extend1(TimeEditorView, superClass);\n    function TimeEditorView() {\n        return TimeEditorView.__super__.constructor.apply(this, arguments);\n    }\n    return TimeEditorView;\n}(exports.CellEditorView);\nexports.TimeEditor = function (superClass) {\n    extend1(TimeEditor, superClass);\n    function TimeEditor() {\n        return TimeEditor.__super__.constructor.apply(this, arguments);\n    }\n    TimeEditor.prototype.type = 'TimeEditor';\n    TimeEditor.prototype.default_view = exports.TimeEditorView;\n    return TimeEditor;\n}(exports.CellEditor);\nexports.DateEditorView = function (superClass) {\n    extend1(DateEditorView, superClass);\n    function DateEditorView() {\n        return DateEditorView.__super__.constructor.apply(this, arguments);\n    }\n    DateEditorView.prototype.emptyValue = new Date();\n    DateEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\n    DateEditorView.prototype.renderEditor = function () {\n        this.calendarOpen = false;\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    DateEditorView.prototype.destroy = function () {\n        return DateEditorView.__super__.destroy.call(this);\n    };\n    DateEditorView.prototype.show = function () {\n        return DateEditorView.__super__.show.call(this);\n    };\n    DateEditorView.prototype.hide = function () {\n        return DateEditorView.__super__.hide.call(this);\n    };\n    DateEditorView.prototype.position = function (position) {\n        return DateEditorView.__super__.position.call(this);\n    };\n    DateEditorView.prototype.getValue = function () {\n    };\n    DateEditorView.prototype.setValue = function (val) {\n    };\n    return DateEditorView;\n}(exports.CellEditorView);\nexports.DateEditor = function (superClass) {\n    extend1(DateEditor, superClass);\n    function DateEditor() {\n        return DateEditor.__super__.constructor.apply(this, arguments);\n    }\n    DateEditor.prototype.type = 'DateEditor';\n    DateEditor.prototype.default_view = exports.DateEditorView;\n    return DateEditor;\n}(exports.CellEditor);    \n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar extend1 = function (child, parent) {\n        for (var key in parent) {\n            if (hasProp.call(parent, key))\n                child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\nvar Numbro = require(329    /* numbro */);\nvar compile_template = require(418    /* underscore.template */);\nvar tz = require(360    /* timezone */);\nvar p = require(14    /* core/properties */);\nvar dom_1 = require(5    /* core/dom */);\nvar object_1 = require(29    /* core/util/object */);\nvar types_1 = require(41    /* core/util/types */);\nvar model_1 = require(49    /* ../../../model */);\nexports.CellFormatter = function (superClass) {\n    extend1(CellFormatter, superClass);\n    function CellFormatter() {\n        return CellFormatter.__super__.constructor.apply(this, arguments);\n    }\n    CellFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        if (value == null) {\n            return '';\n        } else {\n            return (value + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n    };\n    return CellFormatter;\n}(model_1.Model);\nexports.StringFormatter = function (superClass) {\n    extend1(StringFormatter, superClass);\n    function StringFormatter() {\n        return StringFormatter.__super__.constructor.apply(this, arguments);\n    }\n    StringFormatter.prototype.type = 'StringFormatter';\n    StringFormatter.define({\n        font_style: [\n            p.FontStyle,\n            'normal'\n        ],\n        text_align: [\n            p.TextAlign,\n            'left'\n        ],\n        text_color: [p.Color]\n    });\n    StringFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var font_style, text, text_align, text_color;\n        font_style = this.font_style;\n        text_align = this.text_align;\n        text_color = this.text_color;\n        text = dom_1.span({}, value == null ? '' : '' + value);\n        switch (font_style) {\n        case 'bold':\n            text.style.fontWeight = 'bold';\n            break;\n        case 'italic':\n            text.style.fontStyle = 'italic';\n        }\n        if (text_align != null) {\n            text.style.textAlign = text_align;\n        }\n        if (text_color != null) {\n            text.style.color = text_color;\n        }\n        text = text.outerHTML;\n        return text;\n    };\n    return StringFormatter;\n}(exports.CellFormatter);\nexports.NumberFormatter = function (superClass) {\n    extend1(NumberFormatter, superClass);\n    function NumberFormatter() {\n        return NumberFormatter.__super__.constructor.apply(this, arguments);\n    }\n    NumberFormatter.prototype.type = 'NumberFormatter';\n    NumberFormatter.define({\n        format: [\n            p.String,\n            '0,0'\n        ],\n        language: [\n            p.String,\n            'en'\n        ],\n        rounding: [\n            p.String,\n            'round'\n        ]\n    });\n    NumberFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var format, language, rounding;\n        format = this.format;\n        language = this.language;\n        rounding = function () {\n            switch (this.rounding) {\n            case 'round':\n            case 'nearest':\n                return Math.round;\n            case 'floor':\n            case 'rounddown':\n                return Math.floor;\n            case 'ceil':\n            case 'roundup':\n                return Math.ceil;\n            }\n        }.call(this);\n        value = Numbro.format(value, format, language, rounding);\n        return NumberFormatter.__super__.doFormat.call(this, row, cell, value, columnDef, dataContext);\n    };\n    return NumberFormatter;\n}(exports.StringFormatter);\nexports.BooleanFormatter = function (superClass) {\n    extend1(BooleanFormatter, superClass);\n    function BooleanFormatter() {\n        return BooleanFormatter.__super__.constructor.apply(this, arguments);\n    }\n    BooleanFormatter.prototype.type = 'BooleanFormatter';\n    BooleanFormatter.define({\n        icon: [\n            p.String,\n            'check'\n        ]\n    });\n    BooleanFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        if (!!value) {\n            return dom_1.i({ 'class': this.icon }).outerHTML;\n        } else {\n            return '';\n        }\n    };\n    return BooleanFormatter;\n}(exports.CellFormatter);\nexports.DateFormatter = function (superClass) {\n    extend1(DateFormatter, superClass);\n    function DateFormatter() {\n        return DateFormatter.__super__.constructor.apply(this, arguments);\n    }\n    DateFormatter.prototype.type = 'DateFormatter';\n    DateFormatter.define({\n        format: [\n            p.String,\n            'ISO-8601'\n        ]\n    });\n    DateFormatter.prototype.getFormat = function () {\n        var fmt;\n        fmt = function () {\n            switch (this.format) {\n            case 'ATOM':\n            case 'W3C':\n            case 'RFC-3339':\n            case 'ISO-8601':\n                return '%Y-%m-%d';\n            case 'COOKIE':\n                return '%a, %d %b %Y';\n            case 'RFC-850':\n                return '%A, %d-%b-%y';\n            case 'RFC-1123':\n            case 'RFC-2822':\n                return '%a, %e %b %Y';\n            case 'RSS':\n            case 'RFC-822':\n            case 'RFC-1036':\n                return '%a, %e %b %y';\n            case 'TIMESTAMP':\n                return null;\n            default:\n                return '__CUSTOM__';\n            }\n        }.call(this);\n        if (fmt === '__CUSTOM__') {\n            return this.format;\n        } else {\n            return fmt;\n        }\n    };\n    DateFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var date;\n        value = types_1.isString(value) ? parseInt(value, 10) : value;\n        date = tz(value, this.getFormat());\n        return DateFormatter.__super__.doFormat.call(this, row, cell, date, columnDef, dataContext);\n    };\n    return DateFormatter;\n}(exports.CellFormatter);\nexports.HTMLTemplateFormatter = function (superClass) {\n    extend1(HTMLTemplateFormatter, superClass);\n    function HTMLTemplateFormatter() {\n        return HTMLTemplateFormatter.__super__.constructor.apply(this, arguments);\n    }\n    HTMLTemplateFormatter.prototype.type = 'HTMLTemplateFormatter';\n    HTMLTemplateFormatter.define({\n        template: [\n            p.String,\n            '<%= value %>'\n        ]\n    });\n    HTMLTemplateFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var compiled_template, template;\n        template = this.template;\n        if (value === null) {\n            return '';\n        } else {\n            dataContext = object_1.extend({}, dataContext, { value: value });\n            compiled_template = compile_template(template);\n            return compiled_template(dataContext);\n        }\n    };\n    return HTMLTemplateFormatter;\n}(exports.CellFormatter);    \n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar extend = function (child, parent) {\n        for (var key in parent) {\n            if (hasProp.call(parent, key))\n                child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\nvar slickgrid_1 = require(416    /* slickgrid */);\nvar slick_rowselectionmodel_1 = require(414    /* slickgrid/plugins/slick.rowselectionmodel */);\nvar slick_checkboxselectcolumn_1 = require(413    /* slickgrid/plugins/slick.checkboxselectcolumn */);\nvar hittest = require(9    /* core/hittest */);\nvar p = require(14    /* core/properties */);\nvar string_1 = require(36    /* core/util/string */);\nvar array_1 = require(21    /* core/util/array */);\nvar logging_1 = require(13    /* core/logging */);\nvar table_widget_1 = require(408    /* ./table_widget */);\nvar widget_1 = require(409    /* ../widget */);\nexports.DTINDEX_NAME = '__bkdt_internal_index__';\nexports.DataProvider = function () {\n    function DataProvider(source, view) {\n        this.source = source;\n        this.view = view;\n        if (exports.DTINDEX_NAME in this.source.data) {\n            throw new Error('special name ' + exports.DTINDEX_NAME + ' cannot be used as a data table column');\n        }\n        this.index = this.view.indices;\n    }\n    DataProvider.prototype.getLength = function () {\n        return this.index.length;\n    };\n    DataProvider.prototype.getItem = function (offset) {\n        var field, item, j, len, ref;\n        item = {};\n        ref = Object.keys(this.source.data);\n        for (j = 0, len = ref.length; j < len; j++) {\n            field = ref[j];\n            item[field] = this.source.data[field][this.index[offset]];\n        }\n        item[exports.DTINDEX_NAME] = this.index[offset];\n        return item;\n    };\n    DataProvider.prototype.setItem = function (offset, item) {\n        var field, value;\n        for (field in item) {\n            value = item[field];\n            if (field !== exports.DTINDEX_NAME) {\n                this.source.data[field][this.index[offset]] = value;\n            }\n        }\n        this._update_source_inplace();\n        return null;\n    };\n    DataProvider.prototype.getField = function (offset, field) {\n        if (field === exports.DTINDEX_NAME) {\n            return this.index[offset];\n        }\n        return this.source.data[field][this.index[offset]];\n    };\n    DataProvider.prototype.setField = function (offset, field, value) {\n        this.source.data[field][this.index[offset]] = value;\n        this._update_source_inplace();\n        return null;\n    };\n    DataProvider.prototype.getItemMetadata = function (index) {\n        return null;\n    };\n    DataProvider.prototype.getRecords = function () {\n        var i;\n        return function () {\n            var j, ref, results;\n            results = [];\n            for (i = j = 0, ref = this.getLength(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                results.push(this.getItem(i));\n            }\n            return results;\n        }.call(this);\n    };\n    DataProvider.prototype.sort = function (columns) {\n        var cols, column, old_index, records;\n        cols = function () {\n            var j, len, results;\n            results = [];\n            for (j = 0, len = columns.length; j < len; j++) {\n                column = columns[j];\n                results.push([\n                    column.sortCol.field,\n                    column.sortAsc ? 1 : -1\n                ]);\n            }\n            return results;\n        }();\n        if (cols.length === 0) {\n            cols = [[\n                    exports.DTINDEX_NAME,\n                    1\n                ]];\n        }\n        records = this.getRecords();\n        old_index = this.index.slice();\n        return this.index.sort(function (i1, i2) {\n            var field, j, len, ref, result, sign, value1, value2;\n            for (j = 0, len = cols.length; j < len; j++) {\n                ref = cols[j], field = ref[0], sign = ref[1];\n                value1 = records[old_index.indexOf(i1)][field];\n                value2 = records[old_index.indexOf(i2)][field];\n                result = value1 === value2 ? 0 : value1 > value2 ? sign : -sign;\n                if (result !== 0) {\n                    return result;\n                }\n            }\n            return 0;\n        });\n    };\n    DataProvider.prototype._update_source_inplace = function () {\n        this.source.properties.data.change.emit(this, this.source.attributes['data']);\n    };\n    return DataProvider;\n}();\nexports.DataTableView = function (superClass) {\n    extend(DataTableView, superClass);\n    function DataTableView() {\n        return DataTableView.__super__.constructor.apply(this, arguments);\n    }\n    DataTableView.prototype.className = 'bk-data-table';\n    DataTableView.prototype.initialize = function (options) {\n        DataTableView.__super__.initialize.call(this, options);\n        return this.in_selection_update = false;\n    };\n    DataTableView.prototype.connect_signals = function () {\n        DataTableView.__super__.connect_signals.call(this);\n        this.connect(this.model.change, function (_this) {\n            return function () {\n                return _this.render();\n            };\n        }(this));\n        this.connect(this.model.source.properties.data.change, function (_this) {\n            return function () {\n                return _this.updateGrid();\n            };\n        }(this));\n        this.connect(this.model.source.streaming, function (_this) {\n            return function () {\n                return _this.updateGrid();\n            };\n        }(this));\n        this.connect(this.model.source.patching, function (_this) {\n            return function () {\n                return _this.updateGrid();\n            };\n        }(this));\n        return this.connect(this.model.source.change, function (_this) {\n            return function () {\n                return _this.updateSelection();\n            };\n        }(this));\n    };\n    DataTableView.prototype.updateGrid = function () {\n        this.model.view.compute_indices();\n        this.data.constructor(this.model.source, this.model.view);\n        this.grid.invalidate();\n        this.grid.render();\n        this.model.source.data = this.model.source.data;\n        return this.model.source.change.emit();\n    };\n    DataTableView.prototype.updateSelection = function () {\n        var cur_grid_range, min_index, permuted_indices, selected, selected_indices, x;\n        if (this.in_selection_update) {\n            return;\n        }\n        selected = this.model.source.selected;\n        selected_indices = selected['1d'].indices;\n        permuted_indices = function () {\n            var j, len, results;\n            results = [];\n            for (j = 0, len = selected_indices.length; j < len; j++) {\n                x = selected_indices[j];\n                results.push(this.data.index.indexOf(x));\n            }\n            return results;\n        }.call(this);\n        this.in_selection_update = true;\n        this.grid.setSelectedRows(permuted_indices);\n        this.in_selection_update = false;\n        cur_grid_range = this.grid.getViewport();\n        if (this.model.scroll_to_selection && !array_1.any(permuted_indices, function (i) {\n                return cur_grid_range.top <= i && i <= cur_grid_range.bottom;\n            })) {\n            min_index = Math.max(0, Math.min.apply(null, permuted_indices) - 1);\n            return this.grid.scrollRowToTop(min_index);\n        }\n    };\n    DataTableView.prototype.newIndexColumn = function () {\n        return {\n            id: string_1.uniqueId(),\n            name: '#',\n            field: exports.DTINDEX_NAME,\n            width: 40,\n            behavior: 'select',\n            cannotTriggerInsert: true,\n            resizable: false,\n            selectable: false,\n            sortable: true,\n            cssClass: 'bk-cell-index'\n        };\n    };\n    DataTableView.prototype.render = function () {\n        var checkboxSelector, column, columns, options, ref, reorderable;\n        columns = function () {\n            var j, len, ref, results;\n            ref = this.model.columns;\n            results = [];\n            for (j = 0, len = ref.length; j < len; j++) {\n                column = ref[j];\n                results.push(column.toColumn());\n            }\n            return results;\n        }.call(this);\n        if (this.model.selectable === 'checkbox') {\n            checkboxSelector = new slick_checkboxselectcolumn_1.CheckboxSelectColumn({ cssClass: 'bk-cell-select' });\n            columns.unshift(checkboxSelector.getColumnDefinition());\n        }\n        if (this.model.row_headers) {\n            columns.unshift(this.newIndexColumn());\n        }\n        reorderable = this.model.reorderable;\n        if (reorderable && (typeof $ !== 'undefined' && $ !== null ? (ref = $.fn) != null ? ref.sortable : void 0 : void 0) == null) {\n            logging_1.logger.warn('jquery-ui is required to enable DataTable.reorderable');\n            reorderable = false;\n        }\n        options = {\n            enableCellNavigation: this.model.selectable !== false,\n            enableColumnReorder: reorderable,\n            forceFitColumns: this.model.fit_columns,\n            autoHeight: this.model.height === 'auto',\n            multiColumnSort: this.model.sortable,\n            editable: this.model.editable,\n            autoEdit: false\n        };\n        if (this.model.width != null) {\n            this.el.style.width = this.model.width + 'px';\n        } else {\n            this.el.style.width = this.model.default_width + 'px';\n        }\n        if (this.model.height != null && this.model.height !== 'auto') {\n            this.el.style.height = this.model.height + 'px';\n        }\n        this.data = new exports.DataProvider(this.model.source, this.model.view);\n        this.grid = new slickgrid_1.Grid(this.el, this.data, columns, options);\n        this.grid.onSort.subscribe(function (_this) {\n            return function (event, args) {\n                columns = args.sortCols;\n                _this.data.sort(columns);\n                _this.grid.invalidate();\n                _this.updateSelection();\n                return _this.grid.render();\n            };\n        }(this));\n        if (this.model.selectable !== false) {\n            this.grid.setSelectionModel(new slick_rowselectionmodel_1.RowSelectionModel({ selectActiveRow: checkboxSelector == null }));\n            if (checkboxSelector != null) {\n                this.grid.registerPlugin(checkboxSelector);\n            }\n            this.grid.onSelectedRowsChanged.subscribe(function (_this) {\n                return function (event, args) {\n                    var i, selected;\n                    if (_this.in_selection_update) {\n                        return;\n                    }\n                    selected = hittest.create_hit_test_result();\n                    selected['1d'].indices = function () {\n                        var j, len, ref1, results;\n                        ref1 = args.rows;\n                        results = [];\n                        for (j = 0, len = ref1.length; j < len; j++) {\n                            i = ref1[j];\n                            results.push(this.data.index[i]);\n                        }\n                        return results;\n                    }.call(_this);\n                    return _this.model.source.selected = selected;\n                };\n            }(this));\n            this.updateSelection();\n        }\n        return this;\n    };\n    return DataTableView;\n}(widget_1.WidgetView);\nexports.DataTable = function (superClass) {\n    extend(DataTable, superClass);\n    function DataTable() {\n        return DataTable.__super__.constructor.apply(this, arguments);\n    }\n    DataTable.prototype.type = 'DataTable';\n    DataTable.prototype.default_view = exports.DataTableView;\n    DataTable.define({\n        columns: [\n            p.Array,\n            []\n        ],\n        fit_columns: [\n            p.Bool,\n            true\n        ],\n        sortable: [\n            p.Bool,\n            true\n        ],\n        reorderable: [\n            p.Bool,\n            true\n        ],\n        editable: [\n            p.Bool,\n            false\n        ],\n        selectable: [\n            p.Bool,\n            true\n        ],\n        row_headers: [\n            p.Bool,\n            true\n        ],\n        scroll_to_selection: [\n            p.Bool,\n            true\n        ]\n    });\n    DataTable.override({ height: 400 });\n    DataTable.internal({\n        default_width: [\n            p.Number,\n            600\n        ]\n    });\n    return DataTable;\n}(table_widget_1.TableWidget);    \n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(361    /* tslib */);\ntslib_1.__exportStar(require(402    /* ./cell_editors */), exports);\ntslib_1.__exportStar(require(403    /* ./cell_formatters */), exports);\nvar data_table_1 = require(404    /* ./data_table */);\nexports.DataTable = data_table_1.DataTable;\nvar table_column_1 = require(407    /* ./table_column */);\nexports.TableColumn = table_column_1.TableColumn;\nvar table_widget_1 = require(408    /* ./table_widget */);\nexports.TableWidget = table_widget_1.TableWidget;    \n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar Tables = require(405    /* ./index */);\nexports.Tables = Tables;\nvar base_1 = require(0    /* ../../../base */);\nbase_1.register_models(Tables);    \n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar extend = function (child, parent) {\n        for (var key in parent) {\n            if (hasProp.call(parent, key))\n                child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\nvar cell_formatters_1 = require(403    /* ./cell_formatters */);\nvar cell_editors_1 = require(402    /* ./cell_editors */);\nvar p = require(14    /* core/properties */);\nvar string_1 = require(36    /* core/util/string */);\nvar model_1 = require(49    /* ../../../model */);\nexports.TableColumn = function (superClass) {\n    extend(TableColumn, superClass);\n    function TableColumn() {\n        return TableColumn.__super__.constructor.apply(this, arguments);\n    }\n    TableColumn.prototype.type = 'TableColumn';\n    TableColumn.prototype.default_view = null;\n    TableColumn.define({\n        field: [p.String],\n        title: [p.String],\n        width: [\n            p.Number,\n            300\n        ],\n        formatter: [\n            p.Instance,\n            function () {\n                return new cell_formatters_1.StringFormatter();\n            }\n        ],\n        editor: [\n            p.Instance,\n            function () {\n                return new cell_editors_1.StringEditor();\n            }\n        ],\n        sortable: [\n            p.Bool,\n            true\n        ],\n        default_sort: [\n            p.String,\n            'ascending'\n        ]\n    });\n    TableColumn.prototype.toColumn = function () {\n        var ref;\n        return {\n            id: string_1.uniqueId(),\n            field: this.field,\n            name: this.title,\n            width: this.width,\n            formatter: (ref = this.formatter) != null ? ref.doFormat.bind(this.formatter) : void 0,\n            editor: this.editor.default_view,\n            sortable: this.sortable,\n            defaultSortAsc: this.default_sort === 'ascending'\n        };\n    };\n    return TableColumn;\n}(model_1.Model);    \n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar extend = function (child, parent) {\n        for (var key in parent) {\n            if (hasProp.call(parent, key))\n                child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\nvar widget_1 = require(409    /* ../widget */);\nvar cds_view_1 = require(169    /* ../../sources/cds_view */);\nvar p = require(14    /* core/properties */);\nexports.TableWidget = function (superClass) {\n    extend(TableWidget, superClass);\n    function TableWidget() {\n        return TableWidget.__super__.constructor.apply(this, arguments);\n    }\n    TableWidget.prototype.type = 'TableWidget';\n    TableWidget.prototype.initialize = function (options) {\n        TableWidget.__super__.initialize.call(this, options);\n        if (this.view.source == null) {\n            this.view.source = this.source;\n            return this.view.compute_indices();\n        }\n    };\n    TableWidget.define({\n        source: [p.Instance],\n        view: [\n            p.Instance,\n            function () {\n                return new cds_view_1.CDSView();\n            }\n        ]\n    });\n    return TableWidget;\n}(widget_1.Widget);    \n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar extend = function (child, parent) {\n        for (var key in parent) {\n            if (hasProp.call(parent, key))\n                child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\nvar layout_dom_1 = require(136    /* ../layouts/layout_dom */);\nexports.WidgetView = function (superClass) {\n    extend(WidgetView, superClass);\n    function WidgetView() {\n        return WidgetView.__super__.constructor.apply(this, arguments);\n    }\n    WidgetView.prototype.className = 'bk-widget';\n    WidgetView.prototype.render = function () {\n        this._render_classes();\n        if (this.model.height != null) {\n            this.el.style.height = this.model.height + 'px';\n        }\n        if (this.model.width != null) {\n            return this.el.style.width = this.model.width + 'px';\n        }\n    };\n    return WidgetView;\n}(layout_dom_1.LayoutDOMView);\nexports.Widget = function (superClass) {\n    extend(Widget, superClass);\n    function Widget() {\n        return Widget.__super__.constructor.apply(this, arguments);\n    }\n    Widget.prototype.type = 'Widget';\n    Widget.prototype.default_view = exports.WidgetView;\n    return Widget;\n}(layout_dom_1.LayoutDOM);    \n","/*!\n * jQuery JavaScript Library v3.2.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2017-03-20T18:59Z\n */\n(function (global, factory) {\n    'use strict';\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        // For CommonJS and CommonJS-like environments where a proper `window`\n        // is present, execute the factory and get jQuery.\n        // For environments that do not have a `window` with a `document`\n        // (such as Node.js), expose a factory as module.exports.\n        // This accentuates the need for the creation of a real `window`.\n        // e.g. var jQuery = require(\"jquery\")(window);\n        // See ticket #14549 for more info.\n        module.exports = global.document ? factory(global, true) : function (w) {\n            if (!w.document) {\n                throw new Error('jQuery requires a window with a document');\n            }\n            return factory(w);\n        };\n    } else {\n        factory(global);\n    }    // Pass this if window is not defined yet\n}(typeof window !== 'undefined' ? window : this, function (window, noGlobal) {\n    // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n    // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n    // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n    // enough that all such attempts are guarded in a try block.\n    'use strict';\n    var arr = [];\n    var document = window.document;\n    var getProto = Object.getPrototypeOf;\n    var slice = arr.slice;\n    var concat = arr.concat;\n    var push = arr.push;\n    var indexOf = arr.indexOf;\n    var class2type = {};\n    var toString = class2type.toString;\n    var hasOwn = class2type.hasOwnProperty;\n    var fnToString = hasOwn.toString;\n    var ObjectFunctionString = fnToString.call(Object);\n    var support = {};\n    function DOMEval(code, doc) {\n        doc = doc || document;\n        var script = doc.createElement('script');\n        script.text = code;\n        doc.head.appendChild(script).parentNode.removeChild(script);\n    }\n    /* global Symbol */\n    // Defining this global in .eslintrc.json would create a danger of using the global\n    // unguarded in another place, it seems safer to define global only for this module\n    var version = '3.2.1',\n        // Define a local copy of jQuery\n        jQuery = function (selector, context) {\n            // The jQuery object is actually just the init constructor 'enhanced'\n            // Need init if jQuery is called (just allow error to be thrown if not included)\n            return new jQuery.fn.init(selector, context);\n        },\n        // Support: Android <=4.0 only\n        // Make sure we trim BOM and NBSP\n        rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n        // Matches dashed string for camelizing\n        rmsPrefix = /^-ms-/, rdashAlpha = /-([a-z])/g,\n        // Used by jQuery.camelCase as callback to replace()\n        fcamelCase = function (all, letter) {\n            return letter.toUpperCase();\n        };\n    jQuery.fn = jQuery.prototype = {\n        // The current version of jQuery being used\n        jquery: version,\n        constructor: jQuery,\n        // The default length of a jQuery object is 0\n        length: 0,\n        toArray: function () {\n            return slice.call(this);\n        },\n        // Get the Nth element in the matched element set OR\n        // Get the whole matched element set as a clean array\n        get: function (num) {\n            // Return all the elements in a clean array\n            if (num == null) {\n                return slice.call(this);\n            }\n            // Return just the one element from the set\n            return num < 0 ? this[num + this.length] : this[num];\n        },\n        // Take an array of elements and push it onto the stack\n        // (returning the new matched element set)\n        pushStack: function (elems) {\n            // Build a new jQuery matched element set\n            var ret = jQuery.merge(this.constructor(), elems);\n            // Add the old object onto the stack (as a reference)\n            ret.prevObject = this;\n            // Return the newly-formed element set\n            return ret;\n        },\n        // Execute a callback for every element in the matched set.\n        each: function (callback) {\n            return jQuery.each(this, callback);\n        },\n        map: function (callback) {\n            return this.pushStack(jQuery.map(this, function (elem, i) {\n                return callback.call(elem, i, elem);\n            }));\n        },\n        slice: function () {\n            return this.pushStack(slice.apply(this, arguments));\n        },\n        first: function () {\n            return this.eq(0);\n        },\n        last: function () {\n            return this.eq(-1);\n        },\n        eq: function (i) {\n            var len = this.length, j = +i + (i < 0 ? len : 0);\n            return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n        },\n        end: function () {\n            return this.prevObject || this.constructor();\n        },\n        // For internal use only.\n        // Behaves like an Array's method, not like a jQuery method.\n        push: push,\n        sort: arr.sort,\n        splice: arr.splice\n    };\n    jQuery.extend = jQuery.fn.extend = function () {\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === 'boolean') {\n            deep = target;\n            // Skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== 'object' && !jQuery.isFunction(target)) {\n            target = {};\n        }\n        // Extend jQuery itself if only one argument is passed\n        if (i === length) {\n            target = this;\n            i--;\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) != null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && Array.isArray(src) ? src : [];\n                        } else {\n                            clone = src && jQuery.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = jQuery.extend(deep, clone, copy);    // Don't bring in undefined values\n                    } else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    jQuery.extend({\n        // Unique for each copy of jQuery on the page\n        expando: 'jQuery' + (version + Math.random()).replace(/\\D/g, ''),\n        // Assume jQuery is ready without the ready module\n        isReady: true,\n        error: function (msg) {\n            throw new Error(msg);\n        },\n        noop: function () {\n        },\n        isFunction: function (obj) {\n            return jQuery.type(obj) === 'function';\n        },\n        isWindow: function (obj) {\n            return obj != null && obj === obj.window;\n        },\n        isNumeric: function (obj) {\n            // As of jQuery 3.0, isNumeric is limited to\n            // strings and numbers (primitives or objects)\n            // that can be coerced to finite numbers (gh-2662)\n            var type = jQuery.type(obj);\n            return (type === 'number' || type === 'string') && // parseFloat NaNs numeric-cast false positives (\"\")\n            // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n            // subtraction forces infinities to NaN\n            !isNaN(obj - parseFloat(obj));\n        },\n        isPlainObject: function (obj) {\n            var proto, Ctor;\n            // Detect obvious negatives\n            // Use toString instead of jQuery.type to catch host objects\n            if (!obj || toString.call(obj) !== '[object Object]') {\n                return false;\n            }\n            proto = getProto(obj);\n            // Objects with no prototype (e.g., `Object.create( null )`) are plain\n            if (!proto) {\n                return true;\n            }\n            // Objects with prototype are plain iff they were constructed by a global Object function\n            Ctor = hasOwn.call(proto, 'constructor') && proto.constructor;\n            return typeof Ctor === 'function' && fnToString.call(Ctor) === ObjectFunctionString;\n        },\n        isEmptyObject: function (obj) {\n            /* eslint-disable no-unused-vars */\n            // See https://github.com/eslint/eslint/issues/6125\n            var name;\n            for (name in obj) {\n                return false;\n            }\n            return true;\n        },\n        type: function (obj) {\n            if (obj == null) {\n                return obj + '';\n            }\n            // Support: Android <=2.3 only (functionish RegExp)\n            return typeof obj === 'object' || typeof obj === 'function' ? class2type[toString.call(obj)] || 'object' : typeof obj;\n        },\n        // Evaluates a script in a global context\n        globalEval: function (code) {\n            DOMEval(code);\n        },\n        // Convert dashed to camelCase; used by the css and data modules\n        // Support: IE <=9 - 11, Edge 12 - 13\n        // Microsoft forgot to hump their vendor prefix (#9572)\n        camelCase: function (string) {\n            return string.replace(rmsPrefix, 'ms-').replace(rdashAlpha, fcamelCase);\n        },\n        each: function (obj, callback) {\n            var length, i = 0;\n            if (isArrayLike(obj)) {\n                length = obj.length;\n                for (; i < length; i++) {\n                    if (callback.call(obj[i], i, obj[i]) === false) {\n                        break;\n                    }\n                }\n            } else {\n                for (i in obj) {\n                    if (callback.call(obj[i], i, obj[i]) === false) {\n                        break;\n                    }\n                }\n            }\n            return obj;\n        },\n        // Support: Android <=4.0 only\n        trim: function (text) {\n            return text == null ? '' : (text + '').replace(rtrim, '');\n        },\n        // results is for internal usage only\n        makeArray: function (arr, results) {\n            var ret = results || [];\n            if (arr != null) {\n                if (isArrayLike(Object(arr))) {\n                    jQuery.merge(ret, typeof arr === 'string' ? [arr] : arr);\n                } else {\n                    push.call(ret, arr);\n                }\n            }\n            return ret;\n        },\n        inArray: function (elem, arr, i) {\n            return arr == null ? -1 : indexOf.call(arr, elem, i);\n        },\n        // Support: Android <=4.0 only, PhantomJS 1 only\n        // push.apply(_, arraylike) throws on ancient WebKit\n        merge: function (first, second) {\n            var len = +second.length, j = 0, i = first.length;\n            for (; j < len; j++) {\n                first[i++] = second[j];\n            }\n            first.length = i;\n            return first;\n        },\n        grep: function (elems, callback, invert) {\n            var callbackInverse, matches = [], i = 0, length = elems.length, callbackExpect = !invert;\n            // Go through the array, only saving the items\n            // that pass the validator function\n            for (; i < length; i++) {\n                callbackInverse = !callback(elems[i], i);\n                if (callbackInverse !== callbackExpect) {\n                    matches.push(elems[i]);\n                }\n            }\n            return matches;\n        },\n        // arg is for internal usage only\n        map: function (elems, callback, arg) {\n            var length, value, i = 0, ret = [];\n            // Go through the array, translating each of the items to their new values\n            if (isArrayLike(elems)) {\n                length = elems.length;\n                for (; i < length; i++) {\n                    value = callback(elems[i], i, arg);\n                    if (value != null) {\n                        ret.push(value);\n                    }\n                }    // Go through every key on the object,\n            } else {\n                for (i in elems) {\n                    value = callback(elems[i], i, arg);\n                    if (value != null) {\n                        ret.push(value);\n                    }\n                }\n            }\n            // Flatten any nested arrays\n            return concat.apply([], ret);\n        },\n        // A global GUID counter for objects\n        guid: 1,\n        // Bind a function to a context, optionally partially applying any\n        // arguments.\n        proxy: function (fn, context) {\n            var tmp, args, proxy;\n            if (typeof context === 'string') {\n                tmp = fn[context];\n                context = fn;\n                fn = tmp;\n            }\n            // Quick check to determine if target is callable, in the spec\n            // this throws a TypeError, but we will just return undefined.\n            if (!jQuery.isFunction(fn)) {\n                return undefined;\n            }\n            // Simulated bind\n            args = slice.call(arguments, 2);\n            proxy = function () {\n                return fn.apply(context || this, args.concat(slice.call(arguments)));\n            };\n            // Set the guid of unique handler to the same of original handler, so it can be removed\n            proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n            return proxy;\n        },\n        now: Date.now,\n        // jQuery.support is not used in Core but other projects attach their\n        // properties to it so it needs to exist.\n        support: support\n    });\n    if (typeof Symbol === 'function') {\n        jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n    }\n    // Populate the class2type map\n    jQuery.each('Boolean Number String Function Array Date RegExp Object Error Symbol'.split(' '), function (i, name) {\n        class2type['[object ' + name + ']'] = name.toLowerCase();\n    });\n    function isArrayLike(obj) {\n        // Support: real iOS 8.2 only (not reproducible in simulator)\n        // `in` check used to prevent JIT error (gh-2145)\n        // hasOwn isn't used here due to false negatives\n        // regarding Nodelist length in IE\n        var length = !!obj && 'length' in obj && obj.length, type = jQuery.type(obj);\n        if (type === 'function' || jQuery.isWindow(obj)) {\n            return false;\n        }\n        return type === 'array' || length === 0 || typeof length === 'number' && length > 0 && length - 1 in obj;\n    }\n    var Sizzle = /*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n    function (window) {\n        var i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate,\n            // Local document vars\n            setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains,\n            // Instance-specific data\n            expando = 'sizzle' + 1 * new Date(), preferredDoc = window.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), sortOrder = function (a, b) {\n                if (a === b) {\n                    hasDuplicate = true;\n                }\n                return 0;\n            },\n            // Instance methods\n            hasOwn = {}.hasOwnProperty, arr = [], pop = arr.pop, push_native = arr.push, push = arr.push, slice = arr.slice,\n            // Use a stripped-down indexOf as it's faster than native\n            // https://jsperf.com/thor-indexof-vs-for/5\n            indexOf = function (list, elem) {\n                var i = 0, len = list.length;\n                for (; i < len; i++) {\n                    if (list[i] === elem) {\n                        return i;\n                    }\n                }\n                return -1;\n            }, booleans = 'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped',\n            // Regular expressions\n            // http://www.w3.org/TR/css3-selectors/#whitespace\n            whitespace = '[\\\\x20\\\\t\\\\r\\\\n\\\\f]',\n            // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n            identifier = '(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+',\n            // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n            attributes = '\\\\[' + whitespace + '*(' + identifier + ')(?:' + whitespace + // Operator (capture 2)\n            '*([*^$|!~]?=)' + whitespace + // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n            '*(?:\\'((?:\\\\\\\\.|[^\\\\\\\\\\'])*)\\'|\"((?:\\\\\\\\.|[^\\\\\\\\\"])*)\"|(' + identifier + '))|)' + whitespace + '*\\\\]', pseudos = ':(' + identifier + ')(?:\\\\((' + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n            // 1. quoted (capture 3; capture 4 or capture 5)\n            '(\\'((?:\\\\\\\\.|[^\\\\\\\\\\'])*)\\'|\"((?:\\\\\\\\.|[^\\\\\\\\\"])*)\")|' + // 2. simple (capture 6)\n            '((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|' + attributes + ')*)|' + // 3. anything else (capture 2)\n            '.*' + ')\\\\)|)',\n            // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n            rwhitespace = new RegExp(whitespace + '+', 'g'), rtrim = new RegExp('^' + whitespace + '+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)' + whitespace + '+$', 'g'), rcomma = new RegExp('^' + whitespace + '*,' + whitespace + '*'), rcombinators = new RegExp('^' + whitespace + '*([>+~]|' + whitespace + ')' + whitespace + '*'), rattributeQuotes = new RegExp('=' + whitespace + '*([^\\\\]\\'\"]*?)' + whitespace + '*\\\\]', 'g'), rpseudo = new RegExp(pseudos), ridentifier = new RegExp('^' + identifier + '$'), matchExpr = {\n                'ID': new RegExp('^#(' + identifier + ')'),\n                'CLASS': new RegExp('^\\\\.(' + identifier + ')'),\n                'TAG': new RegExp('^(' + identifier + '|[*])'),\n                'ATTR': new RegExp('^' + attributes),\n                'PSEUDO': new RegExp('^' + pseudos),\n                'CHILD': new RegExp('^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(' + whitespace + '*(even|odd|(([+-]|)(\\\\d*)n|)' + whitespace + '*(?:([+-]|)' + whitespace + '*(\\\\d+)|))' + whitespace + '*\\\\)|)', 'i'),\n                'bool': new RegExp('^(?:' + booleans + ')$', 'i'),\n                // For use in libraries implementing .is()\n                // We use this for POS matching in `select`\n                'needsContext': new RegExp('^' + whitespace + '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(' + whitespace + '*((?:-\\\\d)?\\\\d*)' + whitespace + '*\\\\)|)(?=[^-]|$)', 'i')\n            }, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\\d$/i, rnative = /^[^{]+\\{\\s*\\[native \\w/,\n            // Easily-parseable/retrievable ID or TAG or CLASS selectors\n            rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/, rsibling = /[+~]/,\n            // CSS escapes\n            // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n            runescape = new RegExp('\\\\\\\\([\\\\da-f]{1,6}' + whitespace + '?|(' + whitespace + ')|.)', 'ig'), funescape = function (_, escaped, escapedWhitespace) {\n                var high = '0x' + escaped - 65536;\n                // NaN means non-codepoint\n                // Support: Firefox<24\n                // Workaround erroneous numeric interpretation of +\"0x\"\n                return high !== high || escapedWhitespace ? escaped : high < 0 ? // BMP codepoint\n                String.fromCharCode(high + 65536) : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);\n            },\n            // CSS string/identifier serialization\n            // https://drafts.csswg.org/cssom/#common-serializing-idioms\n            rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g, fcssescape = function (ch, asCodePoint) {\n                if (asCodePoint) {\n                    // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n                    if (ch === '\\0') {\n                        return '\\uFFFD';\n                    }\n                    // Control characters and (dependent upon position) numbers get escaped as code points\n                    return ch.slice(0, -1) + '\\\\' + ch.charCodeAt(ch.length - 1).toString(16) + ' ';\n                }\n                // Other potentially-special ASCII characters get backslash-escaped\n                return '\\\\' + ch;\n            },\n            // Used for iframes\n            // See setDocument()\n            // Removing the function wrapper causes a \"Permission Denied\"\n            // error in IE\n            unloadHandler = function () {\n                setDocument();\n            }, disabledAncestor = addCombinator(function (elem) {\n                return elem.disabled === true && ('form' in elem || 'label' in elem);\n            }, {\n                dir: 'parentNode',\n                next: 'legend'\n            });\n        // Optimize for push.apply( _, NodeList )\n        try {\n            push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes);\n            // Support: Android<4.0\n            // Detect silently failing push.apply\n            arr[preferredDoc.childNodes.length].nodeType;\n        } catch (e) {\n            push = {\n                apply: arr.length ? // Leverage slice if possible\n                function (target, els) {\n                    push_native.apply(target, slice.call(els));\n                } : // Support: IE<9\n                // Otherwise append directly\n                function (target, els) {\n                    var j = target.length, i = 0;\n                    // Can't trust NodeList.length\n                    while (target[j++] = els[i++]) {\n                    }\n                    target.length = j - 1;\n                }\n            };\n        }\n        function Sizzle(selector, context, results, seed) {\n            var m, i, elem, nid, match, groups, newSelector, newContext = context && context.ownerDocument,\n                // nodeType defaults to 9, since context defaults to document\n                nodeType = context ? context.nodeType : 9;\n            results = results || [];\n            // Return early from calls with invalid selector or context\n            if (typeof selector !== 'string' || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n                return results;\n            }\n            // Try to shortcut find operations (as opposed to filters) in HTML documents\n            if (!seed) {\n                if ((context ? context.ownerDocument || context : preferredDoc) !== document) {\n                    setDocument(context);\n                }\n                context = context || document;\n                if (documentIsHTML) {\n                    // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n                    // (excepting DocumentFragment context, where the methods don't exist)\n                    if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n                        // ID selector\n                        if (m = match[1]) {\n                            // Document context\n                            if (nodeType === 9) {\n                                if (elem = context.getElementById(m)) {\n                                    // Support: IE, Opera, Webkit\n                                    // TODO: identify versions\n                                    // getElementById can match elements by name instead of ID\n                                    if (elem.id === m) {\n                                        results.push(elem);\n                                        return results;\n                                    }\n                                } else {\n                                    return results;\n                                }    // Element context\n                            } else {\n                                // Support: IE, Opera, Webkit\n                                // TODO: identify versions\n                                // getElementById can match elements by name instead of ID\n                                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                                    results.push(elem);\n                                    return results;\n                                }\n                            }    // Type selector\n                        } else if (match[2]) {\n                            push.apply(results, context.getElementsByTagName(selector));\n                            return results;    // Class selector\n                        } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n                            push.apply(results, context.getElementsByClassName(m));\n                            return results;\n                        }\n                    }\n                    // Take advantage of querySelectorAll\n                    if (support.qsa && !compilerCache[selector + ' '] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n                        if (nodeType !== 1) {\n                            newContext = context;\n                            newSelector = selector;    // qSA looks outside Element context, which is not what we want\n                                                       // Thanks to Andrew Dupont for this workaround technique\n                                                       // Support: IE <=8\n                                                       // Exclude object elements\n                        } else if (context.nodeName.toLowerCase() !== 'object') {\n                            // Capture the context ID, setting it first if necessary\n                            if (nid = context.getAttribute('id')) {\n                                nid = nid.replace(rcssescape, fcssescape);\n                            } else {\n                                context.setAttribute('id', nid = expando);\n                            }\n                            // Prefix every selector in the list\n                            groups = tokenize(selector);\n                            i = groups.length;\n                            while (i--) {\n                                groups[i] = '#' + nid + ' ' + toSelector(groups[i]);\n                            }\n                            newSelector = groups.join(',');\n                            // Expand context for sibling selectors\n                            newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n                        }\n                        if (newSelector) {\n                            try {\n                                push.apply(results, newContext.querySelectorAll(newSelector));\n                                return results;\n                            } catch (qsaError) {\n                            } finally {\n                                if (nid === expando) {\n                                    context.removeAttribute('id');\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            // All others\n            return select(selector.replace(rtrim, '$1'), context, results, seed);\n        }\n        /**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\n        function createCache() {\n            var keys = [];\n            function cache(key, value) {\n                // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n                if (keys.push(key + ' ') > Expr.cacheLength) {\n                    // Only keep the most recent entries\n                    delete cache[keys.shift()];\n                }\n                return cache[key + ' '] = value;\n            }\n            return cache;\n        }\n        /**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\n        function markFunction(fn) {\n            fn[expando] = true;\n            return fn;\n        }\n        /**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\n        function assert(fn) {\n            var el = document.createElement('fieldset');\n            try {\n                return !!fn(el);\n            } catch (e) {\n                return false;\n            } finally {\n                // Remove from its parent by default\n                if (el.parentNode) {\n                    el.parentNode.removeChild(el);\n                }\n                // release memory in IE\n                el = null;\n            }\n        }\n        /**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\n        function addHandle(attrs, handler) {\n            var arr = attrs.split('|'), i = arr.length;\n            while (i--) {\n                Expr.attrHandle[arr[i]] = handler;\n            }\n        }\n        /**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\n        function siblingCheck(a, b) {\n            var cur = b && a, diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex;\n            // Use IE sourceIndex if available on both nodes\n            if (diff) {\n                return diff;\n            }\n            // Check if b follows a\n            if (cur) {\n                while (cur = cur.nextSibling) {\n                    if (cur === b) {\n                        return -1;\n                    }\n                }\n            }\n            return a ? 1 : -1;\n        }\n        /**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\n        function createInputPseudo(type) {\n            return function (elem) {\n                var name = elem.nodeName.toLowerCase();\n                return name === 'input' && elem.type === type;\n            };\n        }\n        /**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\n        function createButtonPseudo(type) {\n            return function (elem) {\n                var name = elem.nodeName.toLowerCase();\n                return (name === 'input' || name === 'button') && elem.type === type;\n            };\n        }\n        /**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\n        function createDisabledPseudo(disabled) {\n            // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n            return function (elem) {\n                // Only certain elements can match :enabled or :disabled\n                // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n                // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n                if ('form' in elem) {\n                    // Check for inherited disabledness on relevant non-disabled elements:\n                    // * listed form-associated elements in a disabled fieldset\n                    //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n                    //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n                    // * option elements in a disabled optgroup\n                    //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n                    // All such elements have a \"form\" property.\n                    if (elem.parentNode && elem.disabled === false) {\n                        // Option elements defer to a parent optgroup if present\n                        if ('label' in elem) {\n                            if ('label' in elem.parentNode) {\n                                return elem.parentNode.disabled === disabled;\n                            } else {\n                                return elem.disabled === disabled;\n                            }\n                        }\n                        // Support: IE 6 - 11\n                        // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n                        return elem.isDisabled === disabled || // Where there is no isDisabled, check manually\n                        /* jshint -W018 */\n                        elem.isDisabled !== !disabled && disabledAncestor(elem) === disabled;\n                    }\n                    return elem.disabled === disabled;    // Try to winnow out elements that can't be disabled before trusting the disabled property.\n                                                          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n                                                          // even exist on them, let alone have a boolean value.\n                } else if ('label' in elem) {\n                    return elem.disabled === disabled;\n                }\n                // Remaining elements are neither :enabled nor :disabled\n                return false;\n            };\n        }\n        /**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\n        function createPositionalPseudo(fn) {\n            return markFunction(function (argument) {\n                argument = +argument;\n                return markFunction(function (seed, matches) {\n                    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;\n                    // Match elements found at the specified indexes\n                    while (i--) {\n                        if (seed[j = matchIndexes[i]]) {\n                            seed[j] = !(matches[j] = seed[j]);\n                        }\n                    }\n                });\n            });\n        }\n        /**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\n        function testContext(context) {\n            return context && typeof context.getElementsByTagName !== 'undefined' && context;\n        }\n        // Expose support vars for convenience\n        support = Sizzle.support = {};\n        /**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\n        isXML = Sizzle.isXML = function (elem) {\n            // documentElement is verified for cases where it doesn't yet exist\n            // (such as loading iframes in IE - #4833)\n            var documentElement = elem && (elem.ownerDocument || elem).documentElement;\n            return documentElement ? documentElement.nodeName !== 'HTML' : false;\n        };\n        /**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\n        setDocument = Sizzle.setDocument = function (node) {\n            var hasCompare, subWindow, doc = node ? node.ownerDocument || node : preferredDoc;\n            // Return early if doc is invalid or already selected\n            if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\n                return document;\n            }\n            // Update global variables\n            document = doc;\n            docElem = document.documentElement;\n            documentIsHTML = !isXML(document);\n            // Support: IE 9-11, Edge\n            // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n            if (preferredDoc !== document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n                // Support: IE 11, Edge\n                if (subWindow.addEventListener) {\n                    subWindow.addEventListener('unload', unloadHandler, false);    // Support: IE 9 - 10 only\n                } else if (subWindow.attachEvent) {\n                    subWindow.attachEvent('onunload', unloadHandler);\n                }\n            }\n            /* Attributes\n\t---------------------------------------------------------------------- */\n            // Support: IE<8\n            // Verify that getAttribute really returns attributes and not properties\n            // (excepting IE8 booleans)\n            support.attributes = assert(function (el) {\n                el.className = 'i';\n                return !el.getAttribute('className');\n            });\n            /* getElement(s)By*\n\t---------------------------------------------------------------------- */\n            // Check if getElementsByTagName(\"*\") returns only elements\n            support.getElementsByTagName = assert(function (el) {\n                el.appendChild(document.createComment(''));\n                return !el.getElementsByTagName('*').length;\n            });\n            // Support: IE<9\n            support.getElementsByClassName = rnative.test(document.getElementsByClassName);\n            // Support: IE<10\n            // Check if getElementById returns elements by name\n            // The broken getElementById methods don't pick up programmatically-set names,\n            // so use a roundabout getElementsByName test\n            support.getById = assert(function (el) {\n                docElem.appendChild(el).id = expando;\n                return !document.getElementsByName || !document.getElementsByName(expando).length;\n            });\n            // ID filter and find\n            if (support.getById) {\n                Expr.filter['ID'] = function (id) {\n                    var attrId = id.replace(runescape, funescape);\n                    return function (elem) {\n                        return elem.getAttribute('id') === attrId;\n                    };\n                };\n                Expr.find['ID'] = function (id, context) {\n                    if (typeof context.getElementById !== 'undefined' && documentIsHTML) {\n                        var elem = context.getElementById(id);\n                        return elem ? [elem] : [];\n                    }\n                };\n            } else {\n                Expr.filter['ID'] = function (id) {\n                    var attrId = id.replace(runescape, funescape);\n                    return function (elem) {\n                        var node = typeof elem.getAttributeNode !== 'undefined' && elem.getAttributeNode('id');\n                        return node && node.value === attrId;\n                    };\n                };\n                // Support: IE 6 - 7 only\n                // getElementById is not reliable as a find shortcut\n                Expr.find['ID'] = function (id, context) {\n                    if (typeof context.getElementById !== 'undefined' && documentIsHTML) {\n                        var node, i, elems, elem = context.getElementById(id);\n                        if (elem) {\n                            // Verify the id attribute\n                            node = elem.getAttributeNode('id');\n                            if (node && node.value === id) {\n                                return [elem];\n                            }\n                            // Fall back on getElementsByName\n                            elems = context.getElementsByName(id);\n                            i = 0;\n                            while (elem = elems[i++]) {\n                                node = elem.getAttributeNode('id');\n                                if (node && node.value === id) {\n                                    return [elem];\n                                }\n                            }\n                        }\n                        return [];\n                    }\n                };\n            }\n            // Tag\n            Expr.find['TAG'] = support.getElementsByTagName ? function (tag, context) {\n                if (typeof context.getElementsByTagName !== 'undefined') {\n                    return context.getElementsByTagName(tag);    // DocumentFragment nodes don't have gEBTN\n                } else if (support.qsa) {\n                    return context.querySelectorAll(tag);\n                }\n            } : function (tag, context) {\n                var elem, tmp = [], i = 0,\n                    // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n                    results = context.getElementsByTagName(tag);\n                // Filter out possible comments\n                if (tag === '*') {\n                    while (elem = results[i++]) {\n                        if (elem.nodeType === 1) {\n                            tmp.push(elem);\n                        }\n                    }\n                    return tmp;\n                }\n                return results;\n            };\n            // Class\n            Expr.find['CLASS'] = support.getElementsByClassName && function (className, context) {\n                if (typeof context.getElementsByClassName !== 'undefined' && documentIsHTML) {\n                    return context.getElementsByClassName(className);\n                }\n            };\n            /* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n            // QSA and matchesSelector support\n            // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n            rbuggyMatches = [];\n            // qSa(:focus) reports false when true (Chrome 21)\n            // We allow this because of a bug in IE8/9 that throws an error\n            // whenever `document.activeElement` is accessed on an iframe\n            // So, we allow :focus to pass through QSA all the time to avoid the IE error\n            // See https://bugs.jquery.com/ticket/13378\n            rbuggyQSA = [];\n            if (support.qsa = rnative.test(document.querySelectorAll)) {\n                // Build QSA regex\n                // Regex strategy adopted from Diego Perini\n                assert(function (el) {\n                    // Select is set to empty string on purpose\n                    // This is to test IE's treatment of not explicitly\n                    // setting a boolean content attribute,\n                    // since its presence should be enough\n                    // https://bugs.jquery.com/ticket/12359\n                    docElem.appendChild(el).innerHTML = '<a id=\\'' + expando + '\\'></a>' + '<select id=\\'' + expando + '-\\r\\\\\\' msallowcapture=\\'\\'>' + '<option selected=\\'\\'></option></select>';\n                    // Support: IE8, Opera 11-12.16\n                    // Nothing should be selected when empty strings follow ^= or $= or *=\n                    // The test attribute must be unknown in Opera but \"safe\" for WinRT\n                    // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n                    if (el.querySelectorAll('[msallowcapture^=\\'\\']').length) {\n                        rbuggyQSA.push('[*^$]=' + whitespace + '*(?:\\'\\'|\"\")');\n                    }\n                    // Support: IE8\n                    // Boolean attributes and \"value\" are not treated correctly\n                    if (!el.querySelectorAll('[selected]').length) {\n                        rbuggyQSA.push('\\\\[' + whitespace + '*(?:value|' + booleans + ')');\n                    }\n                    // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n                    if (!el.querySelectorAll('[id~=' + expando + '-]').length) {\n                        rbuggyQSA.push('~=');\n                    }\n                    // Webkit/Opera - :checked should return selected option elements\n                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n                    // IE8 throws error here and will not see later tests\n                    if (!el.querySelectorAll(':checked').length) {\n                        rbuggyQSA.push(':checked');\n                    }\n                    // Support: Safari 8+, iOS 8+\n                    // https://bugs.webkit.org/show_bug.cgi?id=136851\n                    // In-page `selector#id sibling-combinator selector` fails\n                    if (!el.querySelectorAll('a#' + expando + '+*').length) {\n                        rbuggyQSA.push('.#.+[+~]');\n                    }\n                });\n                assert(function (el) {\n                    el.innerHTML = '<a href=\\'\\' disabled=\\'disabled\\'></a>' + '<select disabled=\\'disabled\\'><option/></select>';\n                    // Support: Windows 8 Native Apps\n                    // The type and name attributes are restricted during .innerHTML assignment\n                    var input = document.createElement('input');\n                    input.setAttribute('type', 'hidden');\n                    el.appendChild(input).setAttribute('name', 'D');\n                    // Support: IE8\n                    // Enforce case-sensitivity of name attribute\n                    if (el.querySelectorAll('[name=d]').length) {\n                        rbuggyQSA.push('name' + whitespace + '*[*^$|!~]?=');\n                    }\n                    // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n                    // IE8 throws error here and will not see later tests\n                    if (el.querySelectorAll(':enabled').length !== 2) {\n                        rbuggyQSA.push(':enabled', ':disabled');\n                    }\n                    // Support: IE9-11+\n                    // IE's :disabled selector does not pick up the children of disabled fieldsets\n                    docElem.appendChild(el).disabled = true;\n                    if (el.querySelectorAll(':disabled').length !== 2) {\n                        rbuggyQSA.push(':enabled', ':disabled');\n                    }\n                    // Opera 10-11 does not throw on post-comma invalid pseudos\n                    el.querySelectorAll('*,:x');\n                    rbuggyQSA.push(',.*:');\n                });\n            }\n            if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n                assert(function (el) {\n                    // Check to see if it's possible to do matchesSelector\n                    // on a disconnected node (IE 9)\n                    support.disconnectedMatch = matches.call(el, '*');\n                    // This should fail with an exception\n                    // Gecko does not error, returns false instead\n                    matches.call(el, '[s!=\\'\\']:x');\n                    rbuggyMatches.push('!=', pseudos);\n                });\n            }\n            rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join('|'));\n            rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join('|'));\n            /* Contains\n\t---------------------------------------------------------------------- */\n            hasCompare = rnative.test(docElem.compareDocumentPosition);\n            // Element contains another\n            // Purposefully self-exclusive\n            // As in, an element does not contain itself\n            contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n                var adown = a.nodeType === 9 ? a.documentElement : a, bup = b && b.parentNode;\n                return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n            } : function (a, b) {\n                if (b) {\n                    while (b = b.parentNode) {\n                        if (b === a) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            };\n            /* Sorting\n\t---------------------------------------------------------------------- */\n            // Document order sorting\n            sortOrder = hasCompare ? function (a, b) {\n                // Flag for duplicate removal\n                if (a === b) {\n                    hasDuplicate = true;\n                    return 0;\n                }\n                // Sort on method existence if only one input has compareDocumentPosition\n                var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n                if (compare) {\n                    return compare;\n                }\n                // Calculate position if both inputs belong to the same document\n                compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n                1;\n                // Disconnected nodes\n                if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n                    // Choose the first element that is related to our preferred document\n                    if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {\n                        return -1;\n                    }\n                    if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {\n                        return 1;\n                    }\n                    // Maintain original order\n                    return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n                }\n                return compare & 4 ? -1 : 1;\n            } : function (a, b) {\n                // Exit early if the nodes are identical\n                if (a === b) {\n                    hasDuplicate = true;\n                    return 0;\n                }\n                var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [a], bp = [b];\n                // Parentless nodes are either documents or disconnected\n                if (!aup || !bup) {\n                    return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;    // If the nodes are siblings, we can do a quick check\n                } else if (aup === bup) {\n                    return siblingCheck(a, b);\n                }\n                // Otherwise we need full lists of their ancestors for comparison\n                cur = a;\n                while (cur = cur.parentNode) {\n                    ap.unshift(cur);\n                }\n                cur = b;\n                while (cur = cur.parentNode) {\n                    bp.unshift(cur);\n                }\n                // Walk down the tree looking for a discrepancy\n                while (ap[i] === bp[i]) {\n                    i++;\n                }\n                return i ? // Do a sibling check if the nodes have a common ancestor\n                siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n                ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;\n            };\n            return document;\n        };\n        Sizzle.matches = function (expr, elements) {\n            return Sizzle(expr, null, null, elements);\n        };\n        Sizzle.matchesSelector = function (elem, expr) {\n            // Set document vars if needed\n            if ((elem.ownerDocument || elem) !== document) {\n                setDocument(elem);\n            }\n            // Make sure that attribute selectors are quoted\n            expr = expr.replace(rattributeQuotes, '=\\'$1\\']');\n            if (support.matchesSelector && documentIsHTML && !compilerCache[expr + ' '] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n                try {\n                    var ret = matches.call(elem, expr);\n                    // IE 9's matchesSelector returns false on disconnected nodes\n                    if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n                        // fragment in IE 9\n                        elem.document && elem.document.nodeType !== 11) {\n                        return ret;\n                    }\n                } catch (e) {\n                }\n            }\n            return Sizzle(expr, document, null, [elem]).length > 0;\n        };\n        Sizzle.contains = function (context, elem) {\n            // Set document vars if needed\n            if ((context.ownerDocument || context) !== document) {\n                setDocument(context);\n            }\n            return contains(context, elem);\n        };\n        Sizzle.attr = function (elem, name) {\n            // Set document vars if needed\n            if ((elem.ownerDocument || elem) !== document) {\n                setDocument(elem);\n            }\n            var fn = Expr.attrHandle[name.toLowerCase()],\n                // Don't get fooled by Object.prototype properties (jQuery #13807)\n                val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n            return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        };\n        Sizzle.escape = function (sel) {\n            return (sel + '').replace(rcssescape, fcssescape);\n        };\n        Sizzle.error = function (msg) {\n            throw new Error('Syntax error, unrecognized expression: ' + msg);\n        };\n        /**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\n        Sizzle.uniqueSort = function (results) {\n            var elem, duplicates = [], j = 0, i = 0;\n            // Unless we *know* we can detect duplicates, assume their presence\n            hasDuplicate = !support.detectDuplicates;\n            sortInput = !support.sortStable && results.slice(0);\n            results.sort(sortOrder);\n            if (hasDuplicate) {\n                while (elem = results[i++]) {\n                    if (elem === results[i]) {\n                        j = duplicates.push(i);\n                    }\n                }\n                while (j--) {\n                    results.splice(duplicates[j], 1);\n                }\n            }\n            // Clear input after sorting to release objects\n            // See https://github.com/jquery/sizzle/pull/225\n            sortInput = null;\n            return results;\n        };\n        /**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\n        getText = Sizzle.getText = function (elem) {\n            var node, ret = '', i = 0, nodeType = elem.nodeType;\n            if (!nodeType) {\n                // If no nodeType, this is expected to be an array\n                while (node = elem[i++]) {\n                    // Do not traverse comment nodes\n                    ret += getText(node);\n                }\n            } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n                // Use textContent for elements\n                // innerText usage removed for consistency of new lines (jQuery #11153)\n                if (typeof elem.textContent === 'string') {\n                    return elem.textContent;\n                } else {\n                    // Traverse its children\n                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n                        ret += getText(elem);\n                    }\n                }\n            } else if (nodeType === 3 || nodeType === 4) {\n                return elem.nodeValue;\n            }\n            // Do not include comment or processing instruction nodes\n            return ret;\n        };\n        Expr = Sizzle.selectors = {\n            // Can be adjusted by the user\n            cacheLength: 50,\n            createPseudo: markFunction,\n            match: matchExpr,\n            attrHandle: {},\n            find: {},\n            relative: {\n                '>': {\n                    dir: 'parentNode',\n                    first: true\n                },\n                ' ': { dir: 'parentNode' },\n                '+': {\n                    dir: 'previousSibling',\n                    first: true\n                },\n                '~': { dir: 'previousSibling' }\n            },\n            preFilter: {\n                'ATTR': function (match) {\n                    match[1] = match[1].replace(runescape, funescape);\n                    // Move the given value to match[3] whether quoted or unquoted\n                    match[3] = (match[3] || match[4] || match[5] || '').replace(runescape, funescape);\n                    if (match[2] === '~=') {\n                        match[3] = ' ' + match[3] + ' ';\n                    }\n                    return match.slice(0, 4);\n                },\n                'CHILD': function (match) {\n                    /* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n                    match[1] = match[1].toLowerCase();\n                    if (match[1].slice(0, 3) === 'nth') {\n                        // nth-* requires argument\n                        if (!match[3]) {\n                            Sizzle.error(match[0]);\n                        }\n                        // numeric x and y parameters for Expr.filter.CHILD\n                        // remember that false/true cast respectively to 0/1\n                        match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === 'even' || match[3] === 'odd'));\n                        match[5] = +(match[7] + match[8] || match[3] === 'odd');    // other types prohibit arguments\n                    } else if (match[3]) {\n                        Sizzle.error(match[0]);\n                    }\n                    return match;\n                },\n                'PSEUDO': function (match) {\n                    var excess, unquoted = !match[6] && match[2];\n                    if (matchExpr['CHILD'].test(match[0])) {\n                        return null;\n                    }\n                    // Accept quoted arguments as-is\n                    if (match[3]) {\n                        match[2] = match[4] || match[5] || '';    // Strip excess characters from unquoted arguments\n                    } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(')', unquoted.length - excess) - unquoted.length)) {\n                        // excess is a negative index\n                        match[0] = match[0].slice(0, excess);\n                        match[2] = unquoted.slice(0, excess);\n                    }\n                    // Return only captures needed by the pseudo filter method (type and argument)\n                    return match.slice(0, 3);\n                }\n            },\n            filter: {\n                'TAG': function (nodeNameSelector) {\n                    var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n                    return nodeNameSelector === '*' ? function () {\n                        return true;\n                    } : function (elem) {\n                        return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n                    };\n                },\n                'CLASS': function (className) {\n                    var pattern = classCache[className + ' '];\n                    return pattern || (pattern = new RegExp('(^|' + whitespace + ')' + className + '(' + whitespace + '|$)')) && classCache(className, function (elem) {\n                        return pattern.test(typeof elem.className === 'string' && elem.className || typeof elem.getAttribute !== 'undefined' && elem.getAttribute('class') || '');\n                    });\n                },\n                'ATTR': function (name, operator, check) {\n                    return function (elem) {\n                        var result = Sizzle.attr(elem, name);\n                        if (result == null) {\n                            return operator === '!=';\n                        }\n                        if (!operator) {\n                            return true;\n                        }\n                        result += '';\n                        return operator === '=' ? result === check : operator === '!=' ? result !== check : operator === '^=' ? check && result.indexOf(check) === 0 : operator === '*=' ? check && result.indexOf(check) > -1 : operator === '$=' ? check && result.slice(-check.length) === check : operator === '~=' ? (' ' + result.replace(rwhitespace, ' ') + ' ').indexOf(check) > -1 : operator === '|=' ? result === check || result.slice(0, check.length + 1) === check + '-' : false;\n                    };\n                },\n                'CHILD': function (type, what, argument, first, last) {\n                    var simple = type.slice(0, 3) !== 'nth', forward = type.slice(-4) !== 'last', ofType = what === 'of-type';\n                    return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n                    function (elem) {\n                        return !!elem.parentNode;\n                    } : function (elem, context, xml) {\n                        var cache, uniqueCache, outerCache, node, nodeIndex, start, dir = simple !== forward ? 'nextSibling' : 'previousSibling', parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;\n                        if (parent) {\n                            // :(first|last|only)-(child|of-type)\n                            if (simple) {\n                                while (dir) {\n                                    node = elem;\n                                    while (node = node[dir]) {\n                                        if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                                            return false;\n                                        }\n                                    }\n                                    // Reverse direction for :only-* (if we haven't yet done so)\n                                    start = dir = type === 'only' && !start && 'nextSibling';\n                                }\n                                return true;\n                            }\n                            start = [forward ? parent.firstChild : parent.lastChild];\n                            // non-xml :nth-child(...) stores cache data on `parent`\n                            if (forward && useCache) {\n                                // Seek `elem` from a previously-cached index\n                                // ...in a gzip-friendly way\n                                node = parent;\n                                outerCache = node[expando] || (node[expando] = {});\n                                // Support: IE <9 only\n                                // Defend against cloned attroperties (jQuery gh-1709)\n                                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                                cache = uniqueCache[type] || [];\n                                nodeIndex = cache[0] === dirruns && cache[1];\n                                diff = nodeIndex && cache[2];\n                                node = nodeIndex && parent.childNodes[nodeIndex];\n                                while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                                    // When found, cache indexes on `parent` and break\n                                    if (node.nodeType === 1 && ++diff && node === elem) {\n                                        uniqueCache[type] = [\n                                            dirruns,\n                                            nodeIndex,\n                                            diff\n                                        ];\n                                        break;\n                                    }\n                                }\n                            } else {\n                                // Use previously-cached element index if available\n                                if (useCache) {\n                                    // ...in a gzip-friendly way\n                                    node = elem;\n                                    outerCache = node[expando] || (node[expando] = {});\n                                    // Support: IE <9 only\n                                    // Defend against cloned attroperties (jQuery gh-1709)\n                                    uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                                    cache = uniqueCache[type] || [];\n                                    nodeIndex = cache[0] === dirruns && cache[1];\n                                    diff = nodeIndex;\n                                }\n                                // xml :nth-child(...)\n                                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n                                if (diff === false) {\n                                    // Use the same loop as above to seek `elem` from the start\n                                    while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                                        if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                                            // Cache the index of each encountered element\n                                            if (useCache) {\n                                                outerCache = node[expando] || (node[expando] = {});\n                                                // Support: IE <9 only\n                                                // Defend against cloned attroperties (jQuery gh-1709)\n                                                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                                                uniqueCache[type] = [\n                                                    dirruns,\n                                                    diff\n                                                ];\n                                            }\n                                            if (node === elem) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            // Incorporate the offset, then check against cycle size\n                            diff -= last;\n                            return diff === first || diff % first === 0 && diff / first >= 0;\n                        }\n                    };\n                },\n                'PSEUDO': function (pseudo, argument) {\n                    // pseudo-class names are case-insensitive\n                    // http://www.w3.org/TR/selectors/#pseudo-classes\n                    // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n                    // Remember that setFilters inherits from pseudos\n                    var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error('unsupported pseudo: ' + pseudo);\n                    // The user may use createPseudo to indicate that\n                    // arguments are needed to create the filter function\n                    // just as Sizzle does\n                    if (fn[expando]) {\n                        return fn(argument);\n                    }\n                    // But maintain support for old signatures\n                    if (fn.length > 1) {\n                        args = [\n                            pseudo,\n                            pseudo,\n                            '',\n                            argument\n                        ];\n                        return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n                            var idx, matched = fn(seed, argument), i = matched.length;\n                            while (i--) {\n                                idx = indexOf(seed, matched[i]);\n                                seed[idx] = !(matches[idx] = matched[i]);\n                            }\n                        }) : function (elem) {\n                            return fn(elem, 0, args);\n                        };\n                    }\n                    return fn;\n                }\n            },\n            pseudos: {\n                // Potentially complex pseudos\n                'not': markFunction(function (selector) {\n                    // Trim the selector passed to compile\n                    // to avoid treating leading and trailing\n                    // spaces as combinators\n                    var input = [], results = [], matcher = compile(selector.replace(rtrim, '$1'));\n                    return matcher[expando] ? markFunction(function (seed, matches, context, xml) {\n                        var elem, unmatched = matcher(seed, null, xml, []), i = seed.length;\n                        // Match elements unmatched by `matcher`\n                        while (i--) {\n                            if (elem = unmatched[i]) {\n                                seed[i] = !(matches[i] = elem);\n                            }\n                        }\n                    }) : function (elem, context, xml) {\n                        input[0] = elem;\n                        matcher(input, null, xml, results);\n                        // Don't keep the element (issue #299)\n                        input[0] = null;\n                        return !results.pop();\n                    };\n                }),\n                'has': markFunction(function (selector) {\n                    return function (elem) {\n                        return Sizzle(selector, elem).length > 0;\n                    };\n                }),\n                'contains': markFunction(function (text) {\n                    text = text.replace(runescape, funescape);\n                    return function (elem) {\n                        return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n                    };\n                }),\n                // \"Whether an element is represented by a :lang() selector\n                // is based solely on the element's language value\n                // being equal to the identifier C,\n                // or beginning with the identifier C immediately followed by \"-\".\n                // The matching of C against the element's language value is performed case-insensitively.\n                // The identifier C does not have to be a valid language name.\"\n                // http://www.w3.org/TR/selectors/#lang-pseudo\n                'lang': markFunction(function (lang) {\n                    // lang value must be a valid identifier\n                    if (!ridentifier.test(lang || '')) {\n                        Sizzle.error('unsupported lang: ' + lang);\n                    }\n                    lang = lang.replace(runescape, funescape).toLowerCase();\n                    return function (elem) {\n                        var elemLang;\n                        do {\n                            if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute('xml:lang') || elem.getAttribute('lang')) {\n                                elemLang = elemLang.toLowerCase();\n                                return elemLang === lang || elemLang.indexOf(lang + '-') === 0;\n                            }\n                        } while ((elem = elem.parentNode) && elem.nodeType === 1);\n                        return false;\n                    };\n                }),\n                // Miscellaneous\n                'target': function (elem) {\n                    var hash = window.location && window.location.hash;\n                    return hash && hash.slice(1) === elem.id;\n                },\n                'root': function (elem) {\n                    return elem === docElem;\n                },\n                'focus': function (elem) {\n                    return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n                },\n                // Boolean properties\n                'enabled': createDisabledPseudo(false),\n                'disabled': createDisabledPseudo(true),\n                'checked': function (elem) {\n                    // In CSS3, :checked should return both checked and selected elements\n                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n                    var nodeName = elem.nodeName.toLowerCase();\n                    return nodeName === 'input' && !!elem.checked || nodeName === 'option' && !!elem.selected;\n                },\n                'selected': function (elem) {\n                    // Accessing this property makes selected-by-default\n                    // options in Safari work properly\n                    if (elem.parentNode) {\n                        elem.parentNode.selectedIndex;\n                    }\n                    return elem.selected === true;\n                },\n                // Contents\n                'empty': function (elem) {\n                    // http://www.w3.org/TR/selectors/#empty-pseudo\n                    // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n                    //   but not by others (comment: 8; processing instruction: 7; etc.)\n                    // nodeType < 6 works because attributes (2) do not appear as children\n                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n                        if (elem.nodeType < 6) {\n                            return false;\n                        }\n                    }\n                    return true;\n                },\n                'parent': function (elem) {\n                    return !Expr.pseudos['empty'](elem);\n                },\n                // Element/input types\n                'header': function (elem) {\n                    return rheader.test(elem.nodeName);\n                },\n                'input': function (elem) {\n                    return rinputs.test(elem.nodeName);\n                },\n                'button': function (elem) {\n                    var name = elem.nodeName.toLowerCase();\n                    return name === 'input' && elem.type === 'button' || name === 'button';\n                },\n                'text': function (elem) {\n                    var attr;\n                    return elem.nodeName.toLowerCase() === 'input' && elem.type === 'text' && ((attr = elem.getAttribute('type')) == null || attr.toLowerCase() === 'text');\n                },\n                // Position-in-collection\n                'first': createPositionalPseudo(function () {\n                    return [0];\n                }),\n                'last': createPositionalPseudo(function (matchIndexes, length) {\n                    return [length - 1];\n                }),\n                'eq': createPositionalPseudo(function (matchIndexes, length, argument) {\n                    return [argument < 0 ? argument + length : argument];\n                }),\n                'even': createPositionalPseudo(function (matchIndexes, length) {\n                    var i = 0;\n                    for (; i < length; i += 2) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                }),\n                'odd': createPositionalPseudo(function (matchIndexes, length) {\n                    var i = 1;\n                    for (; i < length; i += 2) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                }),\n                'lt': createPositionalPseudo(function (matchIndexes, length, argument) {\n                    var i = argument < 0 ? argument + length : argument;\n                    for (; --i >= 0;) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                }),\n                'gt': createPositionalPseudo(function (matchIndexes, length, argument) {\n                    var i = argument < 0 ? argument + length : argument;\n                    for (; ++i < length;) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                })\n            }\n        };\n        Expr.pseudos['nth'] = Expr.pseudos['eq'];\n        // Add button/input type pseudos\n        for (i in {\n                radio: true,\n                checkbox: true,\n                file: true,\n                password: true,\n                image: true\n            }) {\n            Expr.pseudos[i] = createInputPseudo(i);\n        }\n        for (i in {\n                submit: true,\n                reset: true\n            }) {\n            Expr.pseudos[i] = createButtonPseudo(i);\n        }\n        // Easy API for creating new setFilters\n        function setFilters() {\n        }\n        setFilters.prototype = Expr.filters = Expr.pseudos;\n        Expr.setFilters = new setFilters();\n        tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n            var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + ' '];\n            if (cached) {\n                return parseOnly ? 0 : cached.slice(0);\n            }\n            soFar = selector;\n            groups = [];\n            preFilters = Expr.preFilter;\n            while (soFar) {\n                // Comma and first run\n                if (!matched || (match = rcomma.exec(soFar))) {\n                    if (match) {\n                        // Don't consume trailing commas as valid\n                        soFar = soFar.slice(match[0].length) || soFar;\n                    }\n                    groups.push(tokens = []);\n                }\n                matched = false;\n                // Combinators\n                if (match = rcombinators.exec(soFar)) {\n                    matched = match.shift();\n                    tokens.push({\n                        value: matched,\n                        // Cast descendant combinators to space\n                        type: match[0].replace(rtrim, ' ')\n                    });\n                    soFar = soFar.slice(matched.length);\n                }\n                // Filters\n                for (type in Expr.filter) {\n                    if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n                        matched = match.shift();\n                        tokens.push({\n                            value: matched,\n                            type: type,\n                            matches: match\n                        });\n                        soFar = soFar.slice(matched.length);\n                    }\n                }\n                if (!matched) {\n                    break;\n                }\n            }\n            // Return the length of the invalid excess\n            // if we're just parsing\n            // Otherwise, throw an error or return tokens\n            return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n            tokenCache(selector, groups).slice(0);\n        };\n        function toSelector(tokens) {\n            var i = 0, len = tokens.length, selector = '';\n            for (; i < len; i++) {\n                selector += tokens[i].value;\n            }\n            return selector;\n        }\n        function addCombinator(matcher, combinator, base) {\n            var dir = combinator.dir, skip = combinator.next, key = skip || dir, checkNonElements = base && key === 'parentNode', doneName = done++;\n            return combinator.first ? // Check against closest ancestor/preceding element\n            function (elem, context, xml) {\n                while (elem = elem[dir]) {\n                    if (elem.nodeType === 1 || checkNonElements) {\n                        return matcher(elem, context, xml);\n                    }\n                }\n                return false;\n            } : // Check against all ancestor/preceding elements\n            function (elem, context, xml) {\n                var oldCache, uniqueCache, outerCache, newCache = [\n                        dirruns,\n                        doneName\n                    ];\n                // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n                if (xml) {\n                    while (elem = elem[dir]) {\n                        if (elem.nodeType === 1 || checkNonElements) {\n                            if (matcher(elem, context, xml)) {\n                                return true;\n                            }\n                        }\n                    }\n                } else {\n                    while (elem = elem[dir]) {\n                        if (elem.nodeType === 1 || checkNonElements) {\n                            outerCache = elem[expando] || (elem[expando] = {});\n                            // Support: IE <9 only\n                            // Defend against cloned attroperties (jQuery gh-1709)\n                            uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n                            if (skip && skip === elem.nodeName.toLowerCase()) {\n                                elem = elem[dir] || elem;\n                            } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                                // Assign to newCache so results back-propagate to previous elements\n                                return newCache[2] = oldCache[2];\n                            } else {\n                                // Reuse newcache so results back-propagate to previous elements\n                                uniqueCache[key] = newCache;\n                                // A match means we're done; a fail means we have to keep checking\n                                if (newCache[2] = matcher(elem, context, xml)) {\n                                    return true;\n                                }\n                            }\n                        }\n                    }\n                }\n                return false;\n            };\n        }\n        function elementMatcher(matchers) {\n            return matchers.length > 1 ? function (elem, context, xml) {\n                var i = matchers.length;\n                while (i--) {\n                    if (!matchers[i](elem, context, xml)) {\n                        return false;\n                    }\n                }\n                return true;\n            } : matchers[0];\n        }\n        function multipleContexts(selector, contexts, results) {\n            var i = 0, len = contexts.length;\n            for (; i < len; i++) {\n                Sizzle(selector, contexts[i], results);\n            }\n            return results;\n        }\n        function condense(unmatched, map, filter, context, xml) {\n            var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = map != null;\n            for (; i < len; i++) {\n                if (elem = unmatched[i]) {\n                    if (!filter || filter(elem, context, xml)) {\n                        newUnmatched.push(elem);\n                        if (mapped) {\n                            map.push(i);\n                        }\n                    }\n                }\n            }\n            return newUnmatched;\n        }\n        function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n            if (postFilter && !postFilter[expando]) {\n                postFilter = setMatcher(postFilter);\n            }\n            if (postFinder && !postFinder[expando]) {\n                postFinder = setMatcher(postFinder, postSelector);\n            }\n            return markFunction(function (seed, results, context, xml) {\n                var temp, i, elem, preMap = [], postMap = [], preexisting = results.length,\n                    // Get initial elements from seed or context\n                    elems = seed || multipleContexts(selector || '*', context.nodeType ? [context] : context, []),\n                    // Prefilter to get matcher input, preserving a map for seed-results synchronization\n                    matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems, matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n                    postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n                    [] : // ...otherwise use results directly\n                    results : matcherIn;\n                // Find primary matches\n                if (matcher) {\n                    matcher(matcherIn, matcherOut, context, xml);\n                }\n                // Apply postFilter\n                if (postFilter) {\n                    temp = condense(matcherOut, postMap);\n                    postFilter(temp, [], context, xml);\n                    // Un-match failing elements by moving them back to matcherIn\n                    i = temp.length;\n                    while (i--) {\n                        if (elem = temp[i]) {\n                            matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n                        }\n                    }\n                }\n                if (seed) {\n                    if (postFinder || preFilter) {\n                        if (postFinder) {\n                            // Get the final matcherOut by condensing this intermediate into postFinder contexts\n                            temp = [];\n                            i = matcherOut.length;\n                            while (i--) {\n                                if (elem = matcherOut[i]) {\n                                    // Restore matcherIn since elem is not yet a final match\n                                    temp.push(matcherIn[i] = elem);\n                                }\n                            }\n                            postFinder(null, matcherOut = [], temp, xml);\n                        }\n                        // Move matched elements from seed to results to keep them synchronized\n                        i = matcherOut.length;\n                        while (i--) {\n                            if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                                seed[temp] = !(results[temp] = elem);\n                            }\n                        }\n                    }    // Add elements to results, through postFinder if defined\n                } else {\n                    matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n                    if (postFinder) {\n                        postFinder(null, results, matcherOut, xml);\n                    } else {\n                        push.apply(results, matcherOut);\n                    }\n                }\n            });\n        }\n        function matcherFromTokens(tokens) {\n            var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[' '], i = leadingRelative ? 1 : 0,\n                // The foundational matcher ensures that elements are reachable from top-level context(s)\n                matchContext = addCombinator(function (elem) {\n                    return elem === checkContext;\n                }, implicitRelative, true), matchAnyContext = addCombinator(function (elem) {\n                    return indexOf(checkContext, elem) > -1;\n                }, implicitRelative, true), matchers = [function (elem, context, xml) {\n                        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));\n                        // Avoid hanging onto element (issue #299)\n                        checkContext = null;\n                        return ret;\n                    }];\n            for (; i < len; i++) {\n                if (matcher = Expr.relative[tokens[i].type]) {\n                    matchers = [addCombinator(elementMatcher(matchers), matcher)];\n                } else {\n                    matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);\n                    // Return special upon seeing a positional matcher\n                    if (matcher[expando]) {\n                        // Find the next relative operator (if any) for proper handling\n                        j = ++i;\n                        for (; j < len; j++) {\n                            if (Expr.relative[tokens[j].type]) {\n                                break;\n                            }\n                        }\n                        return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n                        tokens.slice(0, i - 1).concat({ value: tokens[i - 2].type === ' ' ? '*' : '' })).replace(rtrim, '$1'), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n                    }\n                    matchers.push(matcher);\n                }\n            }\n            return elementMatcher(matchers);\n        }\n        function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n            var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function (seed, context, xml, results, outermost) {\n                    var elem, j, matcher, matchedCount = 0, i = '0', unmatched = seed && [], setMatched = [], contextBackup = outermostContext,\n                        // We must always have either seed elements or outermost context\n                        elems = seed || byElement && Expr.find['TAG']('*', outermost),\n                        // Use integer dirruns iff this is the outermost matcher\n                        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;\n                    if (outermost) {\n                        outermostContext = context === document || context || outermost;\n                    }\n                    // Add elements passing elementMatchers directly to results\n                    // Support: IE<9, Safari\n                    // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n                    for (; i !== len && (elem = elems[i]) != null; i++) {\n                        if (byElement && elem) {\n                            j = 0;\n                            if (!context && elem.ownerDocument !== document) {\n                                setDocument(elem);\n                                xml = !documentIsHTML;\n                            }\n                            while (matcher = elementMatchers[j++]) {\n                                if (matcher(elem, context || document, xml)) {\n                                    results.push(elem);\n                                    break;\n                                }\n                            }\n                            if (outermost) {\n                                dirruns = dirrunsUnique;\n                            }\n                        }\n                        // Track unmatched elements for set filters\n                        if (bySet) {\n                            // They will have gone through all possible matchers\n                            if (elem = !matcher && elem) {\n                                matchedCount--;\n                            }\n                            // Lengthen the array for every element, matched or not\n                            if (seed) {\n                                unmatched.push(elem);\n                            }\n                        }\n                    }\n                    // `i` is now the count of elements visited above, and adding it to `matchedCount`\n                    // makes the latter nonnegative.\n                    matchedCount += i;\n                    // Apply set filters to unmatched elements\n                    // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n                    // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n                    // no element matchers and no seed.\n                    // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n                    // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n                    // numerically zero.\n                    if (bySet && i !== matchedCount) {\n                        j = 0;\n                        while (matcher = setMatchers[j++]) {\n                            matcher(unmatched, setMatched, context, xml);\n                        }\n                        if (seed) {\n                            // Reintegrate element matches to eliminate the need for sorting\n                            if (matchedCount > 0) {\n                                while (i--) {\n                                    if (!(unmatched[i] || setMatched[i])) {\n                                        setMatched[i] = pop.call(results);\n                                    }\n                                }\n                            }\n                            // Discard index placeholder values to get only actual matches\n                            setMatched = condense(setMatched);\n                        }\n                        // Add matches to results\n                        push.apply(results, setMatched);\n                        // Seedless set matches succeeding multiple successful matchers stipulate sorting\n                        if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n                            Sizzle.uniqueSort(results);\n                        }\n                    }\n                    // Override manipulation of globals by nested matchers\n                    if (outermost) {\n                        dirruns = dirrunsUnique;\n                        outermostContext = contextBackup;\n                    }\n                    return unmatched;\n                };\n            return bySet ? markFunction(superMatcher) : superMatcher;\n        }\n        compile = Sizzle.compile = function (selector, match) {\n            var i, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + ' '];\n            if (!cached) {\n                // Generate a function of recursive functions that can be used to check each element\n                if (!match) {\n                    match = tokenize(selector);\n                }\n                i = match.length;\n                while (i--) {\n                    cached = matcherFromTokens(match[i]);\n                    if (cached[expando]) {\n                        setMatchers.push(cached);\n                    } else {\n                        elementMatchers.push(cached);\n                    }\n                }\n                // Cache the compiled function\n                cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));\n                // Save selector and tokenization\n                cached.selector = selector;\n            }\n            return cached;\n        };\n        /**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\n        select = Sizzle.select = function (selector, context, results, seed) {\n            var i, tokens, token, type, find, compiled = typeof selector === 'function' && selector, match = !seed && tokenize(selector = compiled.selector || selector);\n            results = results || [];\n            // Try to minimize operations if there is only one selector in the list and no seed\n            // (the latter of which guarantees us context)\n            if (match.length === 1) {\n                // Reduce context if the leading compound selector is an ID\n                tokens = match[0] = match[0].slice(0);\n                if (tokens.length > 2 && (token = tokens[0]).type === 'ID' && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n                    context = (Expr.find['ID'](token.matches[0].replace(runescape, funescape), context) || [])[0];\n                    if (!context) {\n                        return results;    // Precompiled matchers will still verify ancestry, so step up a level\n                    } else if (compiled) {\n                        context = context.parentNode;\n                    }\n                    selector = selector.slice(tokens.shift().value.length);\n                }\n                // Fetch a seed set for right-to-left matching\n                i = matchExpr['needsContext'].test(selector) ? 0 : tokens.length;\n                while (i--) {\n                    token = tokens[i];\n                    // Abort if we hit a combinator\n                    if (Expr.relative[type = token.type]) {\n                        break;\n                    }\n                    if (find = Expr.find[type]) {\n                        // Search, expanding context for leading sibling combinators\n                        if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n                            // If seed is empty or no tokens remain, we can return early\n                            tokens.splice(i, 1);\n                            selector = seed.length && toSelector(tokens);\n                            if (!selector) {\n                                push.apply(results, seed);\n                                return results;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // Compile and execute a filtering function if one is not provided\n            // Provide `match` to avoid retokenization if we modified the selector above\n            (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n            return results;\n        };\n        // One-time assignments\n        // Sort stability\n        support.sortStable = expando.split('').sort(sortOrder).join('') === expando;\n        // Support: Chrome 14-35+\n        // Always assume duplicates if they aren't passed to the comparison function\n        support.detectDuplicates = !!hasDuplicate;\n        // Initialize against the default document\n        setDocument();\n        // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n        // Detached nodes confoundingly follow *each other*\n        support.sortDetached = assert(function (el) {\n            // Should return 1, but returns 4 (following)\n            return el.compareDocumentPosition(document.createElement('fieldset')) & 1;\n        });\n        // Support: IE<8\n        // Prevent attribute/property \"interpolation\"\n        // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n        if (!assert(function (el) {\n                el.innerHTML = '<a href=\\'#\\'></a>';\n                return el.firstChild.getAttribute('href') === '#';\n            })) {\n            addHandle('type|href|height|width', function (elem, name, isXML) {\n                if (!isXML) {\n                    return elem.getAttribute(name, name.toLowerCase() === 'type' ? 1 : 2);\n                }\n            });\n        }\n        // Support: IE<9\n        // Use defaultValue in place of getAttribute(\"value\")\n        if (!support.attributes || !assert(function (el) {\n                el.innerHTML = '<input/>';\n                el.firstChild.setAttribute('value', '');\n                return el.firstChild.getAttribute('value') === '';\n            })) {\n            addHandle('value', function (elem, name, isXML) {\n                if (!isXML && elem.nodeName.toLowerCase() === 'input') {\n                    return elem.defaultValue;\n                }\n            });\n        }\n        // Support: IE<9\n        // Use getAttributeNode to fetch booleans when getAttribute lies\n        if (!assert(function (el) {\n                return el.getAttribute('disabled') == null;\n            })) {\n            addHandle(booleans, function (elem, name, isXML) {\n                var val;\n                if (!isXML) {\n                    return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n                }\n            });\n        }\n        return Sizzle;\n    }(window);\n    jQuery.find = Sizzle;\n    jQuery.expr = Sizzle.selectors;\n    // Deprecated\n    jQuery.expr[':'] = jQuery.expr.pseudos;\n    jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n    jQuery.text = Sizzle.getText;\n    jQuery.isXMLDoc = Sizzle.isXML;\n    jQuery.contains = Sizzle.contains;\n    jQuery.escapeSelector = Sizzle.escape;\n    var dir = function (elem, dir, until) {\n        var matched = [], truncate = until !== undefined;\n        while ((elem = elem[dir]) && elem.nodeType !== 9) {\n            if (elem.nodeType === 1) {\n                if (truncate && jQuery(elem).is(until)) {\n                    break;\n                }\n                matched.push(elem);\n            }\n        }\n        return matched;\n    };\n    var siblings = function (n, elem) {\n        var matched = [];\n        for (; n; n = n.nextSibling) {\n            if (n.nodeType === 1 && n !== elem) {\n                matched.push(n);\n            }\n        }\n        return matched;\n    };\n    var rneedsContext = jQuery.expr.match.needsContext;\n    function nodeName(elem, name) {\n        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n    }\n    ;\n    var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;\n    var risSimple = /^.[^:#\\[\\.,]*$/;\n    // Implement the identical functionality for filter and not\n    function winnow(elements, qualifier, not) {\n        if (jQuery.isFunction(qualifier)) {\n            return jQuery.grep(elements, function (elem, i) {\n                return !!qualifier.call(elem, i, elem) !== not;\n            });\n        }\n        // Single element\n        if (qualifier.nodeType) {\n            return jQuery.grep(elements, function (elem) {\n                return elem === qualifier !== not;\n            });\n        }\n        // Arraylike of elements (jQuery, arguments, Array)\n        if (typeof qualifier !== 'string') {\n            return jQuery.grep(elements, function (elem) {\n                return indexOf.call(qualifier, elem) > -1 !== not;\n            });\n        }\n        // Simple selector that can be filtered directly, removing non-Elements\n        if (risSimple.test(qualifier)) {\n            return jQuery.filter(qualifier, elements, not);\n        }\n        // Complex selector, compare the two sets, removing non-Elements\n        qualifier = jQuery.filter(qualifier, elements);\n        return jQuery.grep(elements, function (elem) {\n            return indexOf.call(qualifier, elem) > -1 !== not && elem.nodeType === 1;\n        });\n    }\n    jQuery.filter = function (expr, elems, not) {\n        var elem = elems[0];\n        if (not) {\n            expr = ':not(' + expr + ')';\n        }\n        if (elems.length === 1 && elem.nodeType === 1) {\n            return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n        }\n        return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n            return elem.nodeType === 1;\n        }));\n    };\n    jQuery.fn.extend({\n        find: function (selector) {\n            var i, ret, len = this.length, self = this;\n            if (typeof selector !== 'string') {\n                return this.pushStack(jQuery(selector).filter(function () {\n                    for (i = 0; i < len; i++) {\n                        if (jQuery.contains(self[i], this)) {\n                            return true;\n                        }\n                    }\n                }));\n            }\n            ret = this.pushStack([]);\n            for (i = 0; i < len; i++) {\n                jQuery.find(selector, self[i], ret);\n            }\n            return len > 1 ? jQuery.uniqueSort(ret) : ret;\n        },\n        filter: function (selector) {\n            return this.pushStack(winnow(this, selector || [], false));\n        },\n        not: function (selector) {\n            return this.pushStack(winnow(this, selector || [], true));\n        },\n        is: function (selector) {\n            return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n            // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n            typeof selector === 'string' && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n        }\n    });\n    // Initialize a jQuery object\n    // A central reference to the root jQuery(document)\n    var rootjQuery,\n        // A simple way to check for HTML strings\n        // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n        // Strict HTML recognition (#11290: must start with <)\n        // Shortcut simple #id case for speed\n        rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/, init = jQuery.fn.init = function (selector, context, root) {\n            var match, elem;\n            // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n            if (!selector) {\n                return this;\n            }\n            // Method init() accepts an alternate rootjQuery\n            // so migrate can support jQuery.sub (gh-2101)\n            root = root || rootjQuery;\n            // Handle HTML strings\n            if (typeof selector === 'string') {\n                if (selector[0] === '<' && selector[selector.length - 1] === '>' && selector.length >= 3) {\n                    // Assume that strings that start and end with <> are HTML and skip the regex check\n                    match = [\n                        null,\n                        selector,\n                        null\n                    ];\n                } else {\n                    match = rquickExpr.exec(selector);\n                }\n                // Match html or make sure no context is specified for #id\n                if (match && (match[1] || !context)) {\n                    // HANDLE: $(html) -> $(array)\n                    if (match[1]) {\n                        context = context instanceof jQuery ? context[0] : context;\n                        // Option to run scripts is true for back-compat\n                        // Intentionally let the error be thrown if parseHTML is not present\n                        jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));\n                        // HANDLE: $(html, props)\n                        if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n                            for (match in context) {\n                                // Properties of context are called as methods if possible\n                                if (jQuery.isFunction(this[match])) {\n                                    this[match](context[match]);    // ...and otherwise set as attributes\n                                } else {\n                                    this.attr(match, context[match]);\n                                }\n                            }\n                        }\n                        return this;    // HANDLE: $(#id)\n                    } else {\n                        elem = document.getElementById(match[2]);\n                        if (elem) {\n                            // Inject the element directly into the jQuery object\n                            this[0] = elem;\n                            this.length = 1;\n                        }\n                        return this;\n                    }    // HANDLE: $(expr, $(...))\n                } else if (!context || context.jquery) {\n                    return (context || root).find(selector);    // HANDLE: $(expr, context)\n                                                                // (which is just equivalent to: $(context).find(expr)\n                } else {\n                    return this.constructor(context).find(selector);\n                }    // HANDLE: $(DOMElement)\n            } else if (selector.nodeType) {\n                this[0] = selector;\n                this.length = 1;\n                return this;    // HANDLE: $(function)\n                                // Shortcut for document ready\n            } else if (jQuery.isFunction(selector)) {\n                return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present\n                selector(jQuery);\n            }\n            return jQuery.makeArray(selector, this);\n        };\n    // Give the init function the jQuery prototype for later instantiation\n    init.prototype = jQuery.fn;\n    // Initialize central reference\n    rootjQuery = jQuery(document);\n    var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n        // Methods guaranteed to produce a unique set when starting from a unique set\n        guaranteedUnique = {\n            children: true,\n            contents: true,\n            next: true,\n            prev: true\n        };\n    jQuery.fn.extend({\n        has: function (target) {\n            var targets = jQuery(target, this), l = targets.length;\n            return this.filter(function () {\n                var i = 0;\n                for (; i < l; i++) {\n                    if (jQuery.contains(this, targets[i])) {\n                        return true;\n                    }\n                }\n            });\n        },\n        closest: function (selectors, context) {\n            var cur, i = 0, l = this.length, matched = [], targets = typeof selectors !== 'string' && jQuery(selectors);\n            // Positional selectors never match, since there's no _selection_ context\n            if (!rneedsContext.test(selectors)) {\n                for (; i < l; i++) {\n                    for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n                        // Always skip document fragments\n                        if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle\n                            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n                            matched.push(cur);\n                            break;\n                        }\n                    }\n                }\n            }\n            return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n        },\n        // Determine the position of an element within the set\n        index: function (elem) {\n            // No argument, return index in parent\n            if (!elem) {\n                return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n            }\n            // Index in selector\n            if (typeof elem === 'string') {\n                return indexOf.call(jQuery(elem), this[0]);\n            }\n            // Locate the position of the desired element\n            return indexOf.call(this, // If it receives a jQuery object, the first element is used\n            elem.jquery ? elem[0] : elem);\n        },\n        add: function (selector, context) {\n            return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n        },\n        addBack: function (selector) {\n            return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n        }\n    });\n    function sibling(cur, dir) {\n        while ((cur = cur[dir]) && cur.nodeType !== 1) {\n        }\n        return cur;\n    }\n    jQuery.each({\n        parent: function (elem) {\n            var parent = elem.parentNode;\n            return parent && parent.nodeType !== 11 ? parent : null;\n        },\n        parents: function (elem) {\n            return dir(elem, 'parentNode');\n        },\n        parentsUntil: function (elem, i, until) {\n            return dir(elem, 'parentNode', until);\n        },\n        next: function (elem) {\n            return sibling(elem, 'nextSibling');\n        },\n        prev: function (elem) {\n            return sibling(elem, 'previousSibling');\n        },\n        nextAll: function (elem) {\n            return dir(elem, 'nextSibling');\n        },\n        prevAll: function (elem) {\n            return dir(elem, 'previousSibling');\n        },\n        nextUntil: function (elem, i, until) {\n            return dir(elem, 'nextSibling', until);\n        },\n        prevUntil: function (elem, i, until) {\n            return dir(elem, 'previousSibling', until);\n        },\n        siblings: function (elem) {\n            return siblings((elem.parentNode || {}).firstChild, elem);\n        },\n        children: function (elem) {\n            return siblings(elem.firstChild);\n        },\n        contents: function (elem) {\n            if (nodeName(elem, 'iframe')) {\n                return elem.contentDocument;\n            }\n            // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n            // Treat the template element as a regular one in browsers that\n            // don't support it.\n            if (nodeName(elem, 'template')) {\n                elem = elem.content || elem;\n            }\n            return jQuery.merge([], elem.childNodes);\n        }\n    }, function (name, fn) {\n        jQuery.fn[name] = function (until, selector) {\n            var matched = jQuery.map(this, fn, until);\n            if (name.slice(-5) !== 'Until') {\n                selector = until;\n            }\n            if (selector && typeof selector === 'string') {\n                matched = jQuery.filter(selector, matched);\n            }\n            if (this.length > 1) {\n                // Remove duplicates\n                if (!guaranteedUnique[name]) {\n                    jQuery.uniqueSort(matched);\n                }\n                // Reverse order for parents* and prev-derivatives\n                if (rparentsprev.test(name)) {\n                    matched.reverse();\n                }\n            }\n            return this.pushStack(matched);\n        };\n    });\n    var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n    // Convert String-formatted options into Object-formatted ones\n    function createOptions(options) {\n        var object = {};\n        jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n            object[flag] = true;\n        });\n        return object;\n    }\n    /*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\n    jQuery.Callbacks = function (options) {\n        // Convert options from String-formatted to Object-formatted if needed\n        // (we check in cache first)\n        options = typeof options === 'string' ? createOptions(options) : jQuery.extend({}, options);\n        var\n            // Flag to know if list is currently firing\n            firing,\n            // Last fire value for non-forgettable lists\n            memory,\n            // Flag to know if list was already fired\n            fired,\n            // Flag to prevent firing\n            locked,\n            // Actual callback list\n            list = [],\n            // Queue of execution data for repeatable lists\n            queue = [],\n            // Index of currently firing callback (modified by add/remove as needed)\n            firingIndex = -1,\n            // Fire callbacks\n            fire = function () {\n                // Enforce single-firing\n                locked = locked || options.once;\n                // Execute callbacks for all pending executions,\n                // respecting firingIndex overrides and runtime changes\n                fired = firing = true;\n                for (; queue.length; firingIndex = -1) {\n                    memory = queue.shift();\n                    while (++firingIndex < list.length) {\n                        // Run callback and check for early termination\n                        if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n                            // Jump to end and forget the data so .add doesn't re-fire\n                            firingIndex = list.length;\n                            memory = false;\n                        }\n                    }\n                }\n                // Forget the data if we're done with it\n                if (!options.memory) {\n                    memory = false;\n                }\n                firing = false;\n                // Clean up if we're done firing for good\n                if (locked) {\n                    // Keep an empty list if we have data for future add calls\n                    if (memory) {\n                        list = [];    // Otherwise, this object is spent\n                    } else {\n                        list = '';\n                    }\n                }\n            },\n            // Actual Callbacks object\n            self = {\n                // Add a callback or a collection of callbacks to the list\n                add: function () {\n                    if (list) {\n                        // If we have memory from a past run, we should fire after adding\n                        if (memory && !firing) {\n                            firingIndex = list.length - 1;\n                            queue.push(memory);\n                        }\n                        (function add(args) {\n                            jQuery.each(args, function (_, arg) {\n                                if (jQuery.isFunction(arg)) {\n                                    if (!options.unique || !self.has(arg)) {\n                                        list.push(arg);\n                                    }\n                                } else if (arg && arg.length && jQuery.type(arg) !== 'string') {\n                                    // Inspect recursively\n                                    add(arg);\n                                }\n                            });\n                        }(arguments));\n                        if (memory && !firing) {\n                            fire();\n                        }\n                    }\n                    return this;\n                },\n                // Remove a callback from the list\n                remove: function () {\n                    jQuery.each(arguments, function (_, arg) {\n                        var index;\n                        while ((index = jQuery.inArray(arg, list, index)) > -1) {\n                            list.splice(index, 1);\n                            // Handle firing indexes\n                            if (index <= firingIndex) {\n                                firingIndex--;\n                            }\n                        }\n                    });\n                    return this;\n                },\n                // Check if a given callback is in the list.\n                // If no argument is given, return whether or not list has callbacks attached.\n                has: function (fn) {\n                    return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n                },\n                // Remove all callbacks from the list\n                empty: function () {\n                    if (list) {\n                        list = [];\n                    }\n                    return this;\n                },\n                // Disable .fire and .add\n                // Abort any current/pending executions\n                // Clear all callbacks and values\n                disable: function () {\n                    locked = queue = [];\n                    list = memory = '';\n                    return this;\n                },\n                disabled: function () {\n                    return !list;\n                },\n                // Disable .fire\n                // Also disable .add unless we have memory (since it would have no effect)\n                // Abort any pending executions\n                lock: function () {\n                    locked = queue = [];\n                    if (!memory && !firing) {\n                        list = memory = '';\n                    }\n                    return this;\n                },\n                locked: function () {\n                    return !!locked;\n                },\n                // Call all callbacks with the given context and arguments\n                fireWith: function (context, args) {\n                    if (!locked) {\n                        args = args || [];\n                        args = [\n                            context,\n                            args.slice ? args.slice() : args\n                        ];\n                        queue.push(args);\n                        if (!firing) {\n                            fire();\n                        }\n                    }\n                    return this;\n                },\n                // Call all the callbacks with the given arguments\n                fire: function () {\n                    self.fireWith(this, arguments);\n                    return this;\n                },\n                // To know if the callbacks have already been called at least once\n                fired: function () {\n                    return !!fired;\n                }\n            };\n        return self;\n    };\n    function Identity(v) {\n        return v;\n    }\n    function Thrower(ex) {\n        throw ex;\n    }\n    function adoptValue(value, resolve, reject, noValue) {\n        var method;\n        try {\n            // Check for promise aspect first to privilege synchronous behavior\n            if (value && jQuery.isFunction(method = value.promise)) {\n                method.call(value).done(resolve).fail(reject);    // Other thenables\n            } else if (value && jQuery.isFunction(method = value.then)) {\n                method.call(value, resolve, reject);    // Other non-thenables\n            } else {\n                // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n                // * false: [ value ].slice( 0 ) => resolve( value )\n                // * true: [ value ].slice( 1 ) => resolve()\n                resolve.apply(undefined, [value].slice(noValue));\n            }    // For Promises/A+, convert exceptions into rejections\n                 // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n                 // Deferred#then to conditionally suppress rejection.\n        } catch (value) {\n            // Support: Android 4.0 only\n            // Strict mode functions invoked without .call/.apply get global-object context\n            reject.apply(undefined, [value]);\n        }\n    }\n    jQuery.extend({\n        Deferred: function (func) {\n            var tuples = [\n                    // action, add listener, callbacks,\n                    // ... .then handlers, argument index, [final state]\n                    [\n                        'notify',\n                        'progress',\n                        jQuery.Callbacks('memory'),\n                        jQuery.Callbacks('memory'),\n                        2\n                    ],\n                    [\n                        'resolve',\n                        'done',\n                        jQuery.Callbacks('once memory'),\n                        jQuery.Callbacks('once memory'),\n                        0,\n                        'resolved'\n                    ],\n                    [\n                        'reject',\n                        'fail',\n                        jQuery.Callbacks('once memory'),\n                        jQuery.Callbacks('once memory'),\n                        1,\n                        'rejected'\n                    ]\n                ], state = 'pending', promise = {\n                    state: function () {\n                        return state;\n                    },\n                    always: function () {\n                        deferred.done(arguments).fail(arguments);\n                        return this;\n                    },\n                    'catch': function (fn) {\n                        return promise.then(null, fn);\n                    },\n                    // Keep pipe for back-compat\n                    pipe: function () {\n                        var fns = arguments;\n                        return jQuery.Deferred(function (newDefer) {\n                            jQuery.each(tuples, function (i, tuple) {\n                                // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n                                var fn = jQuery.isFunction(fns[tuple[4]]) && fns[tuple[4]];\n                                // deferred.progress(function() { bind to newDefer or newDefer.notify })\n                                // deferred.done(function() { bind to newDefer or newDefer.resolve })\n                                // deferred.fail(function() { bind to newDefer or newDefer.reject })\n                                deferred[tuple[1]](function () {\n                                    var returned = fn && fn.apply(this, arguments);\n                                    if (returned && jQuery.isFunction(returned.promise)) {\n                                        returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                                    } else {\n                                        newDefer[tuple[0] + 'With'](this, fn ? [returned] : arguments);\n                                    }\n                                });\n                            });\n                            fns = null;\n                        }).promise();\n                    },\n                    then: function (onFulfilled, onRejected, onProgress) {\n                        var maxDepth = 0;\n                        function resolve(depth, deferred, handler, special) {\n                            return function () {\n                                var that = this, args = arguments, mightThrow = function () {\n                                        var returned, then;\n                                        // Support: Promises/A+ section 2.3.3.3.3\n                                        // https://promisesaplus.com/#point-59\n                                        // Ignore double-resolution attempts\n                                        if (depth < maxDepth) {\n                                            return;\n                                        }\n                                        returned = handler.apply(that, args);\n                                        // Support: Promises/A+ section 2.3.1\n                                        // https://promisesaplus.com/#point-48\n                                        if (returned === deferred.promise()) {\n                                            throw new TypeError('Thenable self-resolution');\n                                        }\n                                        // Support: Promises/A+ sections 2.3.3.1, 3.5\n                                        // https://promisesaplus.com/#point-54\n                                        // https://promisesaplus.com/#point-75\n                                        // Retrieve `then` only once\n                                        then = returned && (typeof returned === 'object' || typeof returned === 'function') && returned.then;\n                                        // Handle a returned thenable\n                                        if (jQuery.isFunction(then)) {\n                                            // Special processors (notify) just wait for resolution\n                                            if (special) {\n                                                then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special));    // Normal processors (resolve) also hook into progress\n                                            } else {\n                                                // ...and disregard older resolution values\n                                                maxDepth++;\n                                                then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                                            }    // Handle all other returned values\n                                        } else {\n                                            // Only substitute handlers pass on context\n                                            // and multiple values (non-spec behavior)\n                                            if (handler !== Identity) {\n                                                that = undefined;\n                                                args = [returned];\n                                            }\n                                            // Process the value(s)\n                                            // Default process is resolve\n                                            (special || deferred.resolveWith)(that, args);\n                                        }\n                                    },\n                                    // Only normal processors (resolve) catch and reject exceptions\n                                    process = special ? mightThrow : function () {\n                                        try {\n                                            mightThrow();\n                                        } catch (e) {\n                                            if (jQuery.Deferred.exceptionHook) {\n                                                jQuery.Deferred.exceptionHook(e, process.stackTrace);\n                                            }\n                                            // Support: Promises/A+ section 2.3.3.3.4.1\n                                            // https://promisesaplus.com/#point-61\n                                            // Ignore post-resolution exceptions\n                                            if (depth + 1 >= maxDepth) {\n                                                // Only substitute handlers pass on context\n                                                // and multiple values (non-spec behavior)\n                                                if (handler !== Thrower) {\n                                                    that = undefined;\n                                                    args = [e];\n                                                }\n                                                deferred.rejectWith(that, args);\n                                            }\n                                        }\n                                    };\n                                // Support: Promises/A+ section 2.3.3.3.1\n                                // https://promisesaplus.com/#point-57\n                                // Re-resolve promises immediately to dodge false rejection from\n                                // subsequent errors\n                                if (depth) {\n                                    process();\n                                } else {\n                                    // Call an optional hook to record the stack, in case of exception\n                                    // since it's otherwise lost when execution goes async\n                                    if (jQuery.Deferred.getStackHook) {\n                                        process.stackTrace = jQuery.Deferred.getStackHook();\n                                    }\n                                    window.setTimeout(process);\n                                }\n                            };\n                        }\n                        return jQuery.Deferred(function (newDefer) {\n                            // progress_handlers.add( ... )\n                            tuples[0][3].add(resolve(0, newDefer, jQuery.isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));\n                            // fulfilled_handlers.add( ... )\n                            tuples[1][3].add(resolve(0, newDefer, jQuery.isFunction(onFulfilled) ? onFulfilled : Identity));\n                            // rejected_handlers.add( ... )\n                            tuples[2][3].add(resolve(0, newDefer, jQuery.isFunction(onRejected) ? onRejected : Thrower));\n                        }).promise();\n                    },\n                    // Get a promise for this deferred\n                    // If obj is provided, the promise aspect is added to the object\n                    promise: function (obj) {\n                        return obj != null ? jQuery.extend(obj, promise) : promise;\n                    }\n                }, deferred = {};\n            // Add list-specific methods\n            jQuery.each(tuples, function (i, tuple) {\n                var list = tuple[2], stateString = tuple[5];\n                // promise.progress = list.add\n                // promise.done = list.add\n                // promise.fail = list.add\n                promise[tuple[1]] = list.add;\n                // Handle state\n                if (stateString) {\n                    list.add(function () {\n                        // state = \"resolved\" (i.e., fulfilled)\n                        // state = \"rejected\"\n                        state = stateString;\n                    }, // rejected_callbacks.disable\n                    // fulfilled_callbacks.disable\n                    tuples[3 - i][2].disable, // progress_callbacks.lock\n                    tuples[0][2].lock);\n                }\n                // progress_handlers.fire\n                // fulfilled_handlers.fire\n                // rejected_handlers.fire\n                list.add(tuple[3].fire);\n                // deferred.notify = function() { deferred.notifyWith(...) }\n                // deferred.resolve = function() { deferred.resolveWith(...) }\n                // deferred.reject = function() { deferred.rejectWith(...) }\n                deferred[tuple[0]] = function () {\n                    deferred[tuple[0] + 'With'](this === deferred ? undefined : this, arguments);\n                    return this;\n                };\n                // deferred.notifyWith = list.fireWith\n                // deferred.resolveWith = list.fireWith\n                // deferred.rejectWith = list.fireWith\n                deferred[tuple[0] + 'With'] = list.fireWith;\n            });\n            // Make the deferred a promise\n            promise.promise(deferred);\n            // Call given func if any\n            if (func) {\n                func.call(deferred, deferred);\n            }\n            // All done!\n            return deferred;\n        },\n        // Deferred helper\n        when: function (singleValue) {\n            var\n                // count of uncompleted subordinates\n                remaining = arguments.length,\n                // count of unprocessed arguments\n                i = remaining,\n                // subordinate fulfillment data\n                resolveContexts = Array(i), resolveValues = slice.call(arguments),\n                // the master Deferred\n                master = jQuery.Deferred(),\n                // subordinate callback factory\n                updateFunc = function (i) {\n                    return function (value) {\n                        resolveContexts[i] = this;\n                        resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value;\n                        if (!--remaining) {\n                            master.resolveWith(resolveContexts, resolveValues);\n                        }\n                    };\n                };\n            // Single- and empty arguments are adopted like Promise.resolve\n            if (remaining <= 1) {\n                adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining);\n                // Use .then() to unwrap secondary thenables (cf. gh-3000)\n                if (master.state() === 'pending' || jQuery.isFunction(resolveValues[i] && resolveValues[i].then)) {\n                    return master.then();\n                }\n            }\n            // Multiple arguments are aggregated like Promise.all array elements\n            while (i--) {\n                adoptValue(resolveValues[i], updateFunc(i), master.reject);\n            }\n            return master.promise();\n        }\n    });\n    // These usually indicate a programmer mistake during development,\n    // warn about them ASAP rather than swallowing them by default.\n    var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n    jQuery.Deferred.exceptionHook = function (error, stack) {\n        // Support: IE 8 - 9 only\n        // Console exists when dev tools are open, which can happen at any time\n        if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n            window.console.warn('jQuery.Deferred exception: ' + error.message, error.stack, stack);\n        }\n    };\n    jQuery.readyException = function (error) {\n        window.setTimeout(function () {\n            throw error;\n        });\n    };\n    // The deferred used on DOM ready\n    var readyList = jQuery.Deferred();\n    jQuery.fn.ready = function (fn) {\n        readyList.then(fn)    // Wrap jQuery.readyException in a function so that the lookup\n                              // happens at the time of error handling instead of callback\n                              // registration.\n.catch(function (error) {\n            jQuery.readyException(error);\n        });\n        return this;\n    };\n    jQuery.extend({\n        // Is the DOM ready to be used? Set to true once it occurs.\n        isReady: false,\n        // A counter to track how many items to wait for before\n        // the ready event fires. See #6781\n        readyWait: 1,\n        // Handle when the DOM is ready\n        ready: function (wait) {\n            // Abort if there are pending holds or we're already ready\n            if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n                return;\n            }\n            // Remember that the DOM is ready\n            jQuery.isReady = true;\n            // If a normal DOM Ready event fired, decrement, and wait if need be\n            if (wait !== true && --jQuery.readyWait > 0) {\n                return;\n            }\n            // If there are functions bound, to execute\n            readyList.resolveWith(document, [jQuery]);\n        }\n    });\n    jQuery.ready.then = readyList.then;\n    // The ready event handler and self cleanup method\n    function completed() {\n        document.removeEventListener('DOMContentLoaded', completed);\n        window.removeEventListener('load', completed);\n        jQuery.ready();\n    }\n    // Catch cases where $(document).ready() is called\n    // after the browser event has already occurred.\n    // Support: IE <=9 - 10 only\n    // Older IE sometimes signals \"interactive\" too soon\n    if (document.readyState === 'complete' || document.readyState !== 'loading' && !document.documentElement.doScroll) {\n        // Handle it asynchronously to allow scripts the opportunity to delay ready\n        window.setTimeout(jQuery.ready);\n    } else {\n        // Use the handy event callback\n        document.addEventListener('DOMContentLoaded', completed);\n        // A fallback to window.onload, that will always work\n        window.addEventListener('load', completed);\n    }\n    // Multifunctional method to get and set values of a collection\n    // The value/s can optionally be executed if it's a function\n    var access = function (elems, fn, key, value, chainable, emptyGet, raw) {\n        var i = 0, len = elems.length, bulk = key == null;\n        // Sets many values\n        if (jQuery.type(key) === 'object') {\n            chainable = true;\n            for (i in key) {\n                access(elems, fn, i, key[i], true, emptyGet, raw);\n            }    // Sets one value\n        } else if (value !== undefined) {\n            chainable = true;\n            if (!jQuery.isFunction(value)) {\n                raw = true;\n            }\n            if (bulk) {\n                // Bulk operations run against the entire set\n                if (raw) {\n                    fn.call(elems, value);\n                    fn = null;    // ...except when executing function values\n                } else {\n                    bulk = fn;\n                    fn = function (elem, key, value) {\n                        return bulk.call(jQuery(elem), value);\n                    };\n                }\n            }\n            if (fn) {\n                for (; i < len; i++) {\n                    fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n                }\n            }\n        }\n        if (chainable) {\n            return elems;\n        }\n        // Gets\n        if (bulk) {\n            return fn.call(elems);\n        }\n        return len ? fn(elems[0], key) : emptyGet;\n    };\n    var acceptData = function (owner) {\n        // Accepts only:\n        //  - Node\n        //    - Node.ELEMENT_NODE\n        //    - Node.DOCUMENT_NODE\n        //  - Object\n        //    - Any\n        return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n    };\n    function Data() {\n        this.expando = jQuery.expando + Data.uid++;\n    }\n    Data.uid = 1;\n    Data.prototype = {\n        cache: function (owner) {\n            // Check if the owner object already has a cache\n            var value = owner[this.expando];\n            // If not, create one\n            if (!value) {\n                value = {};\n                // We can accept data for non-element nodes in modern browsers,\n                // but we should not, see #8335.\n                // Always return an empty object.\n                if (acceptData(owner)) {\n                    // If it is a node unlikely to be stringify-ed or looped over\n                    // use plain assignment\n                    if (owner.nodeType) {\n                        owner[this.expando] = value;    // Otherwise secure it in a non-enumerable property\n                                                        // configurable must be true to allow the property to be\n                                                        // deleted when data is removed\n                    } else {\n                        Object.defineProperty(owner, this.expando, {\n                            value: value,\n                            configurable: true\n                        });\n                    }\n                }\n            }\n            return value;\n        },\n        set: function (owner, data, value) {\n            var prop, cache = this.cache(owner);\n            // Handle: [ owner, key, value ] args\n            // Always use camelCase key (gh-2257)\n            if (typeof data === 'string') {\n                cache[jQuery.camelCase(data)] = value;    // Handle: [ owner, { properties } ] args\n            } else {\n                // Copy the properties one-by-one to the cache object\n                for (prop in data) {\n                    cache[jQuery.camelCase(prop)] = data[prop];\n                }\n            }\n            return cache;\n        },\n        get: function (owner, key) {\n            return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)\n            owner[this.expando] && owner[this.expando][jQuery.camelCase(key)];\n        },\n        access: function (owner, key, value) {\n            // In cases where either:\n            //\n            //   1. No key was specified\n            //   2. A string key was specified, but no value provided\n            //\n            // Take the \"read\" path and allow the get method to determine\n            // which value to return, respectively either:\n            //\n            //   1. The entire cache object\n            //   2. The data stored at the key\n            //\n            if (key === undefined || key && typeof key === 'string' && value === undefined) {\n                return this.get(owner, key);\n            }\n            // When the key is not a string, or both a key and value\n            // are specified, set or extend (existing objects) with either:\n            //\n            //   1. An object of properties\n            //   2. A key and value\n            //\n            this.set(owner, key, value);\n            // Since the \"set\" path can have two possible entry points\n            // return the expected data based on which path was taken[*]\n            return value !== undefined ? value : key;\n        },\n        remove: function (owner, key) {\n            var i, cache = owner[this.expando];\n            if (cache === undefined) {\n                return;\n            }\n            if (key !== undefined) {\n                // Support array or space separated string of keys\n                if (Array.isArray(key)) {\n                    // If key is an array of keys...\n                    // We always set camelCase keys, so remove that.\n                    key = key.map(jQuery.camelCase);\n                } else {\n                    key = jQuery.camelCase(key);\n                    // If a key with the spaces exists, use it.\n                    // Otherwise, create an array by matching non-whitespace\n                    key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n                }\n                i = key.length;\n                while (i--) {\n                    delete cache[key[i]];\n                }\n            }\n            // Remove the expando if there's no more data\n            if (key === undefined || jQuery.isEmptyObject(cache)) {\n                // Support: Chrome <=35 - 45\n                // Webkit & Blink performance suffers when deleting properties\n                // from DOM nodes, so set to undefined instead\n                // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n                if (owner.nodeType) {\n                    owner[this.expando] = undefined;\n                } else {\n                    delete owner[this.expando];\n                }\n            }\n        },\n        hasData: function (owner) {\n            var cache = owner[this.expando];\n            return cache !== undefined && !jQuery.isEmptyObject(cache);\n        }\n    };\n    var dataPriv = new Data();\n    var dataUser = new Data();\n    //\tImplementation Summary\n    //\n    //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n    //\t2. Improve the module's maintainability by reducing the storage\n    //\t\tpaths to a single mechanism.\n    //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n    //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n    //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n    //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n    var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/, rmultiDash = /[A-Z]/g;\n    function getData(data) {\n        if (data === 'true') {\n            return true;\n        }\n        if (data === 'false') {\n            return false;\n        }\n        if (data === 'null') {\n            return null;\n        }\n        // Only convert to a number if it doesn't change the string\n        if (data === +data + '') {\n            return +data;\n        }\n        if (rbrace.test(data)) {\n            return JSON.parse(data);\n        }\n        return data;\n    }\n    function dataAttr(elem, key, data) {\n        var name;\n        // If nothing was found internally, try to fetch any\n        // data from the HTML5 data-* attribute\n        if (data === undefined && elem.nodeType === 1) {\n            name = 'data-' + key.replace(rmultiDash, '-$&').toLowerCase();\n            data = elem.getAttribute(name);\n            if (typeof data === 'string') {\n                try {\n                    data = getData(data);\n                } catch (e) {\n                }\n                // Make sure we set the data so it isn't changed later\n                dataUser.set(elem, key, data);\n            } else {\n                data = undefined;\n            }\n        }\n        return data;\n    }\n    jQuery.extend({\n        hasData: function (elem) {\n            return dataUser.hasData(elem) || dataPriv.hasData(elem);\n        },\n        data: function (elem, name, data) {\n            return dataUser.access(elem, name, data);\n        },\n        removeData: function (elem, name) {\n            dataUser.remove(elem, name);\n        },\n        // TODO: Now that all calls to _data and _removeData have been replaced\n        // with direct calls to dataPriv methods, these can be deprecated.\n        _data: function (elem, name, data) {\n            return dataPriv.access(elem, name, data);\n        },\n        _removeData: function (elem, name) {\n            dataPriv.remove(elem, name);\n        }\n    });\n    jQuery.fn.extend({\n        data: function (key, value) {\n            var i, name, data, elem = this[0], attrs = elem && elem.attributes;\n            // Gets all values\n            if (key === undefined) {\n                if (this.length) {\n                    data = dataUser.get(elem);\n                    if (elem.nodeType === 1 && !dataPriv.get(elem, 'hasDataAttrs')) {\n                        i = attrs.length;\n                        while (i--) {\n                            // Support: IE 11 only\n                            // The attrs elements can be null (#14894)\n                            if (attrs[i]) {\n                                name = attrs[i].name;\n                                if (name.indexOf('data-') === 0) {\n                                    name = jQuery.camelCase(name.slice(5));\n                                    dataAttr(elem, name, data[name]);\n                                }\n                            }\n                        }\n                        dataPriv.set(elem, 'hasDataAttrs', true);\n                    }\n                }\n                return data;\n            }\n            // Sets multiple values\n            if (typeof key === 'object') {\n                return this.each(function () {\n                    dataUser.set(this, key);\n                });\n            }\n            return access(this, function (value) {\n                var data;\n                // The calling jQuery object (element matches) is not empty\n                // (and therefore has an element appears at this[ 0 ]) and the\n                // `value` parameter was not undefined. An empty jQuery object\n                // will result in `undefined` for elem = this[ 0 ] which will\n                // throw an exception if an attempt to read a data cache is made.\n                if (elem && value === undefined) {\n                    // Attempt to get data from the cache\n                    // The key will always be camelCased in Data\n                    data = dataUser.get(elem, key);\n                    if (data !== undefined) {\n                        return data;\n                    }\n                    // Attempt to \"discover\" the data in\n                    // HTML5 custom data-* attrs\n                    data = dataAttr(elem, key);\n                    if (data !== undefined) {\n                        return data;\n                    }\n                    // We tried really hard, but the data doesn't exist.\n                    return;\n                }\n                // Set the data...\n                this.each(function () {\n                    // We always store the camelCased key\n                    dataUser.set(this, key, value);\n                });\n            }, null, value, arguments.length > 1, null, true);\n        },\n        removeData: function (key) {\n            return this.each(function () {\n                dataUser.remove(this, key);\n            });\n        }\n    });\n    jQuery.extend({\n        queue: function (elem, type, data) {\n            var queue;\n            if (elem) {\n                type = (type || 'fx') + 'queue';\n                queue = dataPriv.get(elem, type);\n                // Speed up dequeue by getting out quickly if this is just a lookup\n                if (data) {\n                    if (!queue || Array.isArray(data)) {\n                        queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n                    } else {\n                        queue.push(data);\n                    }\n                }\n                return queue || [];\n            }\n        },\n        dequeue: function (elem, type) {\n            type = type || 'fx';\n            var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery._queueHooks(elem, type), next = function () {\n                    jQuery.dequeue(elem, type);\n                };\n            // If the fx queue is dequeued, always remove the progress sentinel\n            if (fn === 'inprogress') {\n                fn = queue.shift();\n                startLength--;\n            }\n            if (fn) {\n                // Add a progress sentinel to prevent the fx queue from being\n                // automatically dequeued\n                if (type === 'fx') {\n                    queue.unshift('inprogress');\n                }\n                // Clear up the last queue stop function\n                delete hooks.stop;\n                fn.call(elem, next, hooks);\n            }\n            if (!startLength && hooks) {\n                hooks.empty.fire();\n            }\n        },\n        // Not public - generate a queueHooks object, or return the current one\n        _queueHooks: function (elem, type) {\n            var key = type + 'queueHooks';\n            return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n                empty: jQuery.Callbacks('once memory').add(function () {\n                    dataPriv.remove(elem, [\n                        type + 'queue',\n                        key\n                    ]);\n                })\n            });\n        }\n    });\n    jQuery.fn.extend({\n        queue: function (type, data) {\n            var setter = 2;\n            if (typeof type !== 'string') {\n                data = type;\n                type = 'fx';\n                setter--;\n            }\n            if (arguments.length < setter) {\n                return jQuery.queue(this[0], type);\n            }\n            return data === undefined ? this : this.each(function () {\n                var queue = jQuery.queue(this, type, data);\n                // Ensure a hooks for this queue\n                jQuery._queueHooks(this, type);\n                if (type === 'fx' && queue[0] !== 'inprogress') {\n                    jQuery.dequeue(this, type);\n                }\n            });\n        },\n        dequeue: function (type) {\n            return this.each(function () {\n                jQuery.dequeue(this, type);\n            });\n        },\n        clearQueue: function (type) {\n            return this.queue(type || 'fx', []);\n        },\n        // Get a promise resolved when queues of a certain type\n        // are emptied (fx is the type by default)\n        promise: function (type, obj) {\n            var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i = this.length, resolve = function () {\n                    if (!--count) {\n                        defer.resolveWith(elements, [elements]);\n                    }\n                };\n            if (typeof type !== 'string') {\n                obj = type;\n                type = undefined;\n            }\n            type = type || 'fx';\n            while (i--) {\n                tmp = dataPriv.get(elements[i], type + 'queueHooks');\n                if (tmp && tmp.empty) {\n                    count++;\n                    tmp.empty.add(resolve);\n                }\n            }\n            resolve();\n            return defer.promise(obj);\n        }\n    });\n    var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n    var rcssNum = new RegExp('^(?:([+-])=|)(' + pnum + ')([a-z%]*)$', 'i');\n    var cssExpand = [\n        'Top',\n        'Right',\n        'Bottom',\n        'Left'\n    ];\n    var isHiddenWithinTree = function (elem, el) {\n        // isHiddenWithinTree might be called from jQuery#filter function;\n        // in that case, element will be second argument\n        elem = el || elem;\n        // Inline style trumps all\n        return elem.style.display === 'none' || elem.style.display === '' && // Otherwise, check computed style\n        // Support: Firefox <=43 - 45\n        // Disconnected elements can have computed display: none, so first confirm that elem is\n        // in the document.\n        jQuery.contains(elem.ownerDocument, elem) && jQuery.css(elem, 'display') === 'none';\n    };\n    var swap = function (elem, options, callback, args) {\n        var ret, name, old = {};\n        // Remember the old values, and insert the new ones\n        for (name in options) {\n            old[name] = elem.style[name];\n            elem.style[name] = options[name];\n        }\n        ret = callback.apply(elem, args || []);\n        // Revert the old values\n        for (name in options) {\n            elem.style[name] = old[name];\n        }\n        return ret;\n    };\n    function adjustCSS(elem, prop, valueParts, tween) {\n        var adjusted, scale = 1, maxIterations = 20, currentValue = tween ? function () {\n                return tween.cur();\n            } : function () {\n                return jQuery.css(elem, prop, '');\n            }, initial = currentValue(), unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? '' : 'px'),\n            // Starting value computation is required for potential unit mismatches\n            initialInUnit = (jQuery.cssNumber[prop] || unit !== 'px' && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n        if (initialInUnit && initialInUnit[3] !== unit) {\n            // Trust units reported by jQuery.css\n            unit = unit || initialInUnit[3];\n            // Make sure we update the tween properties later on\n            valueParts = valueParts || [];\n            // Iteratively approximate from a nonzero starting point\n            initialInUnit = +initial || 1;\n            do {\n                // If previous iteration zeroed out, double until we get *something*.\n                // Use string for doubling so we don't accidentally see scale as unchanged below\n                scale = scale || '.5';\n                // Adjust and apply\n                initialInUnit = initialInUnit / scale;\n                jQuery.style(elem, prop, initialInUnit + unit);    // Update scale, tolerating zero or NaN from tween.cur()\n                                                                   // Break the loop if scale is unchanged or perfect, or if we've just had enough.\n            } while (scale !== (scale = currentValue() / initial) && scale !== 1 && --maxIterations);\n        }\n        if (valueParts) {\n            initialInUnit = +initialInUnit || +initial || 0;\n            // Apply relative offset (+=/-=) if specified\n            adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n            if (tween) {\n                tween.unit = unit;\n                tween.start = initialInUnit;\n                tween.end = adjusted;\n            }\n        }\n        return adjusted;\n    }\n    var defaultDisplayMap = {};\n    function getDefaultDisplay(elem) {\n        var temp, doc = elem.ownerDocument, nodeName = elem.nodeName, display = defaultDisplayMap[nodeName];\n        if (display) {\n            return display;\n        }\n        temp = doc.body.appendChild(doc.createElement(nodeName));\n        display = jQuery.css(temp, 'display');\n        temp.parentNode.removeChild(temp);\n        if (display === 'none') {\n            display = 'block';\n        }\n        defaultDisplayMap[nodeName] = display;\n        return display;\n    }\n    function showHide(elements, show) {\n        var display, elem, values = [], index = 0, length = elements.length;\n        // Determine new display value for elements that need to change\n        for (; index < length; index++) {\n            elem = elements[index];\n            if (!elem.style) {\n                continue;\n            }\n            display = elem.style.display;\n            if (show) {\n                // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n                // check is required in this first loop unless we have a nonempty display value (either\n                // inline or about-to-be-restored)\n                if (display === 'none') {\n                    values[index] = dataPriv.get(elem, 'display') || null;\n                    if (!values[index]) {\n                        elem.style.display = '';\n                    }\n                }\n                if (elem.style.display === '' && isHiddenWithinTree(elem)) {\n                    values[index] = getDefaultDisplay(elem);\n                }\n            } else {\n                if (display !== 'none') {\n                    values[index] = 'none';\n                    // Remember what we're overwriting\n                    dataPriv.set(elem, 'display', display);\n                }\n            }\n        }\n        // Set the display of the elements in a second loop to avoid constant reflow\n        for (index = 0; index < length; index++) {\n            if (values[index] != null) {\n                elements[index].style.display = values[index];\n            }\n        }\n        return elements;\n    }\n    jQuery.fn.extend({\n        show: function () {\n            return showHide(this, true);\n        },\n        hide: function () {\n            return showHide(this);\n        },\n        toggle: function (state) {\n            if (typeof state === 'boolean') {\n                return state ? this.show() : this.hide();\n            }\n            return this.each(function () {\n                if (isHiddenWithinTree(this)) {\n                    jQuery(this).show();\n                } else {\n                    jQuery(this).hide();\n                }\n            });\n        }\n    });\n    var rcheckableType = /^(?:checkbox|radio)$/i;\n    var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i;\n    var rscriptType = /^$|\\/(?:java|ecma)script/i;\n    // We have to close these tags to support XHTML (#13200)\n    var wrapMap = {\n        // Support: IE <=9 only\n        option: [\n            1,\n            '<select multiple=\\'multiple\\'>',\n            '</select>'\n        ],\n        // XHTML parsers do not magically insert elements in the\n        // same way that tag soup parsers do. So we cannot shorten\n        // this by omitting <tbody> or other required elements.\n        thead: [\n            1,\n            '<table>',\n            '</table>'\n        ],\n        col: [\n            2,\n            '<table><colgroup>',\n            '</colgroup></table>'\n        ],\n        tr: [\n            2,\n            '<table><tbody>',\n            '</tbody></table>'\n        ],\n        td: [\n            3,\n            '<table><tbody><tr>',\n            '</tr></tbody></table>'\n        ],\n        _default: [\n            0,\n            '',\n            ''\n        ]\n    };\n    // Support: IE <=9 only\n    wrapMap.optgroup = wrapMap.option;\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n    wrapMap.th = wrapMap.td;\n    function getAll(context, tag) {\n        // Support: IE <=9 - 11 only\n        // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n        var ret;\n        if (typeof context.getElementsByTagName !== 'undefined') {\n            ret = context.getElementsByTagName(tag || '*');\n        } else if (typeof context.querySelectorAll !== 'undefined') {\n            ret = context.querySelectorAll(tag || '*');\n        } else {\n            ret = [];\n        }\n        if (tag === undefined || tag && nodeName(context, tag)) {\n            return jQuery.merge([context], ret);\n        }\n        return ret;\n    }\n    // Mark scripts as having already been evaluated\n    function setGlobalEval(elems, refElements) {\n        var i = 0, l = elems.length;\n        for (; i < l; i++) {\n            dataPriv.set(elems[i], 'globalEval', !refElements || dataPriv.get(refElements[i], 'globalEval'));\n        }\n    }\n    var rhtml = /<|&#?\\w+;/;\n    function buildFragment(elems, context, scripts, selection, ignored) {\n        var elem, tmp, tag, wrap, contains, j, fragment = context.createDocumentFragment(), nodes = [], i = 0, l = elems.length;\n        for (; i < l; i++) {\n            elem = elems[i];\n            if (elem || elem === 0) {\n                // Add nodes directly\n                if (jQuery.type(elem) === 'object') {\n                    // Support: Android <=4.0 only, PhantomJS 1 only\n                    // push.apply(_, arraylike) throws on ancient WebKit\n                    jQuery.merge(nodes, elem.nodeType ? [elem] : elem);    // Convert non-html into a text node\n                } else if (!rhtml.test(elem)) {\n                    nodes.push(context.createTextNode(elem));    // Convert html into DOM nodes\n                } else {\n                    tmp = tmp || fragment.appendChild(context.createElement('div'));\n                    // Deserialize a standard representation\n                    tag = (rtagName.exec(elem) || [\n                        '',\n                        ''\n                    ])[1].toLowerCase();\n                    wrap = wrapMap[tag] || wrapMap._default;\n                    tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];\n                    // Descend through wrappers to the right content\n                    j = wrap[0];\n                    while (j--) {\n                        tmp = tmp.lastChild;\n                    }\n                    // Support: Android <=4.0 only, PhantomJS 1 only\n                    // push.apply(_, arraylike) throws on ancient WebKit\n                    jQuery.merge(nodes, tmp.childNodes);\n                    // Remember the top-level container\n                    tmp = fragment.firstChild;\n                    // Ensure the created nodes are orphaned (#12392)\n                    tmp.textContent = '';\n                }\n            }\n        }\n        // Remove wrapper from fragment\n        fragment.textContent = '';\n        i = 0;\n        while (elem = nodes[i++]) {\n            // Skip elements already in the context collection (trac-4087)\n            if (selection && jQuery.inArray(elem, selection) > -1) {\n                if (ignored) {\n                    ignored.push(elem);\n                }\n                continue;\n            }\n            contains = jQuery.contains(elem.ownerDocument, elem);\n            // Append to fragment\n            tmp = getAll(fragment.appendChild(elem), 'script');\n            // Preserve script evaluation history\n            if (contains) {\n                setGlobalEval(tmp);\n            }\n            // Capture executables\n            if (scripts) {\n                j = 0;\n                while (elem = tmp[j++]) {\n                    if (rscriptType.test(elem.type || '')) {\n                        scripts.push(elem);\n                    }\n                }\n            }\n        }\n        return fragment;\n    }\n    (function () {\n        var fragment = document.createDocumentFragment(), div = fragment.appendChild(document.createElement('div')), input = document.createElement('input');\n        // Support: Android 4.0 - 4.3 only\n        // Check state lost if the name is set (#11217)\n        // Support: Windows Web Apps (WWA)\n        // `name` and `type` must use .setAttribute for WWA (#14901)\n        input.setAttribute('type', 'radio');\n        input.setAttribute('checked', 'checked');\n        input.setAttribute('name', 't');\n        div.appendChild(input);\n        // Support: Android <=4.1 only\n        // Older WebKit doesn't clone checked state correctly in fragments\n        support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;\n        // Support: IE <=11 only\n        // Make sure textarea (and checkbox) defaultValue is properly cloned\n        div.innerHTML = '<textarea>x</textarea>';\n        support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n    }());\n    var documentElement = document.documentElement;\n    var rkeyEvent = /^key/, rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n    function returnTrue() {\n        return true;\n    }\n    function returnFalse() {\n        return false;\n    }\n    // Support: IE <=9 only\n    // See #13393 for more info\n    function safeActiveElement() {\n        try {\n            return document.activeElement;\n        } catch (err) {\n        }\n    }\n    function on(elem, types, selector, data, fn, one) {\n        var origFn, type;\n        // Types can be a map of types/handlers\n        if (typeof types === 'object') {\n            // ( types-Object, selector, data )\n            if (typeof selector !== 'string') {\n                // ( types-Object, data )\n                data = data || selector;\n                selector = undefined;\n            }\n            for (type in types) {\n                on(elem, type, selector, data, types[type], one);\n            }\n            return elem;\n        }\n        if (data == null && fn == null) {\n            // ( types, fn )\n            fn = selector;\n            data = selector = undefined;\n        } else if (fn == null) {\n            if (typeof selector === 'string') {\n                // ( types, selector, fn )\n                fn = data;\n                data = undefined;\n            } else {\n                // ( types, data, fn )\n                fn = data;\n                data = selector;\n                selector = undefined;\n            }\n        }\n        if (fn === false) {\n            fn = returnFalse;\n        } else if (!fn) {\n            return elem;\n        }\n        if (one === 1) {\n            origFn = fn;\n            fn = function (event) {\n                // Can use an empty set, since event contains the info\n                jQuery().off(event);\n                return origFn.apply(this, arguments);\n            };\n            // Use same guid so caller can remove using origFn\n            fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n        }\n        return elem.each(function () {\n            jQuery.event.add(this, types, fn, data, selector);\n        });\n    }\n    /*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\n    jQuery.event = {\n        global: {},\n        add: function (elem, types, handler, data, selector) {\n            var handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);\n            // Don't attach events to noData or text/comment nodes (but allow plain objects)\n            if (!elemData) {\n                return;\n            }\n            // Caller can pass in an object of custom data in lieu of the handler\n            if (handler.handler) {\n                handleObjIn = handler;\n                handler = handleObjIn.handler;\n                selector = handleObjIn.selector;\n            }\n            // Ensure that invalid selectors throw exceptions at attach time\n            // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n            if (selector) {\n                jQuery.find.matchesSelector(documentElement, selector);\n            }\n            // Make sure that the handler has a unique ID, used to find/remove it later\n            if (!handler.guid) {\n                handler.guid = jQuery.guid++;\n            }\n            // Init the element's event structure and main handler, if this is the first\n            if (!(events = elemData.events)) {\n                events = elemData.events = {};\n            }\n            if (!(eventHandle = elemData.handle)) {\n                eventHandle = elemData.handle = function (e) {\n                    // Discard the second event of a jQuery.event.trigger() and\n                    // when an event is called after a page has unloaded\n                    return typeof jQuery !== 'undefined' && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n                };\n            }\n            // Handle multiple events separated by a space\n            types = (types || '').match(rnothtmlwhite) || [''];\n            t = types.length;\n            while (t--) {\n                tmp = rtypenamespace.exec(types[t]) || [];\n                type = origType = tmp[1];\n                namespaces = (tmp[2] || '').split('.').sort();\n                // There *must* be a type, no attaching namespace-only handlers\n                if (!type) {\n                    continue;\n                }\n                // If event changes its type, use the special event handlers for the changed type\n                special = jQuery.event.special[type] || {};\n                // If selector defined, determine special event api type, otherwise given type\n                type = (selector ? special.delegateType : special.bindType) || type;\n                // Update special based on newly reset type\n                special = jQuery.event.special[type] || {};\n                // handleObj is passed to all event handlers\n                handleObj = jQuery.extend({\n                    type: type,\n                    origType: origType,\n                    data: data,\n                    handler: handler,\n                    guid: handler.guid,\n                    selector: selector,\n                    needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n                    namespace: namespaces.join('.')\n                }, handleObjIn);\n                // Init the event handler queue if we're the first\n                if (!(handlers = events[type])) {\n                    handlers = events[type] = [];\n                    handlers.delegateCount = 0;\n                    // Only use addEventListener if the special events handler returns false\n                    if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n                        if (elem.addEventListener) {\n                            elem.addEventListener(type, eventHandle);\n                        }\n                    }\n                }\n                if (special.add) {\n                    special.add.call(elem, handleObj);\n                    if (!handleObj.handler.guid) {\n                        handleObj.handler.guid = handler.guid;\n                    }\n                }\n                // Add to the element's handler list, delegates in front\n                if (selector) {\n                    handlers.splice(handlers.delegateCount++, 0, handleObj);\n                } else {\n                    handlers.push(handleObj);\n                }\n                // Keep track of which events have ever been used, for event optimization\n                jQuery.event.global[type] = true;\n            }\n        },\n        // Detach an event or set of events from an element\n        remove: function (elem, types, handler, selector, mappedTypes) {\n            var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n            if (!elemData || !(events = elemData.events)) {\n                return;\n            }\n            // Once for each type.namespace in types; type may be omitted\n            types = (types || '').match(rnothtmlwhite) || [''];\n            t = types.length;\n            while (t--) {\n                tmp = rtypenamespace.exec(types[t]) || [];\n                type = origType = tmp[1];\n                namespaces = (tmp[2] || '').split('.').sort();\n                // Unbind all events (on this namespace, if provided) for the element\n                if (!type) {\n                    for (type in events) {\n                        jQuery.event.remove(elem, type + types[t], handler, selector, true);\n                    }\n                    continue;\n                }\n                special = jQuery.event.special[type] || {};\n                type = (selector ? special.delegateType : special.bindType) || type;\n                handlers = events[type] || [];\n                tmp = tmp[2] && new RegExp('(^|\\\\.)' + namespaces.join('\\\\.(?:.*\\\\.|)') + '(\\\\.|$)');\n                // Remove matching events\n                origCount = j = handlers.length;\n                while (j--) {\n                    handleObj = handlers[j];\n                    if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === '**' && handleObj.selector)) {\n                        handlers.splice(j, 1);\n                        if (handleObj.selector) {\n                            handlers.delegateCount--;\n                        }\n                        if (special.remove) {\n                            special.remove.call(elem, handleObj);\n                        }\n                    }\n                }\n                // Remove generic event handler if we removed something and no more handlers exist\n                // (avoids potential for endless recursion during removal of special event handlers)\n                if (origCount && !handlers.length) {\n                    if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n                        jQuery.removeEvent(elem, type, elemData.handle);\n                    }\n                    delete events[type];\n                }\n            }\n            // Remove data and the expando if it's no longer used\n            if (jQuery.isEmptyObject(events)) {\n                dataPriv.remove(elem, 'handle events');\n            }\n        },\n        dispatch: function (nativeEvent) {\n            // Make a writable jQuery.Event from the native event object\n            var event = jQuery.event.fix(nativeEvent);\n            var i, j, ret, matched, handleObj, handlerQueue, args = new Array(arguments.length), handlers = (dataPriv.get(this, 'events') || {})[event.type] || [], special = jQuery.event.special[event.type] || {};\n            // Use the fix-ed jQuery.Event rather than the (read-only) native event\n            args[0] = event;\n            for (i = 1; i < arguments.length; i++) {\n                args[i] = arguments[i];\n            }\n            event.delegateTarget = this;\n            // Call the preDispatch hook for the mapped type, and let it bail if desired\n            if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n                return;\n            }\n            // Determine handlers\n            handlerQueue = jQuery.event.handlers.call(this, event, handlers);\n            // Run delegates first; they may want to stop propagation beneath us\n            i = 0;\n            while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n                event.currentTarget = matched.elem;\n                j = 0;\n                while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n                    // Triggered event must either 1) have no namespace, or 2) have namespace(s)\n                    // a subset or equal to those in the bound event (both can have no namespace).\n                    if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {\n                        event.handleObj = handleObj;\n                        event.data = handleObj.data;\n                        ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n                        if (ret !== undefined) {\n                            if ((event.result = ret) === false) {\n                                event.preventDefault();\n                                event.stopPropagation();\n                            }\n                        }\n                    }\n                }\n            }\n            // Call the postDispatch hook for the mapped type\n            if (special.postDispatch) {\n                special.postDispatch.call(this, event);\n            }\n            return event.result;\n        },\n        handlers: function (event, handlers) {\n            var i, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;\n            // Find delegate handlers\n            if (delegateCount && // Support: IE <=9\n                // Black-hole SVG <use> instance trees (trac-13180)\n                cur.nodeType && // Support: Firefox <=42\n                // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n                // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n                // Support: IE 11 only\n                // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n                !(event.type === 'click' && event.button >= 1)) {\n                for (; cur !== this; cur = cur.parentNode || this) {\n                    // Don't check non-elements (#13208)\n                    // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n                    if (cur.nodeType === 1 && !(event.type === 'click' && cur.disabled === true)) {\n                        matchedHandlers = [];\n                        matchedSelectors = {};\n                        for (i = 0; i < delegateCount; i++) {\n                            handleObj = handlers[i];\n                            // Don't conflict with Object.prototype properties (#13203)\n                            sel = handleObj.selector + ' ';\n                            if (matchedSelectors[sel] === undefined) {\n                                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n                            }\n                            if (matchedSelectors[sel]) {\n                                matchedHandlers.push(handleObj);\n                            }\n                        }\n                        if (matchedHandlers.length) {\n                            handlerQueue.push({\n                                elem: cur,\n                                handlers: matchedHandlers\n                            });\n                        }\n                    }\n                }\n            }\n            // Add the remaining (directly-bound) handlers\n            cur = this;\n            if (delegateCount < handlers.length) {\n                handlerQueue.push({\n                    elem: cur,\n                    handlers: handlers.slice(delegateCount)\n                });\n            }\n            return handlerQueue;\n        },\n        addProp: function (name, hook) {\n            Object.defineProperty(jQuery.Event.prototype, name, {\n                enumerable: true,\n                configurable: true,\n                get: jQuery.isFunction(hook) ? function () {\n                    if (this.originalEvent) {\n                        return hook(this.originalEvent);\n                    }\n                } : function () {\n                    if (this.originalEvent) {\n                        return this.originalEvent[name];\n                    }\n                },\n                set: function (value) {\n                    Object.defineProperty(this, name, {\n                        enumerable: true,\n                        configurable: true,\n                        writable: true,\n                        value: value\n                    });\n                }\n            });\n        },\n        fix: function (originalEvent) {\n            return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n        },\n        special: {\n            load: {\n                // Prevent triggered image.load events from bubbling to window.load\n                noBubble: true\n            },\n            focus: {\n                // Fire native event if possible so blur/focus sequence is correct\n                trigger: function () {\n                    if (this !== safeActiveElement() && this.focus) {\n                        this.focus();\n                        return false;\n                    }\n                },\n                delegateType: 'focusin'\n            },\n            blur: {\n                trigger: function () {\n                    if (this === safeActiveElement() && this.blur) {\n                        this.blur();\n                        return false;\n                    }\n                },\n                delegateType: 'focusout'\n            },\n            click: {\n                // For checkbox, fire native event so checked state will be right\n                trigger: function () {\n                    if (this.type === 'checkbox' && this.click && nodeName(this, 'input')) {\n                        this.click();\n                        return false;\n                    }\n                },\n                // For cross-browser consistency, don't fire native .click() on links\n                _default: function (event) {\n                    return nodeName(event.target, 'a');\n                }\n            },\n            beforeunload: {\n                postDispatch: function (event) {\n                    // Support: Firefox 20+\n                    // Firefox doesn't alert if the returnValue field is not set.\n                    if (event.result !== undefined && event.originalEvent) {\n                        event.originalEvent.returnValue = event.result;\n                    }\n                }\n            }\n        }\n    };\n    jQuery.removeEvent = function (elem, type, handle) {\n        // This \"if\" is needed for plain objects\n        if (elem.removeEventListener) {\n            elem.removeEventListener(type, handle);\n        }\n    };\n    jQuery.Event = function (src, props) {\n        // Allow instantiation without the 'new' keyword\n        if (!(this instanceof jQuery.Event)) {\n            return new jQuery.Event(src, props);\n        }\n        // Event object\n        if (src && src.type) {\n            this.originalEvent = src;\n            this.type = src.type;\n            // Events bubbling up the document may have been marked as prevented\n            // by a handler lower down the tree; reflect the correct value.\n            this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only\n            src.returnValue === false ? returnTrue : returnFalse;\n            // Create target properties\n            // Support: Safari <=6 - 7 only\n            // Target should not be a text node (#504, #13143)\n            this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n            this.currentTarget = src.currentTarget;\n            this.relatedTarget = src.relatedTarget;    // Event type\n        } else {\n            this.type = src;\n        }\n        // Put explicitly provided properties onto the event object\n        if (props) {\n            jQuery.extend(this, props);\n        }\n        // Create a timestamp if incoming event doesn't have one\n        this.timeStamp = src && src.timeStamp || jQuery.now();\n        // Mark it as fixed\n        this[jQuery.expando] = true;\n    };\n    // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n    // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n    jQuery.Event.prototype = {\n        constructor: jQuery.Event,\n        isDefaultPrevented: returnFalse,\n        isPropagationStopped: returnFalse,\n        isImmediatePropagationStopped: returnFalse,\n        isSimulated: false,\n        preventDefault: function () {\n            var e = this.originalEvent;\n            this.isDefaultPrevented = returnTrue;\n            if (e && !this.isSimulated) {\n                e.preventDefault();\n            }\n        },\n        stopPropagation: function () {\n            var e = this.originalEvent;\n            this.isPropagationStopped = returnTrue;\n            if (e && !this.isSimulated) {\n                e.stopPropagation();\n            }\n        },\n        stopImmediatePropagation: function () {\n            var e = this.originalEvent;\n            this.isImmediatePropagationStopped = returnTrue;\n            if (e && !this.isSimulated) {\n                e.stopImmediatePropagation();\n            }\n            this.stopPropagation();\n        }\n    };\n    // Includes all common event props including KeyEvent and MouseEvent specific props\n    jQuery.each({\n        altKey: true,\n        bubbles: true,\n        cancelable: true,\n        changedTouches: true,\n        ctrlKey: true,\n        detail: true,\n        eventPhase: true,\n        metaKey: true,\n        pageX: true,\n        pageY: true,\n        shiftKey: true,\n        view: true,\n        'char': true,\n        charCode: true,\n        key: true,\n        keyCode: true,\n        button: true,\n        buttons: true,\n        clientX: true,\n        clientY: true,\n        offsetX: true,\n        offsetY: true,\n        pointerId: true,\n        pointerType: true,\n        screenX: true,\n        screenY: true,\n        targetTouches: true,\n        toElement: true,\n        touches: true,\n        which: function (event) {\n            var button = event.button;\n            // Add which for key events\n            if (event.which == null && rkeyEvent.test(event.type)) {\n                return event.charCode != null ? event.charCode : event.keyCode;\n            }\n            // Add which for click: 1 === left; 2 === middle; 3 === right\n            if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {\n                if (button & 1) {\n                    return 1;\n                }\n                if (button & 2) {\n                    return 3;\n                }\n                if (button & 4) {\n                    return 2;\n                }\n                return 0;\n            }\n            return event.which;\n        }\n    }, jQuery.event.addProp);\n    // Create mouseenter/leave events using mouseover/out and event-time checks\n    // so that event delegation works in jQuery.\n    // Do the same for pointerenter/pointerleave and pointerover/pointerout\n    //\n    // Support: Safari 7 only\n    // Safari sends mouseenter too often; see:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n    // for the description of the bug (it existed in older Chrome versions as well).\n    jQuery.each({\n        mouseenter: 'mouseover',\n        mouseleave: 'mouseout',\n        pointerenter: 'pointerover',\n        pointerleave: 'pointerout'\n    }, function (orig, fix) {\n        jQuery.event.special[orig] = {\n            delegateType: fix,\n            bindType: fix,\n            handle: function (event) {\n                var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;\n                // For mouseenter/leave call the handler if related is outside the target.\n                // NB: No relatedTarget if the mouse left/entered the browser window\n                if (!related || related !== target && !jQuery.contains(target, related)) {\n                    event.type = handleObj.origType;\n                    ret = handleObj.handler.apply(this, arguments);\n                    event.type = fix;\n                }\n                return ret;\n            }\n        };\n    });\n    jQuery.fn.extend({\n        on: function (types, selector, data, fn) {\n            return on(this, types, selector, data, fn);\n        },\n        one: function (types, selector, data, fn) {\n            return on(this, types, selector, data, fn, 1);\n        },\n        off: function (types, selector, fn) {\n            var handleObj, type;\n            if (types && types.preventDefault && types.handleObj) {\n                // ( event )  dispatched jQuery.Event\n                handleObj = types.handleObj;\n                jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + '.' + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n                return this;\n            }\n            if (typeof types === 'object') {\n                // ( types-object [, selector] )\n                for (type in types) {\n                    this.off(type, selector, types[type]);\n                }\n                return this;\n            }\n            if (selector === false || typeof selector === 'function') {\n                // ( types [, fn] )\n                fn = selector;\n                selector = undefined;\n            }\n            if (fn === false) {\n                fn = returnFalse;\n            }\n            return this.each(function () {\n                jQuery.event.remove(this, types, fn, selector);\n            });\n        }\n    });\n    var\n        /* eslint-disable max-len */\n        // See https://github.com/eslint/eslint/issues/3229\n        rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n        /* eslint-enable */\n        // Support: IE <=10 - 11, Edge 12 - 13\n        // In IE/Edge using regex groups here causes severe slowdowns.\n        // See https://connect.microsoft.com/IE/feedback/details/1736512/\n        rnoInnerhtml = /<script|<style|<link/i,\n        // checked=\"checked\" or checked\n        rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i, rscriptTypeMasked = /^true\\/(.*)/, rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n    // Prefer a tbody over its parent table for containing new rows\n    function manipulationTarget(elem, content) {\n        if (nodeName(elem, 'table') && nodeName(content.nodeType !== 11 ? content : content.firstChild, 'tr')) {\n            return jQuery('>tbody', elem)[0] || elem;\n        }\n        return elem;\n    }\n    // Replace/restore the type attribute of script elements for safe DOM manipulation\n    function disableScript(elem) {\n        elem.type = (elem.getAttribute('type') !== null) + '/' + elem.type;\n        return elem;\n    }\n    function restoreScript(elem) {\n        var match = rscriptTypeMasked.exec(elem.type);\n        if (match) {\n            elem.type = match[1];\n        } else {\n            elem.removeAttribute('type');\n        }\n        return elem;\n    }\n    function cloneCopyEvent(src, dest) {\n        var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n        if (dest.nodeType !== 1) {\n            return;\n        }\n        // 1. Copy private data: events, handlers, etc.\n        if (dataPriv.hasData(src)) {\n            pdataOld = dataPriv.access(src);\n            pdataCur = dataPriv.set(dest, pdataOld);\n            events = pdataOld.events;\n            if (events) {\n                delete pdataCur.handle;\n                pdataCur.events = {};\n                for (type in events) {\n                    for (i = 0, l = events[type].length; i < l; i++) {\n                        jQuery.event.add(dest, type, events[type][i]);\n                    }\n                }\n            }\n        }\n        // 2. Copy user data\n        if (dataUser.hasData(src)) {\n            udataOld = dataUser.access(src);\n            udataCur = jQuery.extend({}, udataOld);\n            dataUser.set(dest, udataCur);\n        }\n    }\n    // Fix IE bugs, see support tests\n    function fixInput(src, dest) {\n        var nodeName = dest.nodeName.toLowerCase();\n        // Fails to persist the checked state of a cloned checkbox or radio button.\n        if (nodeName === 'input' && rcheckableType.test(src.type)) {\n            dest.checked = src.checked;    // Fails to return the selected option to the default selected state when cloning options\n        } else if (nodeName === 'input' || nodeName === 'textarea') {\n            dest.defaultValue = src.defaultValue;\n        }\n    }\n    function domManip(collection, args, callback, ignored) {\n        // Flatten any nested arrays\n        args = concat.apply([], args);\n        var fragment, first, scripts, hasScripts, node, doc, i = 0, l = collection.length, iNoClone = l - 1, value = args[0], isFunction = jQuery.isFunction(value);\n        // We can't cloneNode fragments that contain checked, in WebKit\n        if (isFunction || l > 1 && typeof value === 'string' && !support.checkClone && rchecked.test(value)) {\n            return collection.each(function (index) {\n                var self = collection.eq(index);\n                if (isFunction) {\n                    args[0] = value.call(this, index, self.html());\n                }\n                domManip(self, args, callback, ignored);\n            });\n        }\n        if (l) {\n            fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n            first = fragment.firstChild;\n            if (fragment.childNodes.length === 1) {\n                fragment = first;\n            }\n            // Require either new content or an interest in ignored elements to invoke the callback\n            if (first || ignored) {\n                scripts = jQuery.map(getAll(fragment, 'script'), disableScript);\n                hasScripts = scripts.length;\n                // Use the original fragment for the last item\n                // instead of the first because it can end up\n                // being emptied incorrectly in certain situations (#8070).\n                for (; i < l; i++) {\n                    node = fragment;\n                    if (i !== iNoClone) {\n                        node = jQuery.clone(node, true, true);\n                        // Keep references to cloned scripts for later restoration\n                        if (hasScripts) {\n                            // Support: Android <=4.0 only, PhantomJS 1 only\n                            // push.apply(_, arraylike) throws on ancient WebKit\n                            jQuery.merge(scripts, getAll(node, 'script'));\n                        }\n                    }\n                    callback.call(collection[i], node, i);\n                }\n                if (hasScripts) {\n                    doc = scripts[scripts.length - 1].ownerDocument;\n                    // Reenable scripts\n                    jQuery.map(scripts, restoreScript);\n                    // Evaluate executable scripts on first document insertion\n                    for (i = 0; i < hasScripts; i++) {\n                        node = scripts[i];\n                        if (rscriptType.test(node.type || '') && !dataPriv.access(node, 'globalEval') && jQuery.contains(doc, node)) {\n                            if (node.src) {\n                                // Optional AJAX dependency, but won't run scripts if not present\n                                if (jQuery._evalUrl) {\n                                    jQuery._evalUrl(node.src);\n                                }\n                            } else {\n                                DOMEval(node.textContent.replace(rcleanScript, ''), doc);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return collection;\n    }\n    function remove(elem, selector, keepData) {\n        var node, nodes = selector ? jQuery.filter(selector, elem) : elem, i = 0;\n        for (; (node = nodes[i]) != null; i++) {\n            if (!keepData && node.nodeType === 1) {\n                jQuery.cleanData(getAll(node));\n            }\n            if (node.parentNode) {\n                if (keepData && jQuery.contains(node.ownerDocument, node)) {\n                    setGlobalEval(getAll(node, 'script'));\n                }\n                node.parentNode.removeChild(node);\n            }\n        }\n        return elem;\n    }\n    jQuery.extend({\n        htmlPrefilter: function (html) {\n            return html.replace(rxhtmlTag, '<$1></$2>');\n        },\n        clone: function (elem, dataAndEvents, deepDataAndEvents) {\n            var i, l, srcElements, destElements, clone = elem.cloneNode(true), inPage = jQuery.contains(elem.ownerDocument, elem);\n            // Fix IE cloning issues\n            if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n                // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n                destElements = getAll(clone);\n                srcElements = getAll(elem);\n                for (i = 0, l = srcElements.length; i < l; i++) {\n                    fixInput(srcElements[i], destElements[i]);\n                }\n            }\n            // Copy the events from the original to the clone\n            if (dataAndEvents) {\n                if (deepDataAndEvents) {\n                    srcElements = srcElements || getAll(elem);\n                    destElements = destElements || getAll(clone);\n                    for (i = 0, l = srcElements.length; i < l; i++) {\n                        cloneCopyEvent(srcElements[i], destElements[i]);\n                    }\n                } else {\n                    cloneCopyEvent(elem, clone);\n                }\n            }\n            // Preserve script evaluation history\n            destElements = getAll(clone, 'script');\n            if (destElements.length > 0) {\n                setGlobalEval(destElements, !inPage && getAll(elem, 'script'));\n            }\n            // Return the cloned set\n            return clone;\n        },\n        cleanData: function (elems) {\n            var data, elem, type, special = jQuery.event.special, i = 0;\n            for (; (elem = elems[i]) !== undefined; i++) {\n                if (acceptData(elem)) {\n                    if (data = elem[dataPriv.expando]) {\n                        if (data.events) {\n                            for (type in data.events) {\n                                if (special[type]) {\n                                    jQuery.event.remove(elem, type);    // This is a shortcut to avoid jQuery.event.remove's overhead\n                                } else {\n                                    jQuery.removeEvent(elem, type, data.handle);\n                                }\n                            }\n                        }\n                        // Support: Chrome <=35 - 45+\n                        // Assign undefined instead of using delete, see Data#remove\n                        elem[dataPriv.expando] = undefined;\n                    }\n                    if (elem[dataUser.expando]) {\n                        // Support: Chrome <=35 - 45+\n                        // Assign undefined instead of using delete, see Data#remove\n                        elem[dataUser.expando] = undefined;\n                    }\n                }\n            }\n        }\n    });\n    jQuery.fn.extend({\n        detach: function (selector) {\n            return remove(this, selector, true);\n        },\n        remove: function (selector) {\n            return remove(this, selector);\n        },\n        text: function (value) {\n            return access(this, function (value) {\n                return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n                    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n                        this.textContent = value;\n                    }\n                });\n            }, null, value, arguments.length);\n        },\n        append: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n                    var target = manipulationTarget(this, elem);\n                    target.appendChild(elem);\n                }\n            });\n        },\n        prepend: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n                    var target = manipulationTarget(this, elem);\n                    target.insertBefore(elem, target.firstChild);\n                }\n            });\n        },\n        before: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.parentNode) {\n                    this.parentNode.insertBefore(elem, this);\n                }\n            });\n        },\n        after: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.parentNode) {\n                    this.parentNode.insertBefore(elem, this.nextSibling);\n                }\n            });\n        },\n        empty: function () {\n            var elem, i = 0;\n            for (; (elem = this[i]) != null; i++) {\n                if (elem.nodeType === 1) {\n                    // Prevent memory leaks\n                    jQuery.cleanData(getAll(elem, false));\n                    // Remove any remaining nodes\n                    elem.textContent = '';\n                }\n            }\n            return this;\n        },\n        clone: function (dataAndEvents, deepDataAndEvents) {\n            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n            return this.map(function () {\n                return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n            });\n        },\n        html: function (value) {\n            return access(this, function (value) {\n                var elem = this[0] || {}, i = 0, l = this.length;\n                if (value === undefined && elem.nodeType === 1) {\n                    return elem.innerHTML;\n                }\n                // See if we can take a shortcut and just use innerHTML\n                if (typeof value === 'string' && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\n                        '',\n                        ''\n                    ])[1].toLowerCase()]) {\n                    value = jQuery.htmlPrefilter(value);\n                    try {\n                        for (; i < l; i++) {\n                            elem = this[i] || {};\n                            // Remove element nodes and prevent memory leaks\n                            if (elem.nodeType === 1) {\n                                jQuery.cleanData(getAll(elem, false));\n                                elem.innerHTML = value;\n                            }\n                        }\n                        elem = 0;    // If using innerHTML throws an exception, use the fallback method\n                    } catch (e) {\n                    }\n                }\n                if (elem) {\n                    this.empty().append(value);\n                }\n            }, null, value, arguments.length);\n        },\n        replaceWith: function () {\n            var ignored = [];\n            // Make the changes, replacing each non-ignored context element with the new content\n            return domManip(this, arguments, function (elem) {\n                var parent = this.parentNode;\n                if (jQuery.inArray(this, ignored) < 0) {\n                    jQuery.cleanData(getAll(this));\n                    if (parent) {\n                        parent.replaceChild(elem, this);\n                    }\n                }    // Force callback invocation\n            }, ignored);\n        }\n    });\n    jQuery.each({\n        appendTo: 'append',\n        prependTo: 'prepend',\n        insertBefore: 'before',\n        insertAfter: 'after',\n        replaceAll: 'replaceWith'\n    }, function (name, original) {\n        jQuery.fn[name] = function (selector) {\n            var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0;\n            for (; i <= last; i++) {\n                elems = i === last ? this : this.clone(true);\n                jQuery(insert[i])[original](elems);\n                // Support: Android <=4.0 only, PhantomJS 1 only\n                // .get() because push.apply(_, arraylike) throws on ancient WebKit\n                push.apply(ret, elems.get());\n            }\n            return this.pushStack(ret);\n        };\n    });\n    var rmargin = /^margin/;\n    var rnumnonpx = new RegExp('^(' + pnum + ')(?!px)[a-z%]+$', 'i');\n    var getStyles = function (elem) {\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n        // IE throws on elements created in popups\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n        var view = elem.ownerDocument.defaultView;\n        if (!view || !view.opener) {\n            view = window;\n        }\n        return view.getComputedStyle(elem);\n    };\n    (function () {\n        // Executing both pixelPosition & boxSizingReliable tests require only one layout\n        // so they're executed at the same time to save the second computation.\n        function computeStyleTests() {\n            // This is a singleton, we need to execute it only once\n            if (!div) {\n                return;\n            }\n            div.style.cssText = 'box-sizing:border-box;' + 'position:relative;display:block;' + 'margin:auto;border:1px;padding:1px;' + 'top:1%;width:50%';\n            div.innerHTML = '';\n            documentElement.appendChild(container);\n            var divStyle = window.getComputedStyle(div);\n            pixelPositionVal = divStyle.top !== '1%';\n            // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n            reliableMarginLeftVal = divStyle.marginLeft === '2px';\n            boxSizingReliableVal = divStyle.width === '4px';\n            // Support: Android 4.0 - 4.3 only\n            // Some styles come back with percentage values, even though they shouldn't\n            div.style.marginRight = '50%';\n            pixelMarginRightVal = divStyle.marginRight === '4px';\n            documentElement.removeChild(container);\n            // Nullify the div so it wouldn't be stored in the memory and\n            // it will also be a sign that checks already performed\n            div = null;\n        }\n        var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal, container = document.createElement('div'), div = document.createElement('div');\n        // Finish early in limited (non-browser) environments\n        if (!div.style) {\n            return;\n        }\n        // Support: IE <=9 - 11 only\n        // Style of cloned element affects source element cloned (#8908)\n        div.style.backgroundClip = 'content-box';\n        div.cloneNode(true).style.backgroundClip = '';\n        support.clearCloneStyle = div.style.backgroundClip === 'content-box';\n        container.style.cssText = 'border:0;width:8px;height:0;top:0;left:-9999px;' + 'padding:0;margin-top:1px;position:absolute';\n        container.appendChild(div);\n        jQuery.extend(support, {\n            pixelPosition: function () {\n                computeStyleTests();\n                return pixelPositionVal;\n            },\n            boxSizingReliable: function () {\n                computeStyleTests();\n                return boxSizingReliableVal;\n            },\n            pixelMarginRight: function () {\n                computeStyleTests();\n                return pixelMarginRightVal;\n            },\n            reliableMarginLeft: function () {\n                computeStyleTests();\n                return reliableMarginLeftVal;\n            }\n        });\n    }());\n    function curCSS(elem, name, computed) {\n        var width, minWidth, maxWidth, ret,\n            // Support: Firefox 51+\n            // Retrieving style before computed somehow\n            // fixes an issue with getting wrong values\n            // on detached elements\n            style = elem.style;\n        computed = computed || getStyles(elem);\n        // getPropertyValue is needed for:\n        //   .css('filter') (IE 9 only, #12537)\n        //   .css('--customProperty) (#3144)\n        if (computed) {\n            ret = computed.getPropertyValue(name) || computed[name];\n            if (ret === '' && !jQuery.contains(elem.ownerDocument, elem)) {\n                ret = jQuery.style(elem, name);\n            }\n            // A tribute to the \"awesome hack by Dean Edwards\"\n            // Android Browser returns percentage for some values,\n            // but width seems to be reliably pixels.\n            // This is against the CSSOM draft spec:\n            // https://drafts.csswg.org/cssom/#resolved-values\n            if (!support.pixelMarginRight() && rnumnonpx.test(ret) && rmargin.test(name)) {\n                // Remember the original values\n                width = style.width;\n                minWidth = style.minWidth;\n                maxWidth = style.maxWidth;\n                // Put in the new values to get a computed value out\n                style.minWidth = style.maxWidth = style.width = ret;\n                ret = computed.width;\n                // Revert the changed values\n                style.width = width;\n                style.minWidth = minWidth;\n                style.maxWidth = maxWidth;\n            }\n        }\n        return ret !== undefined ? // Support: IE <=9 - 11 only\n        // IE returns zIndex value as an integer.\n        ret + '' : ret;\n    }\n    function addGetHookIf(conditionFn, hookFn) {\n        // Define the hook, we'll check on the first run if it's really needed.\n        return {\n            get: function () {\n                if (conditionFn()) {\n                    // Hook not needed (or it's not possible to use it due\n                    // to missing dependency), remove it.\n                    delete this.get;\n                    return;\n                }\n                // Hook needed; redefine it so that the support test is not executed again.\n                return (this.get = hookFn).apply(this, arguments);\n            }\n        };\n    }\n    var\n        // Swappable if display is none or starts with table\n        // except \"table\", \"table-cell\", or \"table-caption\"\n        // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n        rdisplayswap = /^(none|table(?!-c[ea]).+)/, rcustomProp = /^--/, cssShow = {\n            position: 'absolute',\n            visibility: 'hidden',\n            display: 'block'\n        }, cssNormalTransform = {\n            letterSpacing: '0',\n            fontWeight: '400'\n        }, cssPrefixes = [\n            'Webkit',\n            'Moz',\n            'ms'\n        ], emptyStyle = document.createElement('div').style;\n    // Return a css property mapped to a potentially vendor prefixed property\n    function vendorPropName(name) {\n        // Shortcut for names that are not vendor prefixed\n        if (name in emptyStyle) {\n            return name;\n        }\n        // Check for vendor prefixed names\n        var capName = name[0].toUpperCase() + name.slice(1), i = cssPrefixes.length;\n        while (i--) {\n            name = cssPrefixes[i] + capName;\n            if (name in emptyStyle) {\n                return name;\n            }\n        }\n    }\n    // Return a property mapped along what jQuery.cssProps suggests or to\n    // a vendor prefixed property.\n    function finalPropName(name) {\n        var ret = jQuery.cssProps[name];\n        if (!ret) {\n            ret = jQuery.cssProps[name] = vendorPropName(name) || name;\n        }\n        return ret;\n    }\n    function setPositiveNumber(elem, value, subtract) {\n        // Any relative (+/-) values have already been\n        // normalized at this point\n        var matches = rcssNum.exec(value);\n        return matches ? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n        Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || 'px') : value;\n    }\n    function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {\n        var i, val = 0;\n        // If we already have the right measurement, avoid augmentation\n        if (extra === (isBorderBox ? 'border' : 'content')) {\n            i = 4;    // Otherwise initialize for horizontal or vertical properties\n        } else {\n            i = name === 'width' ? 1 : 0;\n        }\n        for (; i < 4; i += 2) {\n            // Both box models exclude margin, so add it if we want it\n            if (extra === 'margin') {\n                val += jQuery.css(elem, extra + cssExpand[i], true, styles);\n            }\n            if (isBorderBox) {\n                // border-box includes padding, so remove it if we want content\n                if (extra === 'content') {\n                    val -= jQuery.css(elem, 'padding' + cssExpand[i], true, styles);\n                }\n                // At this point, extra isn't border nor margin, so remove border\n                if (extra !== 'margin') {\n                    val -= jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);\n                }\n            } else {\n                // At this point, extra isn't content, so add padding\n                val += jQuery.css(elem, 'padding' + cssExpand[i], true, styles);\n                // At this point, extra isn't content nor padding, so add border\n                if (extra !== 'padding') {\n                    val += jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);\n                }\n            }\n        }\n        return val;\n    }\n    function getWidthOrHeight(elem, name, extra) {\n        // Start with computed style\n        var valueIsBorderBox, styles = getStyles(elem), val = curCSS(elem, name, styles), isBorderBox = jQuery.css(elem, 'boxSizing', false, styles) === 'border-box';\n        // Computed unit is not pixels. Stop here and return.\n        if (rnumnonpx.test(val)) {\n            return val;\n        }\n        // Check for style in case a browser which returns unreliable values\n        // for getComputedStyle silently falls back to the reliable elem.style\n        valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);\n        // Fall back to offsetWidth/Height when value is \"auto\"\n        // This happens for inline elements with no explicit setting (gh-3571)\n        if (val === 'auto') {\n            val = elem['offset' + name[0].toUpperCase() + name.slice(1)];\n        }\n        // Normalize \"\", auto, and prepare for extra\n        val = parseFloat(val) || 0;\n        // Use the active box-sizing model to add/subtract irrelevant styles\n        return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? 'border' : 'content'), valueIsBorderBox, styles) + 'px';\n    }\n    jQuery.extend({\n        // Add in style property hooks for overriding the default\n        // behavior of getting and setting a style property\n        cssHooks: {\n            opacity: {\n                get: function (elem, computed) {\n                    if (computed) {\n                        // We should always get a number back from opacity\n                        var ret = curCSS(elem, 'opacity');\n                        return ret === '' ? '1' : ret;\n                    }\n                }\n            }\n        },\n        // Don't automatically add \"px\" to these possibly-unitless properties\n        cssNumber: {\n            'animationIterationCount': true,\n            'columnCount': true,\n            'fillOpacity': true,\n            'flexGrow': true,\n            'flexShrink': true,\n            'fontWeight': true,\n            'lineHeight': true,\n            'opacity': true,\n            'order': true,\n            'orphans': true,\n            'widows': true,\n            'zIndex': true,\n            'zoom': true\n        },\n        // Add in properties whose names you wish to fix before\n        // setting or getting the value\n        cssProps: { 'float': 'cssFloat' },\n        // Get and set the style property on a DOM Node\n        style: function (elem, name, value, extra) {\n            // Don't set styles on text and comment nodes\n            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n                return;\n            }\n            // Make sure that we're working with the right name\n            var ret, type, hooks, origName = jQuery.camelCase(name), isCustomProp = rcustomProp.test(name), style = elem.style;\n            // Make sure that we're working with the right name. We don't\n            // want to query the value if it is a CSS custom property\n            // since they are user-defined.\n            if (!isCustomProp) {\n                name = finalPropName(origName);\n            }\n            // Gets hook for the prefixed version, then unprefixed version\n            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n            // Check if we're setting a value\n            if (value !== undefined) {\n                type = typeof value;\n                // Convert \"+=\" or \"-=\" to relative numbers (#7345)\n                if (type === 'string' && (ret = rcssNum.exec(value)) && ret[1]) {\n                    value = adjustCSS(elem, name, ret);\n                    // Fixes bug #9237\n                    type = 'number';\n                }\n                // Make sure that null and NaN values aren't set (#7116)\n                if (value == null || value !== value) {\n                    return;\n                }\n                // If a number was passed in, add the unit (except for certain CSS properties)\n                if (type === 'number') {\n                    value += ret && ret[3] || (jQuery.cssNumber[origName] ? '' : 'px');\n                }\n                // background-* props affect original clone's values\n                if (!support.clearCloneStyle && value === '' && name.indexOf('background') === 0) {\n                    style[name] = 'inherit';\n                }\n                // If a hook was provided, use that value, otherwise just set the specified value\n                if (!hooks || !('set' in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n                    if (isCustomProp) {\n                        style.setProperty(name, value);\n                    } else {\n                        style[name] = value;\n                    }\n                }\n            } else {\n                // If a hook was provided get the non-computed value from there\n                if (hooks && 'get' in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n                    return ret;\n                }\n                // Otherwise just get the value from the style object\n                return style[name];\n            }\n        },\n        css: function (elem, name, extra, styles) {\n            var val, num, hooks, origName = jQuery.camelCase(name), isCustomProp = rcustomProp.test(name);\n            // Make sure that we're working with the right name. We don't\n            // want to modify the value if it is a CSS custom property\n            // since they are user-defined.\n            if (!isCustomProp) {\n                name = finalPropName(origName);\n            }\n            // Try prefixed name followed by the unprefixed name\n            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n            // If a hook was provided get the computed value from there\n            if (hooks && 'get' in hooks) {\n                val = hooks.get(elem, true, extra);\n            }\n            // Otherwise, if a way to get the computed value exists, use that\n            if (val === undefined) {\n                val = curCSS(elem, name, styles);\n            }\n            // Convert \"normal\" to computed value\n            if (val === 'normal' && name in cssNormalTransform) {\n                val = cssNormalTransform[name];\n            }\n            // Make numeric if forced or a qualifier was provided and val looks numeric\n            if (extra === '' || extra) {\n                num = parseFloat(val);\n                return extra === true || isFinite(num) ? num || 0 : val;\n            }\n            return val;\n        }\n    });\n    jQuery.each([\n        'height',\n        'width'\n    ], function (i, name) {\n        jQuery.cssHooks[name] = {\n            get: function (elem, computed, extra) {\n                if (computed) {\n                    // Certain elements can have dimension info if we invisibly show them\n                    // but it must have a current display style that would benefit\n                    return rdisplayswap.test(jQuery.css(elem, 'display')) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n                        return getWidthOrHeight(elem, name, extra);\n                    }) : getWidthOrHeight(elem, name, extra);\n                }\n            },\n            set: function (elem, value, extra) {\n                var matches, styles = extra && getStyles(elem), subtract = extra && augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, 'boxSizing', false, styles) === 'border-box', styles);\n                // Convert to pixels if value adjustment is needed\n                if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || 'px') !== 'px') {\n                    elem.style[name] = value;\n                    value = jQuery.css(elem, name);\n                }\n                return setPositiveNumber(elem, value, subtract);\n            }\n        };\n    });\n    jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n        if (computed) {\n            return (parseFloat(curCSS(elem, 'marginLeft')) || elem.getBoundingClientRect().left - swap(elem, { marginLeft: 0 }, function () {\n                return elem.getBoundingClientRect().left;\n            })) + 'px';\n        }\n    });\n    // These hooks are used by animate to expand properties\n    jQuery.each({\n        margin: '',\n        padding: '',\n        border: 'Width'\n    }, function (prefix, suffix) {\n        jQuery.cssHooks[prefix + suffix] = {\n            expand: function (value) {\n                var i = 0, expanded = {},\n                    // Assumes a single number if not a string\n                    parts = typeof value === 'string' ? value.split(' ') : [value];\n                for (; i < 4; i++) {\n                    expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n                }\n                return expanded;\n            }\n        };\n        if (!rmargin.test(prefix)) {\n            jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n        }\n    });\n    jQuery.fn.extend({\n        css: function (name, value) {\n            return access(this, function (elem, name, value) {\n                var styles, len, map = {}, i = 0;\n                if (Array.isArray(name)) {\n                    styles = getStyles(elem);\n                    len = name.length;\n                    for (; i < len; i++) {\n                        map[name[i]] = jQuery.css(elem, name[i], false, styles);\n                    }\n                    return map;\n                }\n                return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n            }, name, value, arguments.length > 1);\n        }\n    });\n    function Tween(elem, options, prop, end, easing) {\n        return new Tween.prototype.init(elem, options, prop, end, easing);\n    }\n    jQuery.Tween = Tween;\n    Tween.prototype = {\n        constructor: Tween,\n        init: function (elem, options, prop, end, easing, unit) {\n            this.elem = elem;\n            this.prop = prop;\n            this.easing = easing || jQuery.easing._default;\n            this.options = options;\n            this.start = this.now = this.cur();\n            this.end = end;\n            this.unit = unit || (jQuery.cssNumber[prop] ? '' : 'px');\n        },\n        cur: function () {\n            var hooks = Tween.propHooks[this.prop];\n            return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n        },\n        run: function (percent) {\n            var eased, hooks = Tween.propHooks[this.prop];\n            if (this.options.duration) {\n                this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n            } else {\n                this.pos = eased = percent;\n            }\n            this.now = (this.end - this.start) * eased + this.start;\n            if (this.options.step) {\n                this.options.step.call(this.elem, this.now, this);\n            }\n            if (hooks && hooks.set) {\n                hooks.set(this);\n            } else {\n                Tween.propHooks._default.set(this);\n            }\n            return this;\n        }\n    };\n    Tween.prototype.init.prototype = Tween.prototype;\n    Tween.propHooks = {\n        _default: {\n            get: function (tween) {\n                var result;\n                // Use a property on the element directly when it is not a DOM element,\n                // or when there is no matching style property that exists.\n                if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n                    return tween.elem[tween.prop];\n                }\n                // Passing an empty string as a 3rd parameter to .css will automatically\n                // attempt a parseFloat and fallback to a string if the parse fails.\n                // Simple values such as \"10px\" are parsed to Float;\n                // complex values such as \"rotate(1rad)\" are returned as-is.\n                result = jQuery.css(tween.elem, tween.prop, '');\n                // Empty strings, null, undefined and \"auto\" are converted to 0.\n                return !result || result === 'auto' ? 0 : result;\n            },\n            set: function (tween) {\n                // Use step hook for back compat.\n                // Use cssHook if its there.\n                // Use .style if available and use plain properties where available.\n                if (jQuery.fx.step[tween.prop]) {\n                    jQuery.fx.step[tween.prop](tween);\n                } else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {\n                    jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n                } else {\n                    tween.elem[tween.prop] = tween.now;\n                }\n            }\n        }\n    };\n    // Support: IE <=9 only\n    // Panic based approach to setting things on disconnected nodes\n    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n        set: function (tween) {\n            if (tween.elem.nodeType && tween.elem.parentNode) {\n                tween.elem[tween.prop] = tween.now;\n            }\n        }\n    };\n    jQuery.easing = {\n        linear: function (p) {\n            return p;\n        },\n        swing: function (p) {\n            return 0.5 - Math.cos(p * Math.PI) / 2;\n        },\n        _default: 'swing'\n    };\n    jQuery.fx = Tween.prototype.init;\n    // Back compat <1.8 extension point\n    jQuery.fx.step = {};\n    var fxNow, inProgress, rfxtypes = /^(?:toggle|show|hide)$/, rrun = /queueHooks$/;\n    function schedule() {\n        if (inProgress) {\n            if (document.hidden === false && window.requestAnimationFrame) {\n                window.requestAnimationFrame(schedule);\n            } else {\n                window.setTimeout(schedule, jQuery.fx.interval);\n            }\n            jQuery.fx.tick();\n        }\n    }\n    // Animations created synchronously will run synchronously\n    function createFxNow() {\n        window.setTimeout(function () {\n            fxNow = undefined;\n        });\n        return fxNow = jQuery.now();\n    }\n    // Generate parameters to create a standard animation\n    function genFx(type, includeWidth) {\n        var which, i = 0, attrs = { height: type };\n        // If we include width, step value is 1 to do all cssExpand values,\n        // otherwise step value is 2 to skip over Left and Right\n        includeWidth = includeWidth ? 1 : 0;\n        for (; i < 4; i += 2 - includeWidth) {\n            which = cssExpand[i];\n            attrs['margin' + which] = attrs['padding' + which] = type;\n        }\n        if (includeWidth) {\n            attrs.opacity = attrs.width = type;\n        }\n        return attrs;\n    }\n    function createTween(value, prop, animation) {\n        var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners['*']), index = 0, length = collection.length;\n        for (; index < length; index++) {\n            if (tween = collection[index].call(animation, prop, value)) {\n                // We're done with this property\n                return tween;\n            }\n        }\n    }\n    function defaultPrefilter(elem, props, opts) {\n        var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, isBox = 'width' in props || 'height' in props, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHiddenWithinTree(elem), dataShow = dataPriv.get(elem, 'fxshow');\n        // Queue-skipping animations hijack the fx hooks\n        if (!opts.queue) {\n            hooks = jQuery._queueHooks(elem, 'fx');\n            if (hooks.unqueued == null) {\n                hooks.unqueued = 0;\n                oldfire = hooks.empty.fire;\n                hooks.empty.fire = function () {\n                    if (!hooks.unqueued) {\n                        oldfire();\n                    }\n                };\n            }\n            hooks.unqueued++;\n            anim.always(function () {\n                // Ensure the complete handler is called before this completes\n                anim.always(function () {\n                    hooks.unqueued--;\n                    if (!jQuery.queue(elem, 'fx').length) {\n                        hooks.empty.fire();\n                    }\n                });\n            });\n        }\n        // Detect show/hide animations\n        for (prop in props) {\n            value = props[prop];\n            if (rfxtypes.test(value)) {\n                delete props[prop];\n                toggle = toggle || value === 'toggle';\n                if (value === (hidden ? 'hide' : 'show')) {\n                    // Pretend to be hidden if this is a \"show\" and\n                    // there is still data from a stopped show/hide\n                    if (value === 'show' && dataShow && dataShow[prop] !== undefined) {\n                        hidden = true;    // Ignore all other no-op show/hide data\n                    } else {\n                        continue;\n                    }\n                }\n                orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n            }\n        }\n        // Bail out if this is a no-op like .hide().hide()\n        propTween = !jQuery.isEmptyObject(props);\n        if (!propTween && jQuery.isEmptyObject(orig)) {\n            return;\n        }\n        // Restrict \"overflow\" and \"display\" styles during box animations\n        if (isBox && elem.nodeType === 1) {\n            // Support: IE <=9 - 11, Edge 12 - 13\n            // Record all 3 overflow attributes because IE does not infer the shorthand\n            // from identically-valued overflowX and overflowY\n            opts.overflow = [\n                style.overflow,\n                style.overflowX,\n                style.overflowY\n            ];\n            // Identify a display type, preferring old show/hide data over the CSS cascade\n            restoreDisplay = dataShow && dataShow.display;\n            if (restoreDisplay == null) {\n                restoreDisplay = dataPriv.get(elem, 'display');\n            }\n            display = jQuery.css(elem, 'display');\n            if (display === 'none') {\n                if (restoreDisplay) {\n                    display = restoreDisplay;\n                } else {\n                    // Get nonempty value(s) by temporarily forcing visibility\n                    showHide([elem], true);\n                    restoreDisplay = elem.style.display || restoreDisplay;\n                    display = jQuery.css(elem, 'display');\n                    showHide([elem]);\n                }\n            }\n            // Animate inline elements as inline-block\n            if (display === 'inline' || display === 'inline-block' && restoreDisplay != null) {\n                if (jQuery.css(elem, 'float') === 'none') {\n                    // Restore the original display value at the end of pure show/hide animations\n                    if (!propTween) {\n                        anim.done(function () {\n                            style.display = restoreDisplay;\n                        });\n                        if (restoreDisplay == null) {\n                            display = style.display;\n                            restoreDisplay = display === 'none' ? '' : display;\n                        }\n                    }\n                    style.display = 'inline-block';\n                }\n            }\n        }\n        if (opts.overflow) {\n            style.overflow = 'hidden';\n            anim.always(function () {\n                style.overflow = opts.overflow[0];\n                style.overflowX = opts.overflow[1];\n                style.overflowY = opts.overflow[2];\n            });\n        }\n        // Implement show/hide animations\n        propTween = false;\n        for (prop in orig) {\n            // General show/hide setup for this element animation\n            if (!propTween) {\n                if (dataShow) {\n                    if ('hidden' in dataShow) {\n                        hidden = dataShow.hidden;\n                    }\n                } else {\n                    dataShow = dataPriv.access(elem, 'fxshow', { display: restoreDisplay });\n                }\n                // Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n                if (toggle) {\n                    dataShow.hidden = !hidden;\n                }\n                // Show elements before animating them\n                if (hidden) {\n                    showHide([elem], true);\n                }\n                /* eslint-disable no-loop-func */\n                anim.done(function () {\n                    /* eslint-enable no-loop-func */\n                    // The final step of a \"hide\" animation is actually hiding the element\n                    if (!hidden) {\n                        showHide([elem]);\n                    }\n                    dataPriv.remove(elem, 'fxshow');\n                    for (prop in orig) {\n                        jQuery.style(elem, prop, orig[prop]);\n                    }\n                });\n            }\n            // Per-property setup\n            propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n            if (!(prop in dataShow)) {\n                dataShow[prop] = propTween.start;\n                if (hidden) {\n                    propTween.end = propTween.start;\n                    propTween.start = 0;\n                }\n            }\n        }\n    }\n    function propFilter(props, specialEasing) {\n        var index, name, easing, value, hooks;\n        // camelCase, specialEasing and expand cssHook pass\n        for (index in props) {\n            name = jQuery.camelCase(index);\n            easing = specialEasing[name];\n            value = props[index];\n            if (Array.isArray(value)) {\n                easing = value[1];\n                value = props[index] = value[0];\n            }\n            if (index !== name) {\n                props[name] = value;\n                delete props[index];\n            }\n            hooks = jQuery.cssHooks[name];\n            if (hooks && 'expand' in hooks) {\n                value = hooks.expand(value);\n                delete props[name];\n                // Not quite $.extend, this won't overwrite existing keys.\n                // Reusing 'index' because we have the correct \"name\"\n                for (index in value) {\n                    if (!(index in props)) {\n                        props[index] = value[index];\n                        specialEasing[index] = easing;\n                    }\n                }\n            } else {\n                specialEasing[name] = easing;\n            }\n        }\n    }\n    function Animation(elem, properties, options) {\n        var result, stopped, index = 0, length = Animation.prefilters.length, deferred = jQuery.Deferred().always(function () {\n                // Don't match elem in the :animated selector\n                delete tick.elem;\n            }), tick = function () {\n                if (stopped) {\n                    return false;\n                }\n                var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n                    // Support: Android 2.3 only\n                    // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n                    temp = remaining / animation.duration || 0, percent = 1 - temp, index = 0, length = animation.tweens.length;\n                for (; index < length; index++) {\n                    animation.tweens[index].run(percent);\n                }\n                deferred.notifyWith(elem, [\n                    animation,\n                    percent,\n                    remaining\n                ]);\n                // If there's more to do, yield\n                if (percent < 1 && length) {\n                    return remaining;\n                }\n                // If this was an empty animation, synthesize a final progress notification\n                if (!length) {\n                    deferred.notifyWith(elem, [\n                        animation,\n                        1,\n                        0\n                    ]);\n                }\n                // Resolve the animation and report its conclusion\n                deferred.resolveWith(elem, [animation]);\n                return false;\n            }, animation = deferred.promise({\n                elem: elem,\n                props: jQuery.extend({}, properties),\n                opts: jQuery.extend(true, {\n                    specialEasing: {},\n                    easing: jQuery.easing._default\n                }, options),\n                originalProperties: properties,\n                originalOptions: options,\n                startTime: fxNow || createFxNow(),\n                duration: options.duration,\n                tweens: [],\n                createTween: function (prop, end) {\n                    var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n                    animation.tweens.push(tween);\n                    return tween;\n                },\n                stop: function (gotoEnd) {\n                    var index = 0,\n                        // If we are going to the end, we want to run all the tweens\n                        // otherwise we skip this part\n                        length = gotoEnd ? animation.tweens.length : 0;\n                    if (stopped) {\n                        return this;\n                    }\n                    stopped = true;\n                    for (; index < length; index++) {\n                        animation.tweens[index].run(1);\n                    }\n                    // Resolve when we played the last frame; otherwise, reject\n                    if (gotoEnd) {\n                        deferred.notifyWith(elem, [\n                            animation,\n                            1,\n                            0\n                        ]);\n                        deferred.resolveWith(elem, [\n                            animation,\n                            gotoEnd\n                        ]);\n                    } else {\n                        deferred.rejectWith(elem, [\n                            animation,\n                            gotoEnd\n                        ]);\n                    }\n                    return this;\n                }\n            }), props = animation.props;\n        propFilter(props, animation.opts.specialEasing);\n        for (; index < length; index++) {\n            result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n            if (result) {\n                if (jQuery.isFunction(result.stop)) {\n                    jQuery._queueHooks(animation.elem, animation.opts.queue).stop = jQuery.proxy(result.stop, result);\n                }\n                return result;\n            }\n        }\n        jQuery.map(props, createTween, animation);\n        if (jQuery.isFunction(animation.opts.start)) {\n            animation.opts.start.call(elem, animation);\n        }\n        // Attach callbacks from options\n        animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n        jQuery.fx.timer(jQuery.extend(tick, {\n            elem: elem,\n            anim: animation,\n            queue: animation.opts.queue\n        }));\n        return animation;\n    }\n    jQuery.Animation = jQuery.extend(Animation, {\n        tweeners: {\n            '*': [function (prop, value) {\n                    var tween = this.createTween(prop, value);\n                    adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n                    return tween;\n                }]\n        },\n        tweener: function (props, callback) {\n            if (jQuery.isFunction(props)) {\n                callback = props;\n                props = ['*'];\n            } else {\n                props = props.match(rnothtmlwhite);\n            }\n            var prop, index = 0, length = props.length;\n            for (; index < length; index++) {\n                prop = props[index];\n                Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n                Animation.tweeners[prop].unshift(callback);\n            }\n        },\n        prefilters: [defaultPrefilter],\n        prefilter: function (callback, prepend) {\n            if (prepend) {\n                Animation.prefilters.unshift(callback);\n            } else {\n                Animation.prefilters.push(callback);\n            }\n        }\n    });\n    jQuery.speed = function (speed, easing, fn) {\n        var opt = speed && typeof speed === 'object' ? jQuery.extend({}, speed) : {\n            complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,\n            duration: speed,\n            easing: fn && easing || easing && !jQuery.isFunction(easing) && easing\n        };\n        // Go to the end state if fx are off\n        if (jQuery.fx.off) {\n            opt.duration = 0;\n        } else {\n            if (typeof opt.duration !== 'number') {\n                if (opt.duration in jQuery.fx.speeds) {\n                    opt.duration = jQuery.fx.speeds[opt.duration];\n                } else {\n                    opt.duration = jQuery.fx.speeds._default;\n                }\n            }\n        }\n        // Normalize opt.queue - true/undefined/null -> \"fx\"\n        if (opt.queue == null || opt.queue === true) {\n            opt.queue = 'fx';\n        }\n        // Queueing\n        opt.old = opt.complete;\n        opt.complete = function () {\n            if (jQuery.isFunction(opt.old)) {\n                opt.old.call(this);\n            }\n            if (opt.queue) {\n                jQuery.dequeue(this, opt.queue);\n            }\n        };\n        return opt;\n    };\n    jQuery.fn.extend({\n        fadeTo: function (speed, to, easing, callback) {\n            // Show any hidden elements after setting opacity to 0\n            return this.filter(isHiddenWithinTree).css('opacity', 0).show()    // Animate to the value specified\n.end().animate({ opacity: to }, speed, easing, callback);\n        },\n        animate: function (prop, speed, easing, callback) {\n            var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback), doAnimation = function () {\n                    // Operate on a copy of prop so per-property easing won't be lost\n                    var anim = Animation(this, jQuery.extend({}, prop), optall);\n                    // Empty animations, or finishing resolves immediately\n                    if (empty || dataPriv.get(this, 'finish')) {\n                        anim.stop(true);\n                    }\n                };\n            doAnimation.finish = doAnimation;\n            return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n        },\n        stop: function (type, clearQueue, gotoEnd) {\n            var stopQueue = function (hooks) {\n                var stop = hooks.stop;\n                delete hooks.stop;\n                stop(gotoEnd);\n            };\n            if (typeof type !== 'string') {\n                gotoEnd = clearQueue;\n                clearQueue = type;\n                type = undefined;\n            }\n            if (clearQueue && type !== false) {\n                this.queue(type || 'fx', []);\n            }\n            return this.each(function () {\n                var dequeue = true, index = type != null && type + 'queueHooks', timers = jQuery.timers, data = dataPriv.get(this);\n                if (index) {\n                    if (data[index] && data[index].stop) {\n                        stopQueue(data[index]);\n                    }\n                } else {\n                    for (index in data) {\n                        if (data[index] && data[index].stop && rrun.test(index)) {\n                            stopQueue(data[index]);\n                        }\n                    }\n                }\n                for (index = timers.length; index--;) {\n                    if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n                        timers[index].anim.stop(gotoEnd);\n                        dequeue = false;\n                        timers.splice(index, 1);\n                    }\n                }\n                // Start the next in the queue if the last step wasn't forced.\n                // Timers currently will call their complete callbacks, which\n                // will dequeue but only if they were gotoEnd.\n                if (dequeue || !gotoEnd) {\n                    jQuery.dequeue(this, type);\n                }\n            });\n        },\n        finish: function (type) {\n            if (type !== false) {\n                type = type || 'fx';\n            }\n            return this.each(function () {\n                var index, data = dataPriv.get(this), queue = data[type + 'queue'], hooks = data[type + 'queueHooks'], timers = jQuery.timers, length = queue ? queue.length : 0;\n                // Enable finishing flag on private data\n                data.finish = true;\n                // Empty the queue first\n                jQuery.queue(this, type, []);\n                if (hooks && hooks.stop) {\n                    hooks.stop.call(this, true);\n                }\n                // Look for any active animations, and finish them\n                for (index = timers.length; index--;) {\n                    if (timers[index].elem === this && timers[index].queue === type) {\n                        timers[index].anim.stop(true);\n                        timers.splice(index, 1);\n                    }\n                }\n                // Look for any animations in the old queue and finish them\n                for (index = 0; index < length; index++) {\n                    if (queue[index] && queue[index].finish) {\n                        queue[index].finish.call(this);\n                    }\n                }\n                // Turn off finishing flag\n                delete data.finish;\n            });\n        }\n    });\n    jQuery.each([\n        'toggle',\n        'show',\n        'hide'\n    ], function (i, name) {\n        var cssFn = jQuery.fn[name];\n        jQuery.fn[name] = function (speed, easing, callback) {\n            return speed == null || typeof speed === 'boolean' ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n        };\n    });\n    // Generate shortcuts for custom animations\n    jQuery.each({\n        slideDown: genFx('show'),\n        slideUp: genFx('hide'),\n        slideToggle: genFx('toggle'),\n        fadeIn: { opacity: 'show' },\n        fadeOut: { opacity: 'hide' },\n        fadeToggle: { opacity: 'toggle' }\n    }, function (name, props) {\n        jQuery.fn[name] = function (speed, easing, callback) {\n            return this.animate(props, speed, easing, callback);\n        };\n    });\n    jQuery.timers = [];\n    jQuery.fx.tick = function () {\n        var timer, i = 0, timers = jQuery.timers;\n        fxNow = jQuery.now();\n        for (; i < timers.length; i++) {\n            timer = timers[i];\n            // Run the timer and safely remove it when done (allowing for external removal)\n            if (!timer() && timers[i] === timer) {\n                timers.splice(i--, 1);\n            }\n        }\n        if (!timers.length) {\n            jQuery.fx.stop();\n        }\n        fxNow = undefined;\n    };\n    jQuery.fx.timer = function (timer) {\n        jQuery.timers.push(timer);\n        jQuery.fx.start();\n    };\n    jQuery.fx.interval = 13;\n    jQuery.fx.start = function () {\n        if (inProgress) {\n            return;\n        }\n        inProgress = true;\n        schedule();\n    };\n    jQuery.fx.stop = function () {\n        inProgress = null;\n    };\n    jQuery.fx.speeds = {\n        slow: 600,\n        fast: 200,\n        // Default speed\n        _default: 400\n    };\n    // Based off of the plugin by Clint Helfers, with permission.\n    // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n    jQuery.fn.delay = function (time, type) {\n        time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n        type = type || 'fx';\n        return this.queue(type, function (next, hooks) {\n            var timeout = window.setTimeout(next, time);\n            hooks.stop = function () {\n                window.clearTimeout(timeout);\n            };\n        });\n    };\n    (function () {\n        var input = document.createElement('input'), select = document.createElement('select'), opt = select.appendChild(document.createElement('option'));\n        input.type = 'checkbox';\n        // Support: Android <=4.3 only\n        // Default value for a checkbox should be \"on\"\n        support.checkOn = input.value !== '';\n        // Support: IE <=11 only\n        // Must access selectedIndex to make default options select\n        support.optSelected = opt.selected;\n        // Support: IE <=11 only\n        // An input loses its value after becoming a radio\n        input = document.createElement('input');\n        input.value = 't';\n        input.type = 'radio';\n        support.radioValue = input.value === 't';\n    }());\n    var boolHook, attrHandle = jQuery.expr.attrHandle;\n    jQuery.fn.extend({\n        attr: function (name, value) {\n            return access(this, jQuery.attr, name, value, arguments.length > 1);\n        },\n        removeAttr: function (name) {\n            return this.each(function () {\n                jQuery.removeAttr(this, name);\n            });\n        }\n    });\n    jQuery.extend({\n        attr: function (elem, name, value) {\n            var ret, hooks, nType = elem.nodeType;\n            // Don't get/set attributes on text, comment and attribute nodes\n            if (nType === 3 || nType === 8 || nType === 2) {\n                return;\n            }\n            // Fallback to prop when attributes are not supported\n            if (typeof elem.getAttribute === 'undefined') {\n                return jQuery.prop(elem, name, value);\n            }\n            // Attribute hooks are determined by the lowercase version\n            // Grab necessary hook if one is defined\n            if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n                hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n            }\n            if (value !== undefined) {\n                if (value === null) {\n                    jQuery.removeAttr(elem, name);\n                    return;\n                }\n                if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n                    return ret;\n                }\n                elem.setAttribute(name, value + '');\n                return value;\n            }\n            if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {\n                return ret;\n            }\n            ret = jQuery.find.attr(elem, name);\n            // Non-existent attributes return null, we normalize to undefined\n            return ret == null ? undefined : ret;\n        },\n        attrHooks: {\n            type: {\n                set: function (elem, value) {\n                    if (!support.radioValue && value === 'radio' && nodeName(elem, 'input')) {\n                        var val = elem.value;\n                        elem.setAttribute('type', value);\n                        if (val) {\n                            elem.value = val;\n                        }\n                        return value;\n                    }\n                }\n            }\n        },\n        removeAttr: function (elem, value) {\n            var name, i = 0,\n                // Attribute names can contain non-HTML whitespace characters\n                // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n                attrNames = value && value.match(rnothtmlwhite);\n            if (attrNames && elem.nodeType === 1) {\n                while (name = attrNames[i++]) {\n                    elem.removeAttribute(name);\n                }\n            }\n        }\n    });\n    // Hooks for boolean attributes\n    boolHook = {\n        set: function (elem, value, name) {\n            if (value === false) {\n                // Remove boolean attributes when set to false\n                jQuery.removeAttr(elem, name);\n            } else {\n                elem.setAttribute(name, name);\n            }\n            return name;\n        }\n    };\n    jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (i, name) {\n        var getter = attrHandle[name] || jQuery.find.attr;\n        attrHandle[name] = function (elem, name, isXML) {\n            var ret, handle, lowercaseName = name.toLowerCase();\n            if (!isXML) {\n                // Avoid an infinite loop by temporarily removing this function from the getter\n                handle = attrHandle[lowercaseName];\n                attrHandle[lowercaseName] = ret;\n                ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n                attrHandle[lowercaseName] = handle;\n            }\n            return ret;\n        };\n    });\n    var rfocusable = /^(?:input|select|textarea|button)$/i, rclickable = /^(?:a|area)$/i;\n    jQuery.fn.extend({\n        prop: function (name, value) {\n            return access(this, jQuery.prop, name, value, arguments.length > 1);\n        },\n        removeProp: function (name) {\n            return this.each(function () {\n                delete this[jQuery.propFix[name] || name];\n            });\n        }\n    });\n    jQuery.extend({\n        prop: function (elem, name, value) {\n            var ret, hooks, nType = elem.nodeType;\n            // Don't get/set properties on text, comment and attribute nodes\n            if (nType === 3 || nType === 8 || nType === 2) {\n                return;\n            }\n            if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n                // Fix name and attach hooks\n                name = jQuery.propFix[name] || name;\n                hooks = jQuery.propHooks[name];\n            }\n            if (value !== undefined) {\n                if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n                    return ret;\n                }\n                return elem[name] = value;\n            }\n            if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {\n                return ret;\n            }\n            return elem[name];\n        },\n        propHooks: {\n            tabIndex: {\n                get: function (elem) {\n                    // Support: IE <=9 - 11 only\n                    // elem.tabIndex doesn't always return the\n                    // correct value when it hasn't been explicitly set\n                    // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n                    // Use proper attribute retrieval(#12072)\n                    var tabindex = jQuery.find.attr(elem, 'tabindex');\n                    if (tabindex) {\n                        return parseInt(tabindex, 10);\n                    }\n                    if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n                        return 0;\n                    }\n                    return -1;\n                }\n            }\n        },\n        propFix: {\n            'for': 'htmlFor',\n            'class': 'className'\n        }\n    });\n    // Support: IE <=11 only\n    // Accessing the selectedIndex property\n    // forces the browser to respect setting selected\n    // on the option\n    // The getter ensures a default option is selected\n    // when in an optgroup\n    // eslint rule \"no-unused-expressions\" is disabled for this code\n    // since it considers such accessions noop\n    if (!support.optSelected) {\n        jQuery.propHooks.selected = {\n            get: function (elem) {\n                /* eslint no-unused-expressions: \"off\" */\n                var parent = elem.parentNode;\n                if (parent && parent.parentNode) {\n                    parent.parentNode.selectedIndex;\n                }\n                return null;\n            },\n            set: function (elem) {\n                /* eslint no-unused-expressions: \"off\" */\n                var parent = elem.parentNode;\n                if (parent) {\n                    parent.selectedIndex;\n                    if (parent.parentNode) {\n                        parent.parentNode.selectedIndex;\n                    }\n                }\n            }\n        };\n    }\n    jQuery.each([\n        'tabIndex',\n        'readOnly',\n        'maxLength',\n        'cellSpacing',\n        'cellPadding',\n        'rowSpan',\n        'colSpan',\n        'useMap',\n        'frameBorder',\n        'contentEditable'\n    ], function () {\n        jQuery.propFix[this.toLowerCase()] = this;\n    });\n    // Strip and collapse whitespace according to HTML spec\n    // https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace\n    function stripAndCollapse(value) {\n        var tokens = value.match(rnothtmlwhite) || [];\n        return tokens.join(' ');\n    }\n    function getClass(elem) {\n        return elem.getAttribute && elem.getAttribute('class') || '';\n    }\n    jQuery.fn.extend({\n        addClass: function (value) {\n            var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;\n            if (jQuery.isFunction(value)) {\n                return this.each(function (j) {\n                    jQuery(this).addClass(value.call(this, j, getClass(this)));\n                });\n            }\n            if (typeof value === 'string' && value) {\n                classes = value.match(rnothtmlwhite) || [];\n                while (elem = this[i++]) {\n                    curValue = getClass(elem);\n                    cur = elem.nodeType === 1 && ' ' + stripAndCollapse(curValue) + ' ';\n                    if (cur) {\n                        j = 0;\n                        while (clazz = classes[j++]) {\n                            if (cur.indexOf(' ' + clazz + ' ') < 0) {\n                                cur += clazz + ' ';\n                            }\n                        }\n                        // Only assign if different to avoid unneeded rendering.\n                        finalValue = stripAndCollapse(cur);\n                        if (curValue !== finalValue) {\n                            elem.setAttribute('class', finalValue);\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeClass: function (value) {\n            var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;\n            if (jQuery.isFunction(value)) {\n                return this.each(function (j) {\n                    jQuery(this).removeClass(value.call(this, j, getClass(this)));\n                });\n            }\n            if (!arguments.length) {\n                return this.attr('class', '');\n            }\n            if (typeof value === 'string' && value) {\n                classes = value.match(rnothtmlwhite) || [];\n                while (elem = this[i++]) {\n                    curValue = getClass(elem);\n                    // This expression is here for better compressibility (see addClass)\n                    cur = elem.nodeType === 1 && ' ' + stripAndCollapse(curValue) + ' ';\n                    if (cur) {\n                        j = 0;\n                        while (clazz = classes[j++]) {\n                            // Remove *all* instances\n                            while (cur.indexOf(' ' + clazz + ' ') > -1) {\n                                cur = cur.replace(' ' + clazz + ' ', ' ');\n                            }\n                        }\n                        // Only assign if different to avoid unneeded rendering.\n                        finalValue = stripAndCollapse(cur);\n                        if (curValue !== finalValue) {\n                            elem.setAttribute('class', finalValue);\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        toggleClass: function (value, stateVal) {\n            var type = typeof value;\n            if (typeof stateVal === 'boolean' && type === 'string') {\n                return stateVal ? this.addClass(value) : this.removeClass(value);\n            }\n            if (jQuery.isFunction(value)) {\n                return this.each(function (i) {\n                    jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n                });\n            }\n            return this.each(function () {\n                var className, i, self, classNames;\n                if (type === 'string') {\n                    // Toggle individual class names\n                    i = 0;\n                    self = jQuery(this);\n                    classNames = value.match(rnothtmlwhite) || [];\n                    while (className = classNames[i++]) {\n                        // Check each className given, space separated list\n                        if (self.hasClass(className)) {\n                            self.removeClass(className);\n                        } else {\n                            self.addClass(className);\n                        }\n                    }    // Toggle whole class name\n                } else if (value === undefined || type === 'boolean') {\n                    className = getClass(this);\n                    if (className) {\n                        // Store className if set\n                        dataPriv.set(this, '__className__', className);\n                    }\n                    // If the element has a class name or if we're passed `false`,\n                    // then remove the whole classname (if there was one, the above saved it).\n                    // Otherwise bring back whatever was previously saved (if anything),\n                    // falling back to the empty string if nothing was stored.\n                    if (this.setAttribute) {\n                        this.setAttribute('class', className || value === false ? '' : dataPriv.get(this, '__className__') || '');\n                    }\n                }\n            });\n        },\n        hasClass: function (selector) {\n            var className, elem, i = 0;\n            className = ' ' + selector + ' ';\n            while (elem = this[i++]) {\n                if (elem.nodeType === 1 && (' ' + stripAndCollapse(getClass(elem)) + ' ').indexOf(className) > -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    });\n    var rreturn = /\\r/g;\n    jQuery.fn.extend({\n        val: function (value) {\n            var hooks, ret, isFunction, elem = this[0];\n            if (!arguments.length) {\n                if (elem) {\n                    hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n                    if (hooks && 'get' in hooks && (ret = hooks.get(elem, 'value')) !== undefined) {\n                        return ret;\n                    }\n                    ret = elem.value;\n                    // Handle most common string cases\n                    if (typeof ret === 'string') {\n                        return ret.replace(rreturn, '');\n                    }\n                    // Handle cases where value is null/undef or number\n                    return ret == null ? '' : ret;\n                }\n                return;\n            }\n            isFunction = jQuery.isFunction(value);\n            return this.each(function (i) {\n                var val;\n                if (this.nodeType !== 1) {\n                    return;\n                }\n                if (isFunction) {\n                    val = value.call(this, i, jQuery(this).val());\n                } else {\n                    val = value;\n                }\n                // Treat null/undefined as \"\"; convert numbers to string\n                if (val == null) {\n                    val = '';\n                } else if (typeof val === 'number') {\n                    val += '';\n                } else if (Array.isArray(val)) {\n                    val = jQuery.map(val, function (value) {\n                        return value == null ? '' : value + '';\n                    });\n                }\n                hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];\n                // If set returns undefined, fall back to normal setting\n                if (!hooks || !('set' in hooks) || hooks.set(this, val, 'value') === undefined) {\n                    this.value = val;\n                }\n            });\n        }\n    });\n    jQuery.extend({\n        valHooks: {\n            option: {\n                get: function (elem) {\n                    var val = jQuery.find.attr(elem, 'value');\n                    return val != null ? val : // Support: IE <=10 - 11 only\n                    // option.text throws exceptions (#14686, #14858)\n                    // Strip and collapse whitespace\n                    // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n                    stripAndCollapse(jQuery.text(elem));\n                }\n            },\n            select: {\n                get: function (elem) {\n                    var value, option, i, options = elem.options, index = elem.selectedIndex, one = elem.type === 'select-one', values = one ? null : [], max = one ? index + 1 : options.length;\n                    if (index < 0) {\n                        i = max;\n                    } else {\n                        i = one ? index : 0;\n                    }\n                    // Loop through all the selected options\n                    for (; i < max; i++) {\n                        option = options[i];\n                        // Support: IE <=9 only\n                        // IE8-9 doesn't update selected after form reset (#2551)\n                        if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup\n                            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, 'optgroup'))) {\n                            // Get the specific value for the option\n                            value = jQuery(option).val();\n                            // We don't need an array for one selects\n                            if (one) {\n                                return value;\n                            }\n                            // Multi-Selects return an array\n                            values.push(value);\n                        }\n                    }\n                    return values;\n                },\n                set: function (elem, value) {\n                    var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length;\n                    while (i--) {\n                        option = options[i];\n                        /* eslint-disable no-cond-assign */\n                        if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n                            optionSet = true;\n                        }    /* eslint-enable no-cond-assign */\n                    }\n                    // Force browsers to behave consistently when non-matching value is set\n                    if (!optionSet) {\n                        elem.selectedIndex = -1;\n                    }\n                    return values;\n                }\n            }\n        }\n    });\n    // Radios and checkboxes getter/setter\n    jQuery.each([\n        'radio',\n        'checkbox'\n    ], function () {\n        jQuery.valHooks[this] = {\n            set: function (elem, value) {\n                if (Array.isArray(value)) {\n                    return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n                }\n            }\n        };\n        if (!support.checkOn) {\n            jQuery.valHooks[this].get = function (elem) {\n                return elem.getAttribute('value') === null ? 'on' : elem.value;\n            };\n        }\n    });\n    // Return jQuery for attributes-only inclusion\n    var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n    jQuery.extend(jQuery.event, {\n        trigger: function (event, data, elem, onlyHandlers) {\n            var i, cur, tmp, bubbleType, ontype, handle, special, eventPath = [elem || document], type = hasOwn.call(event, 'type') ? event.type : event, namespaces = hasOwn.call(event, 'namespace') ? event.namespace.split('.') : [];\n            cur = tmp = elem = elem || document;\n            // Don't do events on text and comment nodes\n            if (elem.nodeType === 3 || elem.nodeType === 8) {\n                return;\n            }\n            // focus/blur morphs to focusin/out; ensure we're not firing them right now\n            if (rfocusMorph.test(type + jQuery.event.triggered)) {\n                return;\n            }\n            if (type.indexOf('.') > -1) {\n                // Namespaced trigger; create a regexp to match event type in handle()\n                namespaces = type.split('.');\n                type = namespaces.shift();\n                namespaces.sort();\n            }\n            ontype = type.indexOf(':') < 0 && 'on' + type;\n            // Caller can pass in a jQuery.Event object, Object, or just an event type string\n            event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === 'object' && event);\n            // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n            event.isTrigger = onlyHandlers ? 2 : 3;\n            event.namespace = namespaces.join('.');\n            event.rnamespace = event.namespace ? new RegExp('(^|\\\\.)' + namespaces.join('\\\\.(?:.*\\\\.|)') + '(\\\\.|$)') : null;\n            // Clean up the event in case it is being reused\n            event.result = undefined;\n            if (!event.target) {\n                event.target = elem;\n            }\n            // Clone any incoming data and prepend the event, creating the handler arg list\n            data = data == null ? [event] : jQuery.makeArray(data, [event]);\n            // Allow special events to draw outside the lines\n            special = jQuery.event.special[type] || {};\n            if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n                return;\n            }\n            // Determine event propagation path in advance, per W3C events spec (#9951)\n            // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n            if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {\n                bubbleType = special.delegateType || type;\n                if (!rfocusMorph.test(bubbleType + type)) {\n                    cur = cur.parentNode;\n                }\n                for (; cur; cur = cur.parentNode) {\n                    eventPath.push(cur);\n                    tmp = cur;\n                }\n                // Only add window if we got to document (e.g., not plain obj or detached DOM)\n                if (tmp === (elem.ownerDocument || document)) {\n                    eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n                }\n            }\n            // Fire handlers on the event path\n            i = 0;\n            while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n                event.type = i > 1 ? bubbleType : special.bindType || type;\n                // jQuery handler\n                handle = (dataPriv.get(cur, 'events') || {})[event.type] && dataPriv.get(cur, 'handle');\n                if (handle) {\n                    handle.apply(cur, data);\n                }\n                // Native handler\n                handle = ontype && cur[ontype];\n                if (handle && handle.apply && acceptData(cur)) {\n                    event.result = handle.apply(cur, data);\n                    if (event.result === false) {\n                        event.preventDefault();\n                    }\n                }\n            }\n            event.type = type;\n            // If nobody prevented the default action, do it now\n            if (!onlyHandlers && !event.isDefaultPrevented()) {\n                if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n                    // Call a native DOM method on the target with the same name as the event.\n                    // Don't do default actions on window, that's where global variables be (#6170)\n                    if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {\n                        // Don't re-trigger an onFOO event when we call its FOO() method\n                        tmp = elem[ontype];\n                        if (tmp) {\n                            elem[ontype] = null;\n                        }\n                        // Prevent re-triggering of the same event, since we already bubbled it above\n                        jQuery.event.triggered = type;\n                        elem[type]();\n                        jQuery.event.triggered = undefined;\n                        if (tmp) {\n                            elem[ontype] = tmp;\n                        }\n                    }\n                }\n            }\n            return event.result;\n        },\n        // Piggyback on a donor event to simulate a different one\n        // Used only for `focus(in | out)` events\n        simulate: function (type, elem, event) {\n            var e = jQuery.extend(new jQuery.Event(), event, {\n                type: type,\n                isSimulated: true\n            });\n            jQuery.event.trigger(e, null, elem);\n        }\n    });\n    jQuery.fn.extend({\n        trigger: function (type, data) {\n            return this.each(function () {\n                jQuery.event.trigger(type, data, this);\n            });\n        },\n        triggerHandler: function (type, data) {\n            var elem = this[0];\n            if (elem) {\n                return jQuery.event.trigger(type, data, elem, true);\n            }\n        }\n    });\n    jQuery.each(('blur focus focusin focusout resize scroll click dblclick ' + 'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' + 'change select submit keydown keypress keyup contextmenu').split(' '), function (i, name) {\n        // Handle event binding\n        jQuery.fn[name] = function (data, fn) {\n            return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n        };\n    });\n    jQuery.fn.extend({\n        hover: function (fnOver, fnOut) {\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n        }\n    });\n    support.focusin = 'onfocusin' in window;\n    // Support: Firefox <=44\n    // Firefox doesn't have focus(in | out) events\n    // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n    //\n    // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n    // focus(in | out) events fire after focus & blur events,\n    // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n    // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n    if (!support.focusin) {\n        jQuery.each({\n            focus: 'focusin',\n            blur: 'focusout'\n        }, function (orig, fix) {\n            // Attach a single capturing handler on the document while someone wants focusin/focusout\n            var handler = function (event) {\n                jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n            };\n            jQuery.event.special[fix] = {\n                setup: function () {\n                    var doc = this.ownerDocument || this, attaches = dataPriv.access(doc, fix);\n                    if (!attaches) {\n                        doc.addEventListener(orig, handler, true);\n                    }\n                    dataPriv.access(doc, fix, (attaches || 0) + 1);\n                },\n                teardown: function () {\n                    var doc = this.ownerDocument || this, attaches = dataPriv.access(doc, fix) - 1;\n                    if (!attaches) {\n                        doc.removeEventListener(orig, handler, true);\n                        dataPriv.remove(doc, fix);\n                    } else {\n                        dataPriv.access(doc, fix, attaches);\n                    }\n                }\n            };\n        });\n    }\n    var location = window.location;\n    var nonce = jQuery.now();\n    var rquery = /\\?/;\n    // Cross-browser xml parsing\n    jQuery.parseXML = function (data) {\n        var xml;\n        if (!data || typeof data !== 'string') {\n            return null;\n        }\n        // Support: IE 9 - 11 only\n        // IE throws on parseFromString with invalid input.\n        try {\n            xml = new window.DOMParser().parseFromString(data, 'text/xml');\n        } catch (e) {\n            xml = undefined;\n        }\n        if (!xml || xml.getElementsByTagName('parsererror').length) {\n            jQuery.error('Invalid XML: ' + data);\n        }\n        return xml;\n    };\n    var rbracket = /\\[\\]$/, rCRLF = /\\r?\\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;\n    function buildParams(prefix, obj, traditional, add) {\n        var name;\n        if (Array.isArray(obj)) {\n            // Serialize array item.\n            jQuery.each(obj, function (i, v) {\n                if (traditional || rbracket.test(prefix)) {\n                    // Treat each array item as a scalar.\n                    add(prefix, v);\n                } else {\n                    // Item is non-scalar (array or object), encode its numeric index.\n                    buildParams(prefix + '[' + (typeof v === 'object' && v != null ? i : '') + ']', v, traditional, add);\n                }\n            });\n        } else if (!traditional && jQuery.type(obj) === 'object') {\n            // Serialize object item.\n            for (name in obj) {\n                buildParams(prefix + '[' + name + ']', obj[name], traditional, add);\n            }\n        } else {\n            // Serialize scalar item.\n            add(prefix, obj);\n        }\n    }\n    // Serialize an array of form elements or a set of\n    // key/values into a query string\n    jQuery.param = function (a, traditional) {\n        var prefix, s = [], add = function (key, valueOrFunction) {\n                // If value is a function, invoke it and use its return value\n                var value = jQuery.isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n                s[s.length] = encodeURIComponent(key) + '=' + encodeURIComponent(value == null ? '' : value);\n            };\n        // If an array was passed in, assume that it is an array of form elements.\n        if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n            // Serialize the form elements\n            jQuery.each(a, function () {\n                add(this.name, this.value);\n            });\n        } else {\n            // If traditional, encode the \"old\" way (the way 1.3.2 or older\n            // did it), otherwise encode params recursively.\n            for (prefix in a) {\n                buildParams(prefix, a[prefix], traditional, add);\n            }\n        }\n        // Return the resulting serialization\n        return s.join('&');\n    };\n    jQuery.fn.extend({\n        serialize: function () {\n            return jQuery.param(this.serializeArray());\n        },\n        serializeArray: function () {\n            return this.map(function () {\n                // Can add propHook for \"elements\" to filter or add form elements\n                var elements = jQuery.prop(this, 'elements');\n                return elements ? jQuery.makeArray(elements) : this;\n            }).filter(function () {\n                var type = this.type;\n                // Use .is( \":disabled\" ) so that fieldset[disabled] works\n                return this.name && !jQuery(this).is(':disabled') && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n            }).map(function (i, elem) {\n                var val = jQuery(this).val();\n                if (val == null) {\n                    return null;\n                }\n                if (Array.isArray(val)) {\n                    return jQuery.map(val, function (val) {\n                        return {\n                            name: elem.name,\n                            value: val.replace(rCRLF, '\\r\\n')\n                        };\n                    });\n                }\n                return {\n                    name: elem.name,\n                    value: val.replace(rCRLF, '\\r\\n')\n                };\n            }).get();\n        }\n    });\n    var r20 = /%20/g, rhash = /#.*$/, rantiCache = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n        // #7653, #8125, #8152: local protocol detection\n        rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\\/\\//,\n        /* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n        prefilters = {},\n        /* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n        transports = {},\n        // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n        allTypes = '*/'.concat('*'),\n        // Anchor tag for parsing the document origin\n        originAnchor = document.createElement('a');\n    originAnchor.href = location.href;\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n    function addToPrefiltersOrTransports(structure) {\n        // dataTypeExpression is optional and defaults to \"*\"\n        return function (dataTypeExpression, func) {\n            if (typeof dataTypeExpression !== 'string') {\n                func = dataTypeExpression;\n                dataTypeExpression = '*';\n            }\n            var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n            if (jQuery.isFunction(func)) {\n                // For each dataType in the dataTypeExpression\n                while (dataType = dataTypes[i++]) {\n                    // Prepend if requested\n                    if (dataType[0] === '+') {\n                        dataType = dataType.slice(1) || '*';\n                        (structure[dataType] = structure[dataType] || []).unshift(func);    // Otherwise append\n                    } else {\n                        (structure[dataType] = structure[dataType] || []).push(func);\n                    }\n                }\n            }\n        };\n    }\n    // Base inspection function for prefilters and transports\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n        var inspected = {}, seekingTransport = structure === transports;\n        function inspect(dataType) {\n            var selected;\n            inspected[dataType] = true;\n            jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n                if (typeof dataTypeOrTransport === 'string' && !seekingTransport && !inspected[dataTypeOrTransport]) {\n                    options.dataTypes.unshift(dataTypeOrTransport);\n                    inspect(dataTypeOrTransport);\n                    return false;\n                } else if (seekingTransport) {\n                    return !(selected = dataTypeOrTransport);\n                }\n            });\n            return selected;\n        }\n        return inspect(options.dataTypes[0]) || !inspected['*'] && inspect('*');\n    }\n    // A special extend for ajax options\n    // that takes \"flat\" options (not to be deep extended)\n    // Fixes #9887\n    function ajaxExtend(target, src) {\n        var key, deep, flatOptions = jQuery.ajaxSettings.flatOptions || {};\n        for (key in src) {\n            if (src[key] !== undefined) {\n                (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n            }\n        }\n        if (deep) {\n            jQuery.extend(true, target, deep);\n        }\n        return target;\n    }\n    /* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\n    function ajaxHandleResponses(s, jqXHR, responses) {\n        var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes;\n        // Remove auto dataType and get content-type in the process\n        while (dataTypes[0] === '*') {\n            dataTypes.shift();\n            if (ct === undefined) {\n                ct = s.mimeType || jqXHR.getResponseHeader('Content-Type');\n            }\n        }\n        // Check if we're dealing with a known content-type\n        if (ct) {\n            for (type in contents) {\n                if (contents[type] && contents[type].test(ct)) {\n                    dataTypes.unshift(type);\n                    break;\n                }\n            }\n        }\n        // Check to see if we have a response for the expected dataType\n        if (dataTypes[0] in responses) {\n            finalDataType = dataTypes[0];\n        } else {\n            // Try convertible dataTypes\n            for (type in responses) {\n                if (!dataTypes[0] || s.converters[type + ' ' + dataTypes[0]]) {\n                    finalDataType = type;\n                    break;\n                }\n                if (!firstDataType) {\n                    firstDataType = type;\n                }\n            }\n            // Or just use first one\n            finalDataType = finalDataType || firstDataType;\n        }\n        // If we found a dataType\n        // We add the dataType to the list if needed\n        // and return the corresponding response\n        if (finalDataType) {\n            if (finalDataType !== dataTypes[0]) {\n                dataTypes.unshift(finalDataType);\n            }\n            return responses[finalDataType];\n        }\n    }\n    /* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\n    function ajaxConvert(s, response, jqXHR, isSuccess) {\n        var conv2, current, conv, tmp, prev, converters = {},\n            // Work with a copy of dataTypes in case we need to modify it for conversion\n            dataTypes = s.dataTypes.slice();\n        // Create converters map with lowercased keys\n        if (dataTypes[1]) {\n            for (conv in s.converters) {\n                converters[conv.toLowerCase()] = s.converters[conv];\n            }\n        }\n        current = dataTypes.shift();\n        // Convert to each sequential dataType\n        while (current) {\n            if (s.responseFields[current]) {\n                jqXHR[s.responseFields[current]] = response;\n            }\n            // Apply the dataFilter if provided\n            if (!prev && isSuccess && s.dataFilter) {\n                response = s.dataFilter(response, s.dataType);\n            }\n            prev = current;\n            current = dataTypes.shift();\n            if (current) {\n                // There's only work to do if current dataType is non-auto\n                if (current === '*') {\n                    current = prev;    // Convert response if prev dataType is non-auto and differs from current\n                } else if (prev !== '*' && prev !== current) {\n                    // Seek a direct converter\n                    conv = converters[prev + ' ' + current] || converters['* ' + current];\n                    // If none found, seek a pair\n                    if (!conv) {\n                        for (conv2 in converters) {\n                            // If conv2 outputs current\n                            tmp = conv2.split(' ');\n                            if (tmp[1] === current) {\n                                // If prev can be converted to accepted input\n                                conv = converters[prev + ' ' + tmp[0]] || converters['* ' + tmp[0]];\n                                if (conv) {\n                                    // Condense equivalence converters\n                                    if (conv === true) {\n                                        conv = converters[conv2];    // Otherwise, insert the intermediate dataType\n                                    } else if (converters[conv2] !== true) {\n                                        current = tmp[0];\n                                        dataTypes.unshift(tmp[1]);\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    // Apply converter (if not an equivalence)\n                    if (conv !== true) {\n                        // Unless errors are allowed to bubble, catch and return them\n                        if (conv && s.throws) {\n                            response = conv(response);\n                        } else {\n                            try {\n                                response = conv(response);\n                            } catch (e) {\n                                return {\n                                    state: 'parsererror',\n                                    error: conv ? e : 'No conversion from ' + prev + ' to ' + current\n                                };\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return {\n            state: 'success',\n            data: response\n        };\n    }\n    jQuery.extend({\n        // Counter for holding the number of active queries\n        active: 0,\n        // Last-Modified header cache for next request\n        lastModified: {},\n        etag: {},\n        ajaxSettings: {\n            url: location.href,\n            type: 'GET',\n            isLocal: rlocalProtocol.test(location.protocol),\n            global: true,\n            processData: true,\n            async: true,\n            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n            /*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n            accepts: {\n                '*': allTypes,\n                text: 'text/plain',\n                html: 'text/html',\n                xml: 'application/xml, text/xml',\n                json: 'application/json, text/javascript'\n            },\n            contents: {\n                xml: /\\bxml\\b/,\n                html: /\\bhtml/,\n                json: /\\bjson\\b/\n            },\n            responseFields: {\n                xml: 'responseXML',\n                text: 'responseText',\n                json: 'responseJSON'\n            },\n            // Data converters\n            // Keys separate source (or catchall \"*\") and destination types with a single space\n            converters: {\n                // Convert anything to text\n                '* text': String,\n                // Text to html (true = no transformation)\n                'text html': true,\n                // Evaluate text as a json expression\n                'text json': JSON.parse,\n                // Parse text as xml\n                'text xml': jQuery.parseXML\n            },\n            // For options that shouldn't be deep extended:\n            // you can add your own custom options here if\n            // and when you create one that shouldn't be\n            // deep extended (see ajaxExtend)\n            flatOptions: {\n                url: true,\n                context: true\n            }\n        },\n        // Creates a full fledged settings object into target\n        // with both ajaxSettings and settings fields.\n        // If target is omitted, writes into ajaxSettings.\n        ajaxSetup: function (target, settings) {\n            return settings ? // Building a settings object\n            ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings\n            ajaxExtend(jQuery.ajaxSettings, target);\n        },\n        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n        ajaxTransport: addToPrefiltersOrTransports(transports),\n        // Main method\n        ajax: function (url, options) {\n            // If url is an object, simulate pre-1.5 signature\n            if (typeof url === 'object') {\n                options = url;\n                url = undefined;\n            }\n            // Force options to be an object\n            options = options || {};\n            var transport,\n                // URL without anti-cache param\n                cacheURL,\n                // Response headers\n                responseHeadersString, responseHeaders,\n                // timeout handle\n                timeoutTimer,\n                // Url cleanup var\n                urlAnchor,\n                // Request state (becomes false upon send and true upon completion)\n                completed,\n                // To know if global events are to be dispatched\n                fireGlobals,\n                // Loop variable\n                i,\n                // uncached part of the url\n                uncached,\n                // Create the final options object\n                s = jQuery.ajaxSetup({}, options),\n                // Callbacks context\n                callbackContext = s.context || s,\n                // Context for global events is callbackContext if it is a DOM node or jQuery collection\n                globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n                // Deferreds\n                deferred = jQuery.Deferred(), completeDeferred = jQuery.Callbacks('once memory'),\n                // Status-dependent callbacks\n                statusCode = s.statusCode || {},\n                // Headers (they are sent all at once)\n                requestHeaders = {}, requestHeadersNames = {},\n                // Default abort message\n                strAbort = 'canceled',\n                // Fake xhr\n                jqXHR = {\n                    readyState: 0,\n                    // Builds headers hashtable if needed\n                    getResponseHeader: function (key) {\n                        var match;\n                        if (completed) {\n                            if (!responseHeaders) {\n                                responseHeaders = {};\n                                while (match = rheaders.exec(responseHeadersString)) {\n                                    responseHeaders[match[1].toLowerCase()] = match[2];\n                                }\n                            }\n                            match = responseHeaders[key.toLowerCase()];\n                        }\n                        return match == null ? null : match;\n                    },\n                    // Raw string\n                    getAllResponseHeaders: function () {\n                        return completed ? responseHeadersString : null;\n                    },\n                    // Caches the header\n                    setRequestHeader: function (name, value) {\n                        if (completed == null) {\n                            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n                            requestHeaders[name] = value;\n                        }\n                        return this;\n                    },\n                    // Overrides response content-type header\n                    overrideMimeType: function (type) {\n                        if (completed == null) {\n                            s.mimeType = type;\n                        }\n                        return this;\n                    },\n                    // Status-dependent callbacks\n                    statusCode: function (map) {\n                        var code;\n                        if (map) {\n                            if (completed) {\n                                // Execute the appropriate callbacks\n                                jqXHR.always(map[jqXHR.status]);\n                            } else {\n                                // Lazy-add the new callbacks in a way that preserves old ones\n                                for (code in map) {\n                                    statusCode[code] = [\n                                        statusCode[code],\n                                        map[code]\n                                    ];\n                                }\n                            }\n                        }\n                        return this;\n                    },\n                    // Cancel the request\n                    abort: function (statusText) {\n                        var finalText = statusText || strAbort;\n                        if (transport) {\n                            transport.abort(finalText);\n                        }\n                        done(0, finalText);\n                        return this;\n                    }\n                };\n            // Attach deferreds\n            deferred.promise(jqXHR);\n            // Add protocol if not provided (prefilters might expect it)\n            // Handle falsy url in the settings object (#10093: consistency with old signature)\n            // We also use the url parameter if available\n            s.url = ((url || s.url || location.href) + '').replace(rprotocol, location.protocol + '//');\n            // Alias method option to type as per ticket #12004\n            s.type = options.method || options.type || s.method || s.type;\n            // Extract dataTypes list\n            s.dataTypes = (s.dataType || '*').toLowerCase().match(rnothtmlwhite) || [''];\n            // A cross-domain request is in order when the origin doesn't match the current origin.\n            if (s.crossDomain == null) {\n                urlAnchor = document.createElement('a');\n                // Support: IE <=8 - 11, Edge 12 - 13\n                // IE throws exception on accessing the href property if url is malformed,\n                // e.g. http://example.com:80x/\n                try {\n                    urlAnchor.href = s.url;\n                    // Support: IE <=8 - 11 only\n                    // Anchor's host property isn't correctly set when s.url is relative\n                    urlAnchor.href = urlAnchor.href;\n                    s.crossDomain = originAnchor.protocol + '//' + originAnchor.host !== urlAnchor.protocol + '//' + urlAnchor.host;\n                } catch (e) {\n                    // If there is an error parsing the URL, assume it is crossDomain,\n                    // it can be rejected by the transport if it is invalid\n                    s.crossDomain = true;\n                }\n            }\n            // Convert data if not already a string\n            if (s.data && s.processData && typeof s.data !== 'string') {\n                s.data = jQuery.param(s.data, s.traditional);\n            }\n            // Apply prefilters\n            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);\n            // If request was aborted inside a prefilter, stop there\n            if (completed) {\n                return jqXHR;\n            }\n            // We can fire global events as of now if asked to\n            // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n            fireGlobals = jQuery.event && s.global;\n            // Watch for a new set of requests\n            if (fireGlobals && jQuery.active++ === 0) {\n                jQuery.event.trigger('ajaxStart');\n            }\n            // Uppercase the type\n            s.type = s.type.toUpperCase();\n            // Determine if request has content\n            s.hasContent = !rnoContent.test(s.type);\n            // Save the URL in case we're toying with the If-Modified-Since\n            // and/or If-None-Match header later on\n            // Remove hash to simplify url manipulation\n            cacheURL = s.url.replace(rhash, '');\n            // More options handling for requests with no content\n            if (!s.hasContent) {\n                // Remember the hash so we can put it back\n                uncached = s.url.slice(cacheURL.length);\n                // If data is available, append data to url\n                if (s.data) {\n                    cacheURL += (rquery.test(cacheURL) ? '&' : '?') + s.data;\n                    // #9682: remove data so that it's not used in an eventual retry\n                    delete s.data;\n                }\n                // Add or update anti-cache param if needed\n                if (s.cache === false) {\n                    cacheURL = cacheURL.replace(rantiCache, '$1');\n                    uncached = (rquery.test(cacheURL) ? '&' : '?') + '_=' + nonce++ + uncached;\n                }\n                // Put hash and anti-cache on the URL that will be requested (gh-1732)\n                s.url = cacheURL + uncached;    // Change '%20' to '+' if this is encoded form body content (gh-2658)\n            } else if (s.data && s.processData && (s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0) {\n                s.data = s.data.replace(r20, '+');\n            }\n            // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n            if (s.ifModified) {\n                if (jQuery.lastModified[cacheURL]) {\n                    jqXHR.setRequestHeader('If-Modified-Since', jQuery.lastModified[cacheURL]);\n                }\n                if (jQuery.etag[cacheURL]) {\n                    jqXHR.setRequestHeader('If-None-Match', jQuery.etag[cacheURL]);\n                }\n            }\n            // Set the correct header, if data is being sent\n            if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n                jqXHR.setRequestHeader('Content-Type', s.contentType);\n            }\n            // Set the Accepts header for the server, depending on the dataType\n            jqXHR.setRequestHeader('Accept', s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== '*' ? ', ' + allTypes + '; q=0.01' : '') : s.accepts['*']);\n            // Check for headers option\n            for (i in s.headers) {\n                jqXHR.setRequestHeader(i, s.headers[i]);\n            }\n            // Allow custom headers/mimetypes and early abort\n            if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n                // Abort if not done already and return\n                return jqXHR.abort();\n            }\n            // Aborting is no longer a cancellation\n            strAbort = 'abort';\n            // Install callbacks on deferreds\n            completeDeferred.add(s.complete);\n            jqXHR.done(s.success);\n            jqXHR.fail(s.error);\n            // Get transport\n            transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);\n            // If no transport, we auto-abort\n            if (!transport) {\n                done(-1, 'No Transport');\n            } else {\n                jqXHR.readyState = 1;\n                // Send global event\n                if (fireGlobals) {\n                    globalEventContext.trigger('ajaxSend', [\n                        jqXHR,\n                        s\n                    ]);\n                }\n                // If request was aborted inside ajaxSend, stop there\n                if (completed) {\n                    return jqXHR;\n                }\n                // Timeout\n                if (s.async && s.timeout > 0) {\n                    timeoutTimer = window.setTimeout(function () {\n                        jqXHR.abort('timeout');\n                    }, s.timeout);\n                }\n                try {\n                    completed = false;\n                    transport.send(requestHeaders, done);\n                } catch (e) {\n                    // Rethrow post-completion exceptions\n                    if (completed) {\n                        throw e;\n                    }\n                    // Propagate others as results\n                    done(-1, e);\n                }\n            }\n            // Callback for when everything is done\n            function done(status, nativeStatusText, responses, headers) {\n                var isSuccess, success, error, response, modified, statusText = nativeStatusText;\n                // Ignore repeat invocations\n                if (completed) {\n                    return;\n                }\n                completed = true;\n                // Clear timeout if it exists\n                if (timeoutTimer) {\n                    window.clearTimeout(timeoutTimer);\n                }\n                // Dereference transport for early garbage collection\n                // (no matter how long the jqXHR object will be used)\n                transport = undefined;\n                // Cache response headers\n                responseHeadersString = headers || '';\n                // Set readyState\n                jqXHR.readyState = status > 0 ? 4 : 0;\n                // Determine if successful\n                isSuccess = status >= 200 && status < 300 || status === 304;\n                // Get response data\n                if (responses) {\n                    response = ajaxHandleResponses(s, jqXHR, responses);\n                }\n                // Convert no matter what (that way responseXXX fields are always set)\n                response = ajaxConvert(s, response, jqXHR, isSuccess);\n                // If successful, handle type chaining\n                if (isSuccess) {\n                    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n                    if (s.ifModified) {\n                        modified = jqXHR.getResponseHeader('Last-Modified');\n                        if (modified) {\n                            jQuery.lastModified[cacheURL] = modified;\n                        }\n                        modified = jqXHR.getResponseHeader('etag');\n                        if (modified) {\n                            jQuery.etag[cacheURL] = modified;\n                        }\n                    }\n                    // if no content\n                    if (status === 204 || s.type === 'HEAD') {\n                        statusText = 'nocontent';    // if not modified\n                    } else if (status === 304) {\n                        statusText = 'notmodified';    // If we have data, let's convert it\n                    } else {\n                        statusText = response.state;\n                        success = response.data;\n                        error = response.error;\n                        isSuccess = !error;\n                    }\n                } else {\n                    // Extract error from statusText and normalize for non-aborts\n                    error = statusText;\n                    if (status || !statusText) {\n                        statusText = 'error';\n                        if (status < 0) {\n                            status = 0;\n                        }\n                    }\n                }\n                // Set data for the fake xhr object\n                jqXHR.status = status;\n                jqXHR.statusText = (nativeStatusText || statusText) + '';\n                // Success/Error\n                if (isSuccess) {\n                    deferred.resolveWith(callbackContext, [\n                        success,\n                        statusText,\n                        jqXHR\n                    ]);\n                } else {\n                    deferred.rejectWith(callbackContext, [\n                        jqXHR,\n                        statusText,\n                        error\n                    ]);\n                }\n                // Status-dependent callbacks\n                jqXHR.statusCode(statusCode);\n                statusCode = undefined;\n                if (fireGlobals) {\n                    globalEventContext.trigger(isSuccess ? 'ajaxSuccess' : 'ajaxError', [\n                        jqXHR,\n                        s,\n                        isSuccess ? success : error\n                    ]);\n                }\n                // Complete\n                completeDeferred.fireWith(callbackContext, [\n                    jqXHR,\n                    statusText\n                ]);\n                if (fireGlobals) {\n                    globalEventContext.trigger('ajaxComplete', [\n                        jqXHR,\n                        s\n                    ]);\n                    // Handle the global AJAX counter\n                    if (!--jQuery.active) {\n                        jQuery.event.trigger('ajaxStop');\n                    }\n                }\n            }\n            return jqXHR;\n        },\n        getJSON: function (url, data, callback) {\n            return jQuery.get(url, data, callback, 'json');\n        },\n        getScript: function (url, callback) {\n            return jQuery.get(url, undefined, callback, 'script');\n        }\n    });\n    jQuery.each([\n        'get',\n        'post'\n    ], function (i, method) {\n        jQuery[method] = function (url, data, callback, type) {\n            // Shift arguments if data argument was omitted\n            if (jQuery.isFunction(data)) {\n                type = type || callback;\n                callback = data;\n                data = undefined;\n            }\n            // The url can be an options object (which then must have .url)\n            return jQuery.ajax(jQuery.extend({\n                url: url,\n                type: method,\n                dataType: type,\n                data: data,\n                success: callback\n            }, jQuery.isPlainObject(url) && url));\n        };\n    });\n    jQuery._evalUrl = function (url) {\n        return jQuery.ajax({\n            url: url,\n            // Make this explicit, since user can override this through ajaxSetup (#11264)\n            type: 'GET',\n            dataType: 'script',\n            cache: true,\n            async: false,\n            global: false,\n            'throws': true\n        });\n    };\n    jQuery.fn.extend({\n        wrapAll: function (html) {\n            var wrap;\n            if (this[0]) {\n                if (jQuery.isFunction(html)) {\n                    html = html.call(this[0]);\n                }\n                // The elements to wrap the target around\n                wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n                if (this[0].parentNode) {\n                    wrap.insertBefore(this[0]);\n                }\n                wrap.map(function () {\n                    var elem = this;\n                    while (elem.firstElementChild) {\n                        elem = elem.firstElementChild;\n                    }\n                    return elem;\n                }).append(this);\n            }\n            return this;\n        },\n        wrapInner: function (html) {\n            if (jQuery.isFunction(html)) {\n                return this.each(function (i) {\n                    jQuery(this).wrapInner(html.call(this, i));\n                });\n            }\n            return this.each(function () {\n                var self = jQuery(this), contents = self.contents();\n                if (contents.length) {\n                    contents.wrapAll(html);\n                } else {\n                    self.append(html);\n                }\n            });\n        },\n        wrap: function (html) {\n            var isFunction = jQuery.isFunction(html);\n            return this.each(function (i) {\n                jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\n            });\n        },\n        unwrap: function (selector) {\n            this.parent(selector).not('body').each(function () {\n                jQuery(this).replaceWith(this.childNodes);\n            });\n            return this;\n        }\n    });\n    jQuery.expr.pseudos.hidden = function (elem) {\n        return !jQuery.expr.pseudos.visible(elem);\n    };\n    jQuery.expr.pseudos.visible = function (elem) {\n        return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n    };\n    jQuery.ajaxSettings.xhr = function () {\n        try {\n            return new window.XMLHttpRequest();\n        } catch (e) {\n        }\n    };\n    var xhrSuccessStatus = {\n            // File protocol always yields status code 0, assume 200\n            0: 200,\n            // Support: IE <=9 only\n            // #1450: sometimes IE returns 1223 when it should be 204\n            1223: 204\n        }, xhrSupported = jQuery.ajaxSettings.xhr();\n    support.cors = !!xhrSupported && 'withCredentials' in xhrSupported;\n    support.ajax = xhrSupported = !!xhrSupported;\n    jQuery.ajaxTransport(function (options) {\n        var callback, errorCallback;\n        // Cross domain only allowed if supported through XMLHttpRequest\n        if (support.cors || xhrSupported && !options.crossDomain) {\n            return {\n                send: function (headers, complete) {\n                    var i, xhr = options.xhr();\n                    xhr.open(options.type, options.url, options.async, options.username, options.password);\n                    // Apply custom fields if provided\n                    if (options.xhrFields) {\n                        for (i in options.xhrFields) {\n                            xhr[i] = options.xhrFields[i];\n                        }\n                    }\n                    // Override mime type if needed\n                    if (options.mimeType && xhr.overrideMimeType) {\n                        xhr.overrideMimeType(options.mimeType);\n                    }\n                    // X-Requested-With header\n                    // For cross-domain requests, seeing as conditions for a preflight are\n                    // akin to a jigsaw puzzle, we simply never set it to be sure.\n                    // (it can always be set on a per-request basis or even using ajaxSetup)\n                    // For same-domain requests, won't change header if already provided.\n                    if (!options.crossDomain && !headers['X-Requested-With']) {\n                        headers['X-Requested-With'] = 'XMLHttpRequest';\n                    }\n                    // Set headers\n                    for (i in headers) {\n                        xhr.setRequestHeader(i, headers[i]);\n                    }\n                    // Callback\n                    callback = function (type) {\n                        return function () {\n                            if (callback) {\n                                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n                                if (type === 'abort') {\n                                    xhr.abort();\n                                } else if (type === 'error') {\n                                    // Support: IE <=9 only\n                                    // On a manual native abort, IE9 throws\n                                    // errors on any property access that is not readyState\n                                    if (typeof xhr.status !== 'number') {\n                                        complete(0, 'error');\n                                    } else {\n                                        complete(// File: protocol always yields status 0; see #8605, #14207\n                                        xhr.status, xhr.statusText);\n                                    }\n                                } else {\n                                    complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only\n                                    // IE9 has no XHR2 but throws on binary (trac-11426)\n                                    // For XHR2 non-text, let the caller handle it (gh-2498)\n                                    (xhr.responseType || 'text') !== 'text' || typeof xhr.responseText !== 'string' ? { binary: xhr.response } : { text: xhr.responseText }, xhr.getAllResponseHeaders());\n                                }\n                            }\n                        };\n                    };\n                    // Listen to events\n                    xhr.onload = callback();\n                    errorCallback = xhr.onerror = callback('error');\n                    // Support: IE 9 only\n                    // Use onreadystatechange to replace onabort\n                    // to handle uncaught aborts\n                    if (xhr.onabort !== undefined) {\n                        xhr.onabort = errorCallback;\n                    } else {\n                        xhr.onreadystatechange = function () {\n                            // Check readyState before timeout as it changes\n                            if (xhr.readyState === 4) {\n                                // Allow onerror to be called first,\n                                // but that will not handle a native abort\n                                // Also, save errorCallback to a variable\n                                // as xhr.onerror cannot be accessed\n                                window.setTimeout(function () {\n                                    if (callback) {\n                                        errorCallback();\n                                    }\n                                });\n                            }\n                        };\n                    }\n                    // Create the abort callback\n                    callback = callback('abort');\n                    try {\n                        // Do send the request (this may raise an exception)\n                        xhr.send(options.hasContent && options.data || null);\n                    } catch (e) {\n                        // #14683: Only rethrow if this hasn't been notified as an error yet\n                        if (callback) {\n                            throw e;\n                        }\n                    }\n                },\n                abort: function () {\n                    if (callback) {\n                        callback();\n                    }\n                }\n            };\n        }\n    });\n    // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n    jQuery.ajaxPrefilter(function (s) {\n        if (s.crossDomain) {\n            s.contents.script = false;\n        }\n    });\n    // Install script dataType\n    jQuery.ajaxSetup({\n        accepts: { script: 'text/javascript, application/javascript, ' + 'application/ecmascript, application/x-ecmascript' },\n        contents: { script: /\\b(?:java|ecma)script\\b/ },\n        converters: {\n            'text script': function (text) {\n                jQuery.globalEval(text);\n                return text;\n            }\n        }\n    });\n    // Handle cache's special case and crossDomain\n    jQuery.ajaxPrefilter('script', function (s) {\n        if (s.cache === undefined) {\n            s.cache = false;\n        }\n        if (s.crossDomain) {\n            s.type = 'GET';\n        }\n    });\n    // Bind script tag hack transport\n    jQuery.ajaxTransport('script', function (s) {\n        // This transport only deals with cross domain requests\n        if (s.crossDomain) {\n            var script, callback;\n            return {\n                send: function (_, complete) {\n                    script = jQuery('<script>').prop({\n                        charset: s.scriptCharset,\n                        src: s.url\n                    }).on('load error', callback = function (evt) {\n                        script.remove();\n                        callback = null;\n                        if (evt) {\n                            complete(evt.type === 'error' ? 404 : 200, evt.type);\n                        }\n                    });\n                    // Use native DOM manipulation to avoid our domManip AJAX trickery\n                    document.head.appendChild(script[0]);\n                },\n                abort: function () {\n                    if (callback) {\n                        callback();\n                    }\n                }\n            };\n        }\n    });\n    var oldCallbacks = [], rjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n    // Default jsonp settings\n    jQuery.ajaxSetup({\n        jsonp: 'callback',\n        jsonpCallback: function () {\n            var callback = oldCallbacks.pop() || jQuery.expando + '_' + nonce++;\n            this[callback] = true;\n            return callback;\n        }\n    });\n    // Detect, normalize options and install callbacks for jsonp requests\n    jQuery.ajaxPrefilter('json jsonp', function (s, originalSettings, jqXHR) {\n        var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? 'url' : typeof s.data === 'string' && (s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0 && rjsonp.test(s.data) && 'data');\n        // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n        if (jsonProp || s.dataTypes[0] === 'jsonp') {\n            // Get callback name, remembering preexisting value associated with it\n            callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;\n            // Insert callback into url or form data\n            if (jsonProp) {\n                s[jsonProp] = s[jsonProp].replace(rjsonp, '$1' + callbackName);\n            } else if (s.jsonp !== false) {\n                s.url += (rquery.test(s.url) ? '&' : '?') + s.jsonp + '=' + callbackName;\n            }\n            // Use data converter to retrieve json after script execution\n            s.converters['script json'] = function () {\n                if (!responseContainer) {\n                    jQuery.error(callbackName + ' was not called');\n                }\n                return responseContainer[0];\n            };\n            // Force json dataType\n            s.dataTypes[0] = 'json';\n            // Install callback\n            overwritten = window[callbackName];\n            window[callbackName] = function () {\n                responseContainer = arguments;\n            };\n            // Clean-up function (fires after converters)\n            jqXHR.always(function () {\n                // If previous value didn't exist - remove it\n                if (overwritten === undefined) {\n                    jQuery(window).removeProp(callbackName);    // Otherwise restore preexisting value\n                } else {\n                    window[callbackName] = overwritten;\n                }\n                // Save back as free\n                if (s[callbackName]) {\n                    // Make sure that re-using the options doesn't screw things around\n                    s.jsonpCallback = originalSettings.jsonpCallback;\n                    // Save the callback name for future use\n                    oldCallbacks.push(callbackName);\n                }\n                // Call if it was a function and we have a response\n                if (responseContainer && jQuery.isFunction(overwritten)) {\n                    overwritten(responseContainer[0]);\n                }\n                responseContainer = overwritten = undefined;\n            });\n            // Delegate to script\n            return 'script';\n        }\n    });\n    // Support: Safari 8 only\n    // In Safari 8 documents created via document.implementation.createHTMLDocument\n    // collapse sibling forms: the second one becomes a child of the first one.\n    // Because of that, this security measure has to be disabled in Safari 8.\n    // https://bugs.webkit.org/show_bug.cgi?id=137337\n    support.createHTMLDocument = function () {\n        var body = document.implementation.createHTMLDocument('').body;\n        body.innerHTML = '<form></form><form></form>';\n        return body.childNodes.length === 2;\n    }();\n    // Argument \"data\" should be string of html\n    // context (optional): If specified, the fragment will be created in this context,\n    // defaults to document\n    // keepScripts (optional): If true, will include scripts passed in the html string\n    jQuery.parseHTML = function (data, context, keepScripts) {\n        if (typeof data !== 'string') {\n            return [];\n        }\n        if (typeof context === 'boolean') {\n            keepScripts = context;\n            context = false;\n        }\n        var base, parsed, scripts;\n        if (!context) {\n            // Stop scripts or inline event handlers from being executed immediately\n            // by using document.implementation\n            if (support.createHTMLDocument) {\n                context = document.implementation.createHTMLDocument('');\n                // Set the base href for the created document\n                // so any parsed elements with URLs\n                // are based on the document's URL (gh-2965)\n                base = context.createElement('base');\n                base.href = document.location.href;\n                context.head.appendChild(base);\n            } else {\n                context = document;\n            }\n        }\n        parsed = rsingleTag.exec(data);\n        scripts = !keepScripts && [];\n        // Single tag\n        if (parsed) {\n            return [context.createElement(parsed[1])];\n        }\n        parsed = buildFragment([data], context, scripts);\n        if (scripts && scripts.length) {\n            jQuery(scripts).remove();\n        }\n        return jQuery.merge([], parsed.childNodes);\n    };\n    /**\n * Load a url into a page\n */\n    jQuery.fn.load = function (url, params, callback) {\n        var selector, type, response, self = this, off = url.indexOf(' ');\n        if (off > -1) {\n            selector = stripAndCollapse(url.slice(off));\n            url = url.slice(0, off);\n        }\n        // If it's a function\n        if (jQuery.isFunction(params)) {\n            // We assume that it's the callback\n            callback = params;\n            params = undefined;    // Otherwise, build a param string\n        } else if (params && typeof params === 'object') {\n            type = 'POST';\n        }\n        // If we have elements to modify, make the request\n        if (self.length > 0) {\n            jQuery.ajax({\n                url: url,\n                // If \"type\" variable is undefined, then \"GET\" method will be used.\n                // Make value of this field explicit since\n                // user can override it through ajaxSetup method\n                type: type || 'GET',\n                dataType: 'html',\n                data: params\n            }).done(function (responseText) {\n                // Save response for use in complete callback\n                response = arguments;\n                self.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n                // Exclude scripts to avoid IE 'Permission Denied' errors\n                jQuery('<div>').append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n                responseText);    // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n                                  // but they are ignored because response was set above.\n                                  // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n            }).always(callback && function (jqXHR, status) {\n                self.each(function () {\n                    callback.apply(this, response || [\n                        jqXHR.responseText,\n                        status,\n                        jqXHR\n                    ]);\n                });\n            });\n        }\n        return this;\n    };\n    // Attach a bunch of functions for handling common AJAX events\n    jQuery.each([\n        'ajaxStart',\n        'ajaxStop',\n        'ajaxComplete',\n        'ajaxError',\n        'ajaxSuccess',\n        'ajaxSend'\n    ], function (i, type) {\n        jQuery.fn[type] = function (fn) {\n            return this.on(type, fn);\n        };\n    });\n    jQuery.expr.pseudos.animated = function (elem) {\n        return jQuery.grep(jQuery.timers, function (fn) {\n            return elem === fn.elem;\n        }).length;\n    };\n    jQuery.offset = {\n        setOffset: function (elem, options, i) {\n            var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, 'position'), curElem = jQuery(elem), props = {};\n            // Set position first, in-case top/left are set even on static elem\n            if (position === 'static') {\n                elem.style.position = 'relative';\n            }\n            curOffset = curElem.offset();\n            curCSSTop = jQuery.css(elem, 'top');\n            curCSSLeft = jQuery.css(elem, 'left');\n            calculatePosition = (position === 'absolute' || position === 'fixed') && (curCSSTop + curCSSLeft).indexOf('auto') > -1;\n            // Need to be able to calculate position if either\n            // top or left is auto and position is either absolute or fixed\n            if (calculatePosition) {\n                curPosition = curElem.position();\n                curTop = curPosition.top;\n                curLeft = curPosition.left;\n            } else {\n                curTop = parseFloat(curCSSTop) || 0;\n                curLeft = parseFloat(curCSSLeft) || 0;\n            }\n            if (jQuery.isFunction(options)) {\n                // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n                options = options.call(elem, i, jQuery.extend({}, curOffset));\n            }\n            if (options.top != null) {\n                props.top = options.top - curOffset.top + curTop;\n            }\n            if (options.left != null) {\n                props.left = options.left - curOffset.left + curLeft;\n            }\n            if ('using' in options) {\n                options.using.call(elem, props);\n            } else {\n                curElem.css(props);\n            }\n        }\n    };\n    jQuery.fn.extend({\n        offset: function (options) {\n            // Preserve chaining for setter\n            if (arguments.length) {\n                return options === undefined ? this : this.each(function (i) {\n                    jQuery.offset.setOffset(this, options, i);\n                });\n            }\n            var doc, docElem, rect, win, elem = this[0];\n            if (!elem) {\n                return;\n            }\n            // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n            // Support: IE <=11 only\n            // Running getBoundingClientRect on a\n            // disconnected node in IE throws an error\n            if (!elem.getClientRects().length) {\n                return {\n                    top: 0,\n                    left: 0\n                };\n            }\n            rect = elem.getBoundingClientRect();\n            doc = elem.ownerDocument;\n            docElem = doc.documentElement;\n            win = doc.defaultView;\n            return {\n                top: rect.top + win.pageYOffset - docElem.clientTop,\n                left: rect.left + win.pageXOffset - docElem.clientLeft\n            };\n        },\n        position: function () {\n            if (!this[0]) {\n                return;\n            }\n            var offsetParent, offset, elem = this[0], parentOffset = {\n                    top: 0,\n                    left: 0\n                };\n            // Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n            // because it is its only offset parent\n            if (jQuery.css(elem, 'position') === 'fixed') {\n                // Assume getBoundingClientRect is there when computed position is fixed\n                offset = elem.getBoundingClientRect();\n            } else {\n                // Get *real* offsetParent\n                offsetParent = this.offsetParent();\n                // Get correct offsets\n                offset = this.offset();\n                if (!nodeName(offsetParent[0], 'html')) {\n                    parentOffset = offsetParent.offset();\n                }\n                // Add offsetParent borders\n                parentOffset = {\n                    top: parentOffset.top + jQuery.css(offsetParent[0], 'borderTopWidth', true),\n                    left: parentOffset.left + jQuery.css(offsetParent[0], 'borderLeftWidth', true)\n                };\n            }\n            // Subtract parent offsets and element margins\n            return {\n                top: offset.top - parentOffset.top - jQuery.css(elem, 'marginTop', true),\n                left: offset.left - parentOffset.left - jQuery.css(elem, 'marginLeft', true)\n            };\n        },\n        // This method will return documentElement in the following cases:\n        // 1) For the element inside the iframe without offsetParent, this method will return\n        //    documentElement of the parent window\n        // 2) For the hidden or detached element\n        // 3) For body or html element, i.e. in case of the html node - it will return itself\n        //\n        // but those exceptions were never presented as a real life use-cases\n        // and might be considered as more preferable results.\n        //\n        // This logic, however, is not guaranteed and can change at any point in the future\n        offsetParent: function () {\n            return this.map(function () {\n                var offsetParent = this.offsetParent;\n                while (offsetParent && jQuery.css(offsetParent, 'position') === 'static') {\n                    offsetParent = offsetParent.offsetParent;\n                }\n                return offsetParent || documentElement;\n            });\n        }\n    });\n    // Create scrollLeft and scrollTop methods\n    jQuery.each({\n        scrollLeft: 'pageXOffset',\n        scrollTop: 'pageYOffset'\n    }, function (method, prop) {\n        var top = 'pageYOffset' === prop;\n        jQuery.fn[method] = function (val) {\n            return access(this, function (elem, method, val) {\n                // Coalesce documents and windows\n                var win;\n                if (jQuery.isWindow(elem)) {\n                    win = elem;\n                } else if (elem.nodeType === 9) {\n                    win = elem.defaultView;\n                }\n                if (val === undefined) {\n                    return win ? win[prop] : elem[method];\n                }\n                if (win) {\n                    win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n                } else {\n                    elem[method] = val;\n                }\n            }, method, val, arguments.length);\n        };\n    });\n    // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n    // Add the top/left cssHooks using jQuery.fn.position\n    // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n    // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n    // getComputedStyle returns percent when specified for top/left/bottom/right;\n    // rather than make the css module depend on the offset module, just check for it here\n    jQuery.each([\n        'top',\n        'left'\n    ], function (i, prop) {\n        jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n            if (computed) {\n                computed = curCSS(elem, prop);\n                // If curCSS returns percentage, fallback to offset\n                return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + 'px' : computed;\n            }\n        });\n    });\n    // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n    jQuery.each({\n        Height: 'height',\n        Width: 'width'\n    }, function (name, type) {\n        jQuery.each({\n            padding: 'inner' + name,\n            content: type,\n            '': 'outer' + name\n        }, function (defaultExtra, funcName) {\n            // Margin is only for outerHeight, outerWidth\n            jQuery.fn[funcName] = function (margin, value) {\n                var chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean'), extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');\n                return access(this, function (elem, type, value) {\n                    var doc;\n                    if (jQuery.isWindow(elem)) {\n                        // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n                        return funcName.indexOf('outer') === 0 ? elem['inner' + name] : elem.document.documentElement['client' + name];\n                    }\n                    // Get document width or height\n                    if (elem.nodeType === 9) {\n                        doc = elem.documentElement;\n                        // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n                        // whichever is greatest\n                        return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);\n                    }\n                    return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n                    jQuery.css(elem, type, extra) : // Set width or height on the element\n                    jQuery.style(elem, type, value, extra);\n                }, type, chainable ? margin : undefined, chainable);\n            };\n        });\n    });\n    jQuery.fn.extend({\n        bind: function (types, data, fn) {\n            return this.on(types, null, data, fn);\n        },\n        unbind: function (types, fn) {\n            return this.off(types, null, fn);\n        },\n        delegate: function (selector, types, data, fn) {\n            return this.on(types, selector, data, fn);\n        },\n        undelegate: function (selector, types, fn) {\n            // ( namespace ) or ( selector, types [, fn] )\n            return arguments.length === 1 ? this.off(selector, '**') : this.off(types, selector || '**', fn);\n        }\n    });\n    jQuery.holdReady = function (hold) {\n        if (hold) {\n            jQuery.readyWait++;\n        } else {\n            jQuery.ready(true);\n        }\n    };\n    jQuery.isArray = Array.isArray;\n    jQuery.parseJSON = JSON.parse;\n    jQuery.nodeName = nodeName;\n    // Register as a named AMD module, since jQuery can be concatenated with other\n    // files that may use define, but not via a proper concatenation script that\n    // understands anonymous AMD modules. A named AMD is safest and most robust\n    // way to register. Lowercase jquery is used because AMD module names are\n    // derived from file names, and jQuery is normally delivered in a lowercase\n    // file name. Do this after creating the global so that if an AMD module wants\n    // to call noConflict to hide this version of jQuery, it will work.\n    // Note that for maximum portability, libraries that are not jQuery should\n    // declare themselves as anonymous modules, and avoid setting a global if an\n    // AMD loader is present. jQuery is a special case. For more information, see\n    // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n    if (typeof define === 'function' && define.amd) {\n        define('jquery', [], function () {\n            return jQuery;\n        });\n    }\n    var\n        // Map over jQuery in case of overwrite\n        _jQuery = window.jQuery,\n        // Map over the $ in case of overwrite\n        _$ = window.$;\n    jQuery.noConflict = function (deep) {\n        if (window.$ === jQuery) {\n            window.$ = _$;\n        }\n        if (deep && window.jQuery === jQuery) {\n            window.jQuery = _jQuery;\n        }\n        return jQuery;\n    };\n    // Expose jQuery and $ identifiers, even in AMD\n    // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n    // and CommonJS for browser emulators (#13566)\n    if (!noGlobal) {\n        window.jQuery = window.$ = jQuery;\n    }\n    return jQuery;\n}));","/*!\n * jquery.event.drag - v 2.3.0\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2008-06-04\n// Updated: 2012-05-21\n// Updated: 2016-08-16   Luiz Gonzaga dos Santos Filho\n// REQUIRES: jquery 1.8 +, , event.drag 2.3.0\n// TESTED WITH: jQuery 1.8.3, 1.11.2, 2.2.4, and 3.1.0\nvar $ = require(417    /* ../slick.jquery */);\n// add the jquery instance method\n$.fn.drag = function (str, arg, opts) {\n    // figure out the event type\n    var type = typeof str == 'string' ? str : '',\n        // figure out the event handler...\n        fn = $.isFunction(str) ? str : $.isFunction(arg) ? arg : null;\n    // fix the event type\n    if (type.indexOf('drag') !== 0)\n        type = 'drag' + type;\n    // were options passed\n    opts = (str == fn ? arg : opts) || {};\n    // trigger or bind event handler\n    return fn ? this.on(type, opts, fn) : this.trigger(type);\n};\n// local refs (increase compression)\nvar $event = $.event, $special = $event.special,\n    // configure the drag special event\n    drag = $special.drag = {\n        // these are the default settings\n        defaults: {\n            which: 1,\n            // mouse button pressed to start drag sequence\n            distance: 0,\n            // distance dragged before dragstart\n            not: ':input',\n            // selector to suppress dragging on target elements\n            handle: null,\n            // selector to match handle target elements\n            relative: false,\n            // true to use \"position\", false to use \"offset\"\n            drop: true,\n            // false to suppress drop events, true or selector to allow\n            click: false    // false to suppress click events after dragend (no proxy)\n        },\n        // the key name for stored drag data\n        datakey: 'dragdata',\n        // prevent bubbling for better performance\n        noBubble: true,\n        // count bound related events\n        add: function (obj) {\n            // read the interaction data\n            var data = $.data(this, drag.datakey),\n                // read any passed options\n                opts = obj.data || {};\n            // count another realted event\n            data.related += 1;\n            // extend data options bound with this event\n            // don't iterate \"opts\" in case it is a node\n            $.each(drag.defaults, function (key, def) {\n                if (opts[key] !== undefined)\n                    data[key] = opts[key];\n            });\n        },\n        // forget unbound related events\n        remove: function () {\n            $.data(this, drag.datakey).related -= 1;\n        },\n        // configure interaction, capture settings\n        setup: function () {\n            // check for related events\n            if ($.data(this, drag.datakey))\n                return;\n            // initialize the drag data with copied defaults\n            var data = $.extend({ related: 0 }, drag.defaults);\n            // store the interaction data\n            $.data(this, drag.datakey, data);\n            // bind the mousedown event, which starts drag interactions\n            $event.add(this, 'touchstart mousedown', drag.init, data);\n            // prevent image dragging in IE...\n            if (this.attachEvent)\n                this.attachEvent('ondragstart', drag.dontstart);\n        },\n        // destroy configured interaction\n        teardown: function () {\n            var data = $.data(this, drag.datakey) || {};\n            // check for related events\n            if (data.related)\n                return;\n            // remove the stored data\n            $.removeData(this, drag.datakey);\n            // remove the mousedown event\n            $event.remove(this, 'touchstart mousedown', drag.init);\n            // enable text selection\n            drag.textselect(true);\n            // un-prevent image dragging in IE...\n            if (this.detachEvent)\n                this.detachEvent('ondragstart', drag.dontstart);\n        },\n        // initialize the interaction\n        init: function (event) {\n            // sorry, only one touch at a time\n            if (drag.touched)\n                return;\n            // the drag/drop interaction data\n            var dd = event.data, results;\n            // check the which directive\n            if (event.which != 0 && dd.which > 0 && event.which != dd.which)\n                return;\n            // check for suppressed selector\n            if ($(event.target).is(dd.not))\n                return;\n            // check for handle selector\n            if (dd.handle && !$(event.target).closest(dd.handle, event.currentTarget).length)\n                return;\n            drag.touched = event.type == 'touchstart' ? this : null;\n            dd.propagates = 1;\n            dd.mousedown = this;\n            dd.interactions = [drag.interaction(this, dd)];\n            dd.target = event.target;\n            dd.pageX = event.pageX;\n            dd.pageY = event.pageY;\n            dd.dragging = null;\n            // handle draginit event...\n            results = drag.hijack(event, 'draginit', dd);\n            // early cancel\n            if (!dd.propagates)\n                return;\n            // flatten the result set\n            results = drag.flatten(results);\n            // insert new interaction elements\n            if (results && results.length) {\n                dd.interactions = [];\n                $.each(results, function () {\n                    dd.interactions.push(drag.interaction(this, dd));\n                });\n            }\n            // remember how many interactions are propagating\n            dd.propagates = dd.interactions.length;\n            // locate and init the drop targets\n            if (dd.drop !== false && $special.drop)\n                $special.drop.handler(event, dd);\n            // disable text selection\n            drag.textselect(false);\n            // bind additional events...\n            if (drag.touched)\n                $event.add(drag.touched, 'touchmove touchend', drag.handler, dd);\n            else\n                $event.add(document, 'mousemove mouseup', drag.handler, dd);\n            // helps prevent text selection or scrolling\n            if (!drag.touched || dd.live)\n                return false;\n        },\n        // returns an interaction object\n        interaction: function (elem, dd) {\n            var offset = elem && elem.ownerDocument ? $(elem)[dd.relative ? 'position' : 'offset']() || {\n                top: 0,\n                left: 0\n            } : {\n                top: 0,\n                left: 0\n            };\n            return {\n                drag: elem,\n                callback: new drag.callback(),\n                droppable: [],\n                offset: offset\n            };\n        },\n        // handle drag-releatd DOM events\n        handler: function (event) {\n            // read the data before hijacking anything\n            var dd = event.data;\n            // handle various events\n            switch (event.type) {\n            // mousemove, check distance, start dragging\n            case !dd.dragging && 'touchmove':\n                event.preventDefault();\n            case !dd.dragging && 'mousemove':\n                //  drag tolerance, x² + y² = distance²\n                if (Math.pow(event.pageX - dd.pageX, 2) + Math.pow(event.pageY - dd.pageY, 2) < Math.pow(dd.distance, 2))\n                    break;\n                // distance tolerance not reached\n                event.target = dd.target;\n                // force target from \"mousedown\" event (fix distance issue)\n                drag.hijack(event, 'dragstart', dd);\n                // trigger \"dragstart\"\n                if (dd.propagates)\n                    // \"dragstart\" not rejected\n                    dd.dragging = true;\n            // activate interaction\n            // mousemove, dragging\n            case 'touchmove':\n                event.preventDefault();\n            case 'mousemove':\n                if (dd.dragging) {\n                    // trigger \"drag\"\n                    drag.hijack(event, 'drag', dd);\n                    if (dd.propagates) {\n                        // manage drop events\n                        if (dd.drop !== false && $special.drop)\n                            $special.drop.handler(event, dd);\n                        // \"dropstart\", \"dropend\"\n                        break;    // \"drag\" not rejected, stop\n                    }\n                    event.type = 'mouseup';    // helps \"drop\" handler behave\n                }\n            // mouseup, stop dragging\n            case 'touchend':\n            case 'mouseup':\n            default:\n                if (drag.touched)\n                    $event.remove(drag.touched, 'touchmove touchend', drag.handler);    // remove touch events\n                else\n                    $event.remove(document, 'mousemove mouseup', drag.handler);\n                // remove page events\n                if (dd.dragging) {\n                    if (dd.drop !== false && $special.drop)\n                        $special.drop.handler(event, dd);\n                    // \"drop\"\n                    drag.hijack(event, 'dragend', dd);    // trigger \"dragend\"\n                }\n                drag.textselect(true);\n                // enable text selection\n                // if suppressing click events...\n                if (dd.click === false && dd.dragging)\n                    $.data(dd.mousedown, 'suppress.click', new Date().getTime() + 5);\n                dd.dragging = drag.touched = false;\n                // deactivate element\n                break;\n            }\n        },\n        // re-use event object for custom events\n        hijack: function (event, type, dd, x, elem) {\n            // not configured\n            if (!dd)\n                return;\n            // remember the original event and type\n            var orig = {\n                    event: event.originalEvent,\n                    type: event.type\n                },\n                // is the event drag related or drog related?\n                mode = type.indexOf('drop') ? 'drag' : 'drop',\n                // iteration vars\n                result, i = x || 0, ia, $elems, callback, len = !isNaN(x) ? x : dd.interactions.length;\n            // modify the event type\n            event.type = type;\n            // protects originalEvent from side-effects\n            var noop = function () {\n            };\n            event.originalEvent = new $.Event(orig.event, {\n                preventDefault: noop,\n                stopPropagation: noop,\n                stopImmediatePropagation: noop\n            });\n            // initialize the results\n            dd.results = [];\n            // handle each interacted element\n            do\n                if (ia = dd.interactions[i]) {\n                    // validate the interaction\n                    if (type !== 'dragend' && ia.cancelled)\n                        continue;\n                    // set the dragdrop properties on the event object\n                    callback = drag.properties(event, dd, ia);\n                    // prepare for more results\n                    ia.results = [];\n                    // handle each element\n                    $(elem || ia[mode] || dd.droppable).each(function (p, subject) {\n                        // identify drag or drop targets individually\n                        callback.target = subject;\n                        // force propagtion of the custom event\n                        event.isPropagationStopped = function () {\n                            return false;\n                        };\n                        // handle the event\n                        result = subject ? $event.dispatch.call(subject, event, callback) : null;\n                        // stop the drag interaction for this element\n                        if (result === false) {\n                            if (mode == 'drag') {\n                                ia.cancelled = true;\n                                dd.propagates -= 1;\n                            }\n                            if (type == 'drop') {\n                                ia[mode][p] = null;\n                            }\n                        }    // assign any dropinit elements\n                        else if (type == 'dropinit')\n                            ia.droppable.push(drag.element(result) || subject);\n                        // accept a returned proxy element\n                        if (type == 'dragstart')\n                            ia.proxy = $(drag.element(result) || ia.drag)[0];\n                        // remember this result\n                        ia.results.push(result);\n                        // forget the event result, for recycling\n                        delete event.result;\n                        // break on cancelled handler\n                        if (type !== 'dropinit')\n                            return result;\n                    });\n                    // flatten the results\n                    dd.results[i] = drag.flatten(ia.results);\n                    // accept a set of valid drop targets\n                    if (type == 'dropinit')\n                        ia.droppable = drag.flatten(ia.droppable);\n                    // locate drop targets\n                    if (type == 'dragstart' && !ia.cancelled)\n                        callback.update();\n                }\n            while (++i < len);\n            // restore the original event & type\n            event.type = orig.type;\n            event.originalEvent = orig.event;\n            // return all handler results\n            return drag.flatten(dd.results);\n        },\n        // extend the callback object with drag/drop properties...\n        properties: function (event, dd, ia) {\n            var obj = ia.callback;\n            // elements\n            obj.drag = ia.drag;\n            obj.proxy = ia.proxy || ia.drag;\n            // starting mouse position\n            obj.startX = dd.pageX;\n            obj.startY = dd.pageY;\n            // current distance dragged\n            obj.deltaX = event.pageX - dd.pageX;\n            obj.deltaY = event.pageY - dd.pageY;\n            // original element position\n            obj.originalX = ia.offset.left;\n            obj.originalY = ia.offset.top;\n            // adjusted element position\n            obj.offsetX = obj.originalX + obj.deltaX;\n            obj.offsetY = obj.originalY + obj.deltaY;\n            // assign the drop targets information\n            obj.drop = drag.flatten((ia.drop || []).slice());\n            obj.available = drag.flatten((ia.droppable || []).slice());\n            return obj;\n        },\n        // determine is the argument is an element or jquery instance\n        element: function (arg) {\n            if (arg && (arg.jquery || arg.nodeType == 1))\n                return arg;\n        },\n        // flatten nested jquery objects and arrays into a single dimension array\n        flatten: function (arr) {\n            return $.map(arr, function (member) {\n                return member && member.jquery ? $.makeArray(member) : member && member.length ? drag.flatten(member) : member;\n            });\n        },\n        // toggles text selection attributes ON (true) or OFF (false)\n        textselect: function (bool) {\n            $(document)[bool ? 'off' : 'on']('selectstart', drag.dontstart).css('MozUserSelect', bool ? '' : 'none');\n            // .attr(\"unselectable\", bool ? \"off\" : \"on\" )\n            document.unselectable = bool ? 'off' : 'on';\n        },\n        // suppress \"selectstart\" and \"ondragstart\" events\n        dontstart: function () {\n            return false;\n        },\n        // a callback instance contructor\n        callback: function () {\n        }\n    };\n// callback methods\ndrag.callback.prototype = {\n    update: function () {\n        if ($special.drop && this.available.length)\n            $.each(this.available, function (i) {\n                $special.drop.locate(this, i);\n            });\n    }\n};\n// patch $.event.$dispatch to allow suppressing clicks\nvar $dispatch = $event.dispatch;\n$event.dispatch = function (event) {\n    if ($.data(this, 'suppress.' + event.type) - new Date().getTime() > 0) {\n        $.removeData(this, 'suppress.' + event.type);\n        return;\n    }\n    return $dispatch.apply(this, arguments);\n};\n// share the same special event configuration with related events...\n$special.draginit = $special.dragstart = $special.dragend = drag;","/*!\n * jquery.event.drop - v 2.3.0\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2008-06-04\n// Updated: 2012-05-21\n// Updated: 2016-08-16   Luiz Gonzaga dos Santos Filho\n// REQUIRES: jquery 1.8 +, , event.drag 2.3.0\n// TESTED WITH: jQuery 1.8.3, 1.11.2, 2.2.4, and 3.1.0\nvar $ = require(417    /* ../slick.jquery */);\n// Events: drop, dropstart, dropend\n// add the jquery instance method\n$.fn.drop = function (str, arg, opts) {\n    // figure out the event type\n    var type = typeof str == 'string' ? str : '',\n        // figure out the event handler...\n        fn = $.isFunction(str) ? str : $.isFunction(arg) ? arg : null;\n    // fix the event type\n    if (type.indexOf('drop') !== 0)\n        type = 'drop' + type;\n    // were options passed\n    opts = (str == fn ? arg : opts) || {};\n    // trigger or bind event handler\n    return fn ? this.on(type, opts, fn) : this.trigger(type);\n};\n// DROP MANAGEMENT UTILITY\n// returns filtered drop target elements, caches their positions\n$.drop = function (opts) {\n    opts = opts || {};\n    // safely set new options...\n    drop.multi = opts.multi === true ? Infinity : opts.multi === false ? 1 : !isNaN(opts.multi) ? opts.multi : drop.multi;\n    drop.delay = opts.delay || drop.delay;\n    drop.tolerance = $.isFunction(opts.tolerance) ? opts.tolerance : opts.tolerance === null ? null : drop.tolerance;\n    drop.mode = opts.mode || drop.mode || 'intersect';\n};\n// local refs (increase compression)\nvar $event = $.event, $special = $event.special,\n    // configure the drop special event\n    drop = $.event.special.drop = {\n        // these are the default settings\n        multi: 1,\n        // allow multiple drop winners per dragged element\n        delay: 20,\n        // async timeout delay\n        mode: 'overlap',\n        // drop tolerance mode\n        // internal cache\n        targets: [],\n        // the key name for stored drop data\n        datakey: 'dropdata',\n        // prevent bubbling for better performance\n        noBubble: true,\n        // count bound related events\n        add: function (obj) {\n            // read the interaction data\n            var data = $.data(this, drop.datakey);\n            // count another realted event\n            data.related += 1;\n        },\n        // forget unbound related events\n        remove: function () {\n            $.data(this, drop.datakey).related -= 1;\n        },\n        // configure the interactions\n        setup: function () {\n            // check for related events\n            if ($.data(this, drop.datakey))\n                return;\n            // initialize the drop element data\n            var data = {\n                related: 0,\n                active: [],\n                anyactive: 0,\n                winner: 0,\n                location: {}\n            };\n            // store the drop data on the element\n            $.data(this, drop.datakey, data);\n            // store the drop target in internal cache\n            drop.targets.push(this);\n        },\n        // destroy the configure interaction\n        teardown: function () {\n            var data = $.data(this, drop.datakey) || {};\n            // check for related events\n            if (data.related)\n                return;\n            // remove the stored data\n            $.removeData(this, drop.datakey);\n            // reference the targeted element\n            var element = this;\n            // remove from the internal cache\n            drop.targets = $.grep(drop.targets, function (target) {\n                return target !== element;\n            });\n        },\n        // shared event handler\n        handler: function (event, dd) {\n            // local vars\n            var results, $targets;\n            // make sure the right data is available\n            if (!dd)\n                return;\n            // handle various events\n            switch (event.type) {\n            // draginit, from $.event.special.drag\n            case 'mousedown':\n            // DROPINIT >>\n            case 'touchstart':\n                // DROPINIT >>\n                // collect and assign the drop targets\n                $targets = $(drop.targets);\n                if (typeof dd.drop == 'string')\n                    $targets = $targets.filter(dd.drop);\n                // reset drop data winner properties\n                $targets.each(function () {\n                    var data = $.data(this, drop.datakey);\n                    data.active = [];\n                    data.anyactive = 0;\n                    data.winner = 0;\n                });\n                // set available target elements\n                dd.droppable = $targets;\n                // activate drop targets for the initial element being dragged\n                $special.drag.hijack(event, 'dropinit', dd);\n                break;\n            // drag, from $.event.special.drag\n            case 'mousemove':\n            // TOLERATE >>\n            case 'touchmove':\n                // TOLERATE >>\n                drop.event = event;\n                // store the mousemove event\n                if (!drop.timer)\n                    // monitor drop targets\n                    drop.tolerate(dd);\n                break;\n            // dragend, from $.event.special.drag\n            case 'mouseup':\n            // DROP >> DROPEND >>\n            case 'touchend':\n                // DROP >> DROPEND >>\n                drop.timer = clearTimeout(drop.timer);\n                // delete timer\n                if (dd.propagates) {\n                    $special.drag.hijack(event, 'drop', dd);\n                    $special.drag.hijack(event, 'dropend', dd);\n                }\n                break;\n            }\n        },\n        // returns the location positions of an element\n        locate: function (elem, index) {\n            var data = $.data(elem, drop.datakey), $elem = $(elem), posi = $elem.offset() || {}, height = $elem.outerHeight(), width = $elem.outerWidth(), location = {\n                    elem: elem,\n                    width: width,\n                    height: height,\n                    top: posi.top,\n                    left: posi.left,\n                    right: posi.left + width,\n                    bottom: posi.top + height\n                };\n            // drag elements might not have dropdata\n            if (data) {\n                data.location = location;\n                data.index = index;\n                data.elem = elem;\n            }\n            return location;\n        },\n        // test the location positions of an element against another OR an X,Y coord\n        contains: function (target, test) {\n            // target { location } contains test [x,y] or { location }\n            return (test[0] || test.left) >= target.left && (test[0] || test.right) <= target.right && (test[1] || test.top) >= target.top && (test[1] || test.bottom) <= target.bottom;\n        },\n        // stored tolerance modes\n        modes: {\n            // fn scope: \"$.event.special.drop\" object\n            // target with mouse wins, else target with most overlap wins\n            'intersect': function (event, proxy, target) {\n                return this.contains(target, [\n                    event.pageX,\n                    event.pageY\n                ]) ? // check cursor\n                1000000000 : this.modes.overlap.apply(this, arguments);    // check overlap\n            },\n            // target with most overlap wins\n            'overlap': function (event, proxy, target) {\n                // calculate the area of overlap...\n                return Math.max(0, Math.min(target.bottom, proxy.bottom) - Math.max(target.top, proxy.top)) * Math.max(0, Math.min(target.right, proxy.right) - Math.max(target.left, proxy.left));\n            },\n            // proxy is completely contained within target bounds\n            'fit': function (event, proxy, target) {\n                return this.contains(target, proxy) ? 1 : 0;\n            },\n            // center of the proxy is contained within target bounds\n            'middle': function (event, proxy, target) {\n                return this.contains(target, [\n                    proxy.left + proxy.width * 0.5,\n                    proxy.top + proxy.height * 0.5\n                ]) ? 1 : 0;\n            }\n        },\n        // sort drop target cache by by winner (dsc), then index (asc)\n        sort: function (a, b) {\n            return b.winner - a.winner || a.index - b.index;\n        },\n        // async, recursive tolerance execution\n        tolerate: function (dd) {\n            // declare local refs\n            var i, drp, drg, data, arr, len, elem,\n                // interaction iteration variables\n                x = 0, ia, end = dd.interactions.length,\n                // determine the mouse coords\n                xy = [\n                    drop.event.pageX,\n                    drop.event.pageY\n                ],\n                // custom or stored tolerance fn\n                tolerance = drop.tolerance || drop.modes[drop.mode];\n            // go through each passed interaction...\n            do\n                if (ia = dd.interactions[x]) {\n                    // check valid interaction\n                    if (!ia)\n                        return;\n                    // initialize or clear the drop data\n                    ia.drop = [];\n                    // holds the drop elements\n                    arr = [];\n                    len = ia.droppable.length;\n                    // determine the proxy location, if needed\n                    if (tolerance)\n                        drg = drop.locate(ia.proxy);\n                    // reset the loop\n                    i = 0;\n                    // loop each stored drop target\n                    do\n                        if (elem = ia.droppable[i]) {\n                            data = $.data(elem, drop.datakey);\n                            drp = data.location;\n                            if (!drp)\n                                continue;\n                            // find a winner: tolerance function is defined, call it\n                            data.winner = tolerance ? tolerance.call(drop, drop.event, drg, drp)    // mouse position is always the fallback\n : drop.contains(drp, xy) ? 1 : 0;\n                            arr.push(data);\n                        }\n                    while (++i < len);\n                    // loop\n                    // sort the drop targets\n                    arr.sort(drop.sort);\n                    // reset the loop\n                    i = 0;\n                    // loop through all of the targets again\n                    do\n                        if (data = arr[i]) {\n                            // winners...\n                            if (data.winner && ia.drop.length < drop.multi) {\n                                // new winner... dropstart\n                                if (!data.active[x] && !data.anyactive) {\n                                    // check to make sure that this is not prevented\n                                    if ($special.drag.hijack(drop.event, 'dropstart', dd, x, data.elem)[0] !== false) {\n                                        data.active[x] = 1;\n                                        data.anyactive += 1;\n                                    }    // if false, it is not a winner\n                                    else\n                                        data.winner = 0;\n                                }\n                                // if it is still a winner\n                                if (data.winner)\n                                    ia.drop.push(data.elem);\n                            }    // losers...\n                            else if (data.active[x] && data.anyactive == 1) {\n                                // former winner... dropend\n                                $special.drag.hijack(drop.event, 'dropend', dd, x, data.elem);\n                                data.active[x] = 0;\n                                data.anyactive -= 1;\n                            }\n                        }\n                    while (++i < len);    // loop\n                }\n            while (++x < end);\n            // loop\n            // check if the mouse is still moving or is idle\n            if (drop.last && xy[0] == drop.last.pageX && xy[1] == drop.last.pageY)\n                delete drop.timer;    // idle, don't recurse\n            else\n                // recurse\n                drop.timer = setTimeout(function () {\n                    drop.tolerate(dd);\n                }, drop.delay);\n            // remember event, to compare idleness\n            drop.last = drop.event;\n        }\n    };\n// share the same special event configuration with related events...\n$special.dropinit = $special.dropstart = $special.dropend = drop;","'use strict';\nvar $ = require(417    /* ../slick.jquery */);\nvar Slick = require(415    /* ../slick.core */);\nfunction CheckboxSelectColumn(options) {\n    var _grid;\n    var _self = this;\n    var _handler = new Slick.EventHandler();\n    var _selectedRowsLookup = {};\n    var _defaults = {\n        columnId: '_checkbox_selector',\n        cssClass: null,\n        toolTip: 'Select/Deselect All',\n        width: 30\n    };\n    var _options = $.extend(true, {}, _defaults, options);\n    function init(grid) {\n        _grid = grid;\n        _handler.subscribe(_grid.onSelectedRowsChanged, handleSelectedRowsChanged).subscribe(_grid.onClick, handleClick).subscribe(_grid.onHeaderClick, handleHeaderClick).subscribe(_grid.onKeyDown, handleKeyDown);\n    }\n    function destroy() {\n        _handler.unsubscribeAll();\n    }\n    function handleSelectedRowsChanged(e, args) {\n        var selectedRows = _grid.getSelectedRows();\n        var lookup = {}, row, i;\n        for (i = 0; i < selectedRows.length; i++) {\n            row = selectedRows[i];\n            lookup[row] = true;\n            if (lookup[row] !== _selectedRowsLookup[row]) {\n                _grid.invalidateRow(row);\n                delete _selectedRowsLookup[row];\n            }\n        }\n        for (i in _selectedRowsLookup) {\n            _grid.invalidateRow(i);\n        }\n        _selectedRowsLookup = lookup;\n        _grid.render();\n        if (selectedRows.length && selectedRows.length == _grid.getDataLength()) {\n            _grid.updateColumnHeader(_options.columnId, '<input type=\\'checkbox\\' checked=\\'checked\\'>', _options.toolTip);\n        } else {\n            _grid.updateColumnHeader(_options.columnId, '<input type=\\'checkbox\\'>', _options.toolTip);\n        }\n    }\n    function handleKeyDown(e, args) {\n        if (e.which == 32) {\n            if (_grid.getColumns()[args.cell].id === _options.columnId) {\n                // if editing, try to commit\n                if (!_grid.getEditorLock().isActive() || _grid.getEditorLock().commitCurrentEdit()) {\n                    toggleRowSelection(args.row);\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            }\n        }\n    }\n    function handleClick(e, args) {\n        // clicking on a row select checkbox\n        if (_grid.getColumns()[args.cell].id === _options.columnId && $(e.target).is(':checkbox')) {\n            // if editing, try to commit\n            if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return;\n            }\n            toggleRowSelection(args.row);\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n    function toggleRowSelection(row) {\n        if (_selectedRowsLookup[row]) {\n            _grid.setSelectedRows($.grep(_grid.getSelectedRows(), function (n) {\n                return n != row;\n            }));\n        } else {\n            _grid.setSelectedRows(_grid.getSelectedRows().concat(row));\n        }\n    }\n    function selectRows(rowArray) {\n        var i, l = rowArray.length, addRows = [];\n        for (i = 0; i < l; i++) {\n            if (!_selectedRowsLookup[rowArray[i]]) {\n                addRows[addRows.length] = rowArray[i];\n            }\n        }\n        _grid.setSelectedRows(_grid.getSelectedRows().concat(addRows));\n    }\n    function deSelectRows(rowArray) {\n        var i, l = rowArray.length, removeRows = [];\n        for (i = 0; i < l; i++) {\n            if (_selectedRowsLookup[rowArray[i]]) {\n                removeRows[removeRows.length] = rowArray[i];\n            }\n        }\n        _grid.setSelectedRows($.grep(_grid.getSelectedRows(), function (n) {\n            return removeRows.indexOf(n) < 0;\n        }));\n    }\n    function handleHeaderClick(e, args) {\n        if (args.column.id == _options.columnId && $(e.target).is(':checkbox')) {\n            // if editing, try to commit\n            if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return;\n            }\n            if ($(e.target).is(':checked')) {\n                var rows = [];\n                for (var i = 0; i < _grid.getDataLength(); i++) {\n                    rows.push(i);\n                }\n                _grid.setSelectedRows(rows);\n            } else {\n                _grid.setSelectedRows([]);\n            }\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n    function getColumnDefinition() {\n        return {\n            id: _options.columnId,\n            name: '<input type=\\'checkbox\\'>',\n            toolTip: _options.toolTip,\n            field: 'sel',\n            width: _options.width,\n            resizable: false,\n            sortable: false,\n            cssClass: _options.cssClass,\n            formatter: checkboxSelectionFormatter\n        };\n    }\n    function checkboxSelectionFormatter(row, cell, value, columnDef, dataContext) {\n        if (dataContext) {\n            return _selectedRowsLookup[row] ? '<input type=\\'checkbox\\' checked=\\'checked\\'>' : '<input type=\\'checkbox\\'>';\n        }\n        return null;\n    }\n    $.extend(this, {\n        'init': init,\n        'destroy': destroy,\n        'deSelectRows': deSelectRows,\n        'selectRows': selectRows,\n        'getColumnDefinition': getColumnDefinition\n    });\n}\nmodule.exports = { 'CheckboxSelectColumn': CheckboxSelectColumn };","'use strict';\nvar $ = require(417    /* ../slick.jquery */);\nvar Slick = require(415    /* ../slick.core */);\nfunction RowSelectionModel(options) {\n    var _grid;\n    var _ranges = [];\n    var _self = this;\n    var _handler = new Slick.EventHandler();\n    var _inHandler;\n    var _options;\n    var _defaults = { selectActiveRow: true };\n    function init(grid) {\n        _options = $.extend(true, {}, _defaults, options);\n        _grid = grid;\n        _handler.subscribe(_grid.onActiveCellChanged, wrapHandler(handleActiveCellChange));\n        _handler.subscribe(_grid.onKeyDown, wrapHandler(handleKeyDown));\n        _handler.subscribe(_grid.onClick, wrapHandler(handleClick));\n    }\n    function destroy() {\n        _handler.unsubscribeAll();\n    }\n    function wrapHandler(handler) {\n        return function () {\n            if (!_inHandler) {\n                _inHandler = true;\n                handler.apply(this, arguments);\n                _inHandler = false;\n            }\n        };\n    }\n    function rangesToRows(ranges) {\n        var rows = [];\n        for (var i = 0; i < ranges.length; i++) {\n            for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n                rows.push(j);\n            }\n        }\n        return rows;\n    }\n    function rowsToRanges(rows) {\n        var ranges = [];\n        var lastCell = _grid.getColumns().length - 1;\n        for (var i = 0; i < rows.length; i++) {\n            ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n        }\n        return ranges;\n    }\n    function getRowsRange(from, to) {\n        var i, rows = [];\n        for (i = from; i <= to; i++) {\n            rows.push(i);\n        }\n        for (i = to; i < from; i++) {\n            rows.push(i);\n        }\n        return rows;\n    }\n    function getSelectedRows() {\n        return rangesToRows(_ranges);\n    }\n    function setSelectedRows(rows) {\n        setSelectedRanges(rowsToRanges(rows));\n    }\n    function setSelectedRanges(ranges) {\n        // simle check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n        if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)) {\n            return;\n        }\n        _ranges = ranges;\n        _self.onSelectedRangesChanged.notify(_ranges);\n    }\n    function getSelectedRanges() {\n        return _ranges;\n    }\n    function handleActiveCellChange(e, data) {\n        if (_options.selectActiveRow && data.row != null) {\n            setSelectedRanges([new Slick.Range(data.row, 0, data.row, _grid.getColumns().length - 1)]);\n        }\n    }\n    function handleKeyDown(e) {\n        var activeRow = _grid.getActiveCell();\n        if (activeRow && e.shiftKey && !e.ctrlKey && !e.altKey && !e.metaKey && (e.which == 38 || e.which == 40)) {\n            var selectedRows = getSelectedRows();\n            selectedRows.sort(function (x, y) {\n                return x - y;\n            });\n            if (!selectedRows.length) {\n                selectedRows = [activeRow.row];\n            }\n            var top = selectedRows[0];\n            var bottom = selectedRows[selectedRows.length - 1];\n            var active;\n            if (e.which == 40) {\n                active = activeRow.row < bottom || top == bottom ? ++bottom : ++top;\n            } else {\n                active = activeRow.row < bottom ? --bottom : --top;\n            }\n            if (active >= 0 && active < _grid.getDataLength()) {\n                _grid.scrollRowIntoView(active);\n                var tempRanges = rowsToRanges(getRowsRange(top, bottom));\n                setSelectedRanges(tempRanges);\n            }\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n    function handleClick(e) {\n        var cell = _grid.getCellFromEvent(e);\n        if (!cell || !_grid.canCellBeActive(cell.row, cell.cell)) {\n            return false;\n        }\n        if (!_grid.getOptions().multiSelect || !e.ctrlKey && !e.shiftKey && !e.metaKey) {\n            return false;\n        }\n        var selection = rangesToRows(_ranges);\n        var idx = $.inArray(cell.row, selection);\n        if (idx === -1 && (e.ctrlKey || e.metaKey)) {\n            selection.push(cell.row);\n            _grid.setActiveCell(cell.row, cell.cell);\n        } else if (idx !== -1 && (e.ctrlKey || e.metaKey)) {\n            selection = $.grep(selection, function (o, i) {\n                return o !== cell.row;\n            });\n            _grid.setActiveCell(cell.row, cell.cell);\n        } else if (selection.length && e.shiftKey) {\n            var last = selection.pop();\n            var from = Math.min(cell.row, last);\n            var to = Math.max(cell.row, last);\n            selection = [];\n            for (var i = from; i <= to; i++) {\n                if (i !== last) {\n                    selection.push(i);\n                }\n            }\n            selection.push(last);\n            _grid.setActiveCell(cell.row, cell.cell);\n        }\n        var tempRanges = rowsToRanges(selection);\n        setSelectedRanges(tempRanges);\n        e.stopImmediatePropagation();\n        return true;\n    }\n    $.extend(this, {\n        'getSelectedRows': getSelectedRows,\n        'setSelectedRows': setSelectedRows,\n        'getSelectedRanges': getSelectedRanges,\n        'setSelectedRanges': setSelectedRanges,\n        'init': init,\n        'destroy': destroy,\n        'onSelectedRangesChanged': new Slick.Event()\n    });\n}\nmodule.exports = { 'RowSelectionModel': RowSelectionModel };","'use strict';\n/***\n * Contains core SlickGrid classes.\n * @module Core\n * @namespace Slick\n */\n/***\n   * An event object for passing data to event handlers and letting them control propagation.\n   * <p>This is pretty much identical to how W3C and jQuery implement events.</p>\n   * @class EventData\n   * @constructor\n   */\nfunction EventData() {\n    var isPropagationStopped = false;\n    var isImmediatePropagationStopped = false;\n    /***\n     * Stops event from propagating up the DOM tree.\n     * @method stopPropagation\n     */\n    this.stopPropagation = function () {\n        isPropagationStopped = true;\n    };\n    /***\n     * Returns whether stopPropagation was called on this event object.\n     * @method isPropagationStopped\n     * @return {Boolean}\n     */\n    this.isPropagationStopped = function () {\n        return isPropagationStopped;\n    };\n    /***\n     * Prevents the rest of the handlers from being executed.\n     * @method stopImmediatePropagation\n     */\n    this.stopImmediatePropagation = function () {\n        isImmediatePropagationStopped = true;\n    };\n    /***\n     * Returns whether stopImmediatePropagation was called on this event object.\\\n     * @method isImmediatePropagationStopped\n     * @return {Boolean}\n     */\n    this.isImmediatePropagationStopped = function () {\n        return isImmediatePropagationStopped;\n    };\n}\n/***\n   * A simple publisher-subscriber implementation.\n   * @class Event\n   * @constructor\n   */\nfunction Event() {\n    var handlers = [];\n    /***\n     * Adds an event handler to be called when the event is fired.\n     * <p>Event handler will receive two arguments - an <code>EventData</code> and the <code>data</code>\n     * object the event was fired with.<p>\n     * @method subscribe\n     * @param fn {Function} Event handler.\n     */\n    this.subscribe = function (fn) {\n        handlers.push(fn);\n    };\n    /***\n     * Removes an event handler added with <code>subscribe(fn)</code>.\n     * @method unsubscribe\n     * @param fn {Function} Event handler to be removed.\n     */\n    this.unsubscribe = function (fn) {\n        for (var i = handlers.length - 1; i >= 0; i--) {\n            if (handlers[i] === fn) {\n                handlers.splice(i, 1);\n            }\n        }\n    };\n    /***\n     * Fires an event notifying all subscribers.\n     * @method notify\n     * @param args {Object} Additional data object to be passed to all handlers.\n     * @param e {EventData}\n     *      Optional.\n     *      An <code>EventData</code> object to be passed to all handlers.\n     *      For DOM events, an existing W3C/jQuery event object can be passed in.\n     * @param scope {Object}\n     *      Optional.\n     *      The scope (\"this\") within which the handler will be executed.\n     *      If not specified, the scope will be set to the <code>Event</code> instance.\n     */\n    this.notify = function (args, e, scope) {\n        e = e || new EventData();\n        scope = scope || this;\n        var returnValue;\n        for (var i = 0; i < handlers.length && !(e.isPropagationStopped() || e.isImmediatePropagationStopped()); i++) {\n            returnValue = handlers[i].call(scope, e, args);\n        }\n        return returnValue;\n    };\n}\nfunction EventHandler() {\n    var handlers = [];\n    this.subscribe = function (event, handler) {\n        handlers.push({\n            event: event,\n            handler: handler\n        });\n        event.subscribe(handler);\n        return this;    // allow chaining\n    };\n    this.unsubscribe = function (event, handler) {\n        var i = handlers.length;\n        while (i--) {\n            if (handlers[i].event === event && handlers[i].handler === handler) {\n                handlers.splice(i, 1);\n                event.unsubscribe(handler);\n                return;\n            }\n        }\n        return this;    // allow chaining\n    };\n    this.unsubscribeAll = function () {\n        var i = handlers.length;\n        while (i--) {\n            handlers[i].event.unsubscribe(handlers[i].handler);\n        }\n        handlers = [];\n        return this;    // allow chaining\n    };\n}\n/***\n   * A structure containing a range of cells.\n   * @class Range\n   * @constructor\n   * @param fromRow {Integer} Starting row.\n   * @param fromCell {Integer} Starting cell.\n   * @param toRow {Integer} Optional. Ending row. Defaults to <code>fromRow</code>.\n   * @param toCell {Integer} Optional. Ending cell. Defaults to <code>fromCell</code>.\n   */\nfunction Range(fromRow, fromCell, toRow, toCell) {\n    if (toRow === undefined && toCell === undefined) {\n        toRow = fromRow;\n        toCell = fromCell;\n    }\n    /***\n     * @property fromRow\n     * @type {Integer}\n     */\n    this.fromRow = Math.min(fromRow, toRow);\n    /***\n     * @property fromCell\n     * @type {Integer}\n     */\n    this.fromCell = Math.min(fromCell, toCell);\n    /***\n     * @property toRow\n     * @type {Integer}\n     */\n    this.toRow = Math.max(fromRow, toRow);\n    /***\n     * @property toCell\n     * @type {Integer}\n     */\n    this.toCell = Math.max(fromCell, toCell);\n    /***\n     * Returns whether a range represents a single row.\n     * @method isSingleRow\n     * @return {Boolean}\n     */\n    this.isSingleRow = function () {\n        return this.fromRow == this.toRow;\n    };\n    /***\n     * Returns whether a range represents a single cell.\n     * @method isSingleCell\n     * @return {Boolean}\n     */\n    this.isSingleCell = function () {\n        return this.fromRow == this.toRow && this.fromCell == this.toCell;\n    };\n    /***\n     * Returns whether a range contains a given cell.\n     * @method contains\n     * @param row {Integer}\n     * @param cell {Integer}\n     * @return {Boolean}\n     */\n    this.contains = function (row, cell) {\n        return row >= this.fromRow && row <= this.toRow && cell >= this.fromCell && cell <= this.toCell;\n    };\n    /***\n     * Returns a readable representation of a range.\n     * @method toString\n     * @return {String}\n     */\n    this.toString = function () {\n        if (this.isSingleCell()) {\n            return '(' + this.fromRow + ':' + this.fromCell + ')';\n        } else {\n            return '(' + this.fromRow + ':' + this.fromCell + ' - ' + this.toRow + ':' + this.toCell + ')';\n        }\n    };\n}\n/***\n   * A base class that all special / non-data rows (like Group and GroupTotals) derive from.\n   * @class NonDataItem\n   * @constructor\n   */\nfunction NonDataItem() {\n    this.__nonDataRow = true;\n}\n/***\n   * Information about a group of rows.\n   * @class Group\n   * @extends Slick.NonDataItem\n   * @constructor\n   */\nfunction Group() {\n    this.__group = true;\n    /**\n     * Grouping level, starting with 0.\n     * @property level\n     * @type {Number}\n     */\n    this.level = 0;\n    /***\n     * Number of rows in the group.\n     * @property count\n     * @type {Integer}\n     */\n    this.count = 0;\n    /***\n     * Grouping value.\n     * @property value\n     * @type {Object}\n     */\n    this.value = null;\n    /***\n     * Formatted display value of the group.\n     * @property title\n     * @type {String}\n     */\n    this.title = null;\n    /***\n     * Whether a group is collapsed.\n     * @property collapsed\n     * @type {Boolean}\n     */\n    this.collapsed = false;\n    /***\n     * Whether a group selection checkbox is checked.\n     * @property selectChecked\n     * @type {Boolean}\n     */\n    this.selectChecked = false;\n    /***\n     * GroupTotals, if any.\n     * @property totals\n     * @type {GroupTotals}\n     */\n    this.totals = null;\n    /**\n     * Rows that are part of the group.\n     * @property rows\n     * @type {Array}\n     */\n    this.rows = [];\n    /**\n     * Sub-groups that are part of the group.\n     * @property groups\n     * @type {Array}\n     */\n    this.groups = null;\n    /**\n     * A unique key used to identify the group.  This key can be used in calls to DataView\n     * collapseGroup() or expandGroup().\n     * @property groupingKey\n     * @type {Object}\n     */\n    this.groupingKey = null;\n}\nGroup.prototype = new NonDataItem();\n/***\n   * Compares two Group instances.\n   * @method equals\n   * @return {Boolean}\n   * @param group {Group} Group instance to compare to.\n   */\nGroup.prototype.equals = function (group) {\n    return this.value === group.value && this.count === group.count && this.collapsed === group.collapsed && this.title === group.title;\n};\n/***\n   * Information about group totals.\n   * An instance of GroupTotals will be created for each totals row and passed to the aggregators\n   * so that they can store arbitrary data in it.  That data can later be accessed by group totals\n   * formatters during the display.\n   * @class GroupTotals\n   * @extends Slick.NonDataItem\n   * @constructor\n   */\nfunction GroupTotals() {\n    this.__groupTotals = true;\n    /***\n     * Parent Group.\n     * @param group\n     * @type {Group}\n     */\n    this.group = null;\n    /***\n     * Whether the totals have been fully initialized / calculated.\n     * Will be set to false for lazy-calculated group totals.\n     * @param initialized\n     * @type {Boolean}\n     */\n    this.initialized = false;\n}\nGroupTotals.prototype = new NonDataItem();\n/***\n   * A locking helper to track the active edit controller and ensure that only a single controller\n   * can be active at a time.  This prevents a whole class of state and validation synchronization\n   * issues.  An edit controller (such as SlickGrid) can query if an active edit is in progress\n   * and attempt a commit or cancel before proceeding.\n   * @class EditorLock\n   * @constructor\n   */\nfunction EditorLock() {\n    var activeEditController = null;\n    /***\n     * Returns true if a specified edit controller is active (has the edit lock).\n     * If the parameter is not specified, returns true if any edit controller is active.\n     * @method isActive\n     * @param editController {EditController}\n     * @return {Boolean}\n     */\n    this.isActive = function (editController) {\n        return editController ? activeEditController === editController : activeEditController !== null;\n    };\n    /***\n     * Sets the specified edit controller as the active edit controller (acquire edit lock).\n     * If another edit controller is already active, and exception will be throw new Error(.\n     * @method activate\n     * @param editController {EditController} edit controller acquiring the lock\n     */\n    this.activate = function (editController) {\n        if (editController === activeEditController) {\n            // already activated?\n            return;\n        }\n        if (activeEditController !== null) {\n            throw new Error('SlickGrid.EditorLock.activate: an editController is still active, can\\'t activate another editController');\n        }\n        if (!editController.commitCurrentEdit) {\n            throw new Error('SlickGrid.EditorLock.activate: editController must implement .commitCurrentEdit()');\n        }\n        if (!editController.cancelCurrentEdit) {\n            throw new Error('SlickGrid.EditorLock.activate: editController must implement .cancelCurrentEdit()');\n        }\n        activeEditController = editController;\n    };\n    /***\n     * Unsets the specified edit controller as the active edit controller (release edit lock).\n     * If the specified edit controller is not the active one, an exception will be throw new Error(.\n     * @method deactivate\n     * @param editController {EditController} edit controller releasing the lock\n     */\n    this.deactivate = function (editController) {\n        if (activeEditController !== editController) {\n            throw new Error('SlickGrid.EditorLock.deactivate: specified editController is not the currently active one');\n        }\n        activeEditController = null;\n    };\n    /***\n     * Attempts to commit the current edit by calling \"commitCurrentEdit\" method on the active edit\n     * controller and returns whether the commit attempt was successful (commit may fail due to validation\n     * errors, etc.).  Edit controller's \"commitCurrentEdit\" must return true if the commit has succeeded\n     * and false otherwise.  If no edit controller is active, returns true.\n     * @method commitCurrentEdit\n     * @return {Boolean}\n     */\n    this.commitCurrentEdit = function () {\n        return activeEditController ? activeEditController.commitCurrentEdit() : true;\n    };\n    /***\n     * Attempts to cancel the current edit by calling \"cancelCurrentEdit\" method on the active edit\n     * controller and returns whether the edit was successfully cancelled.  If no edit controller is\n     * active, returns true.\n     * @method cancelCurrentEdit\n     * @return {Boolean}\n     */\n    this.cancelCurrentEdit = function cancelCurrentEdit() {\n        return activeEditController ? activeEditController.cancelCurrentEdit() : true;\n    };\n}\nmodule.exports = {\n    'Event': Event,\n    'EventData': EventData,\n    'EventHandler': EventHandler,\n    'Range': Range,\n    'NonDataRow': NonDataItem,\n    'Group': Group,\n    'GroupTotals': GroupTotals,\n    'EditorLock': EditorLock,\n    /***\n     * A global singleton editor lock.\n     * @class GlobalEditorLock\n     * @static\n     * @constructor\n     */\n    'GlobalEditorLock': new EditorLock(),\n    'keyCode': {\n        BACKSPACE: 8,\n        DELETE: 46,\n        DOWN: 40,\n        END: 35,\n        ENTER: 13,\n        ESCAPE: 27,\n        ESC: 27,\n        HOME: 36,\n        INSERT: 45,\n        LEFT: 37,\n        PAGE_DOWN: 34,\n        PAGE_UP: 33,\n        RIGHT: 39,\n        TAB: 9,\n        UP: 38,\n        C: 67,\n        V: 86\n    },\n    'preClickClassName': 'slick-edit-preclick'\n};","'use strict';\n/**\r\n * @license\r\n * (c) 2009-2016 Michael Leibman\r\n * michael{dot}leibman{at}gmail{dot}com\r\n * http://github.com/mleibman/slickgrid\r\n *\r\n * Distributed under MIT license.\r\n * All rights reserved.\r\n *\r\n * SlickGrid v2.3\r\n *\r\n * NOTES:\r\n *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\r\n *     This increases the speed dramatically, but can only be done safely because there are no event handlers\r\n *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\r\n *     and do proper cleanup.\r\n */\nvar $ = require(417    /* ./slick.jquery */);\nvar Slick = require(415    /* ./slick.core */);\n// shared across all grids on the page\nvar scrollbarDimensions;\nvar maxSupportedCssHeight;\n// browser's breaking point\n//////////////////////////////////////////////////////////////////////////////////////////////\n// SlickGrid class implementation (available as Slick.Grid)\n/**\r\n   * Creates a new instance of the grid.\r\n   * @class SlickGrid\r\n   * @constructor\r\n   * @param {Node}              container   Container node to create the grid in.\r\n   * @param {Array,Object}      data        An array of objects for databinding.\r\n   * @param {Array}             columns     An array of column definitions.\r\n   * @param {Object}            options     Grid options.\r\n   **/\nfunction SlickGrid(container, data, columns, options) {\n    if (!$.fn.drag) {\n        require(411    /* ./lib/jquery.event.drag-2.3.0 */);\n    }\n    if (!$.fn.drop) {\n        require(412    /* ./lib/jquery.event.drop-2.3.0 */);\n    }\n    // settings\n    var defaults = {\n        explicitInitialization: false,\n        rowHeight: 25,\n        defaultColumnWidth: 80,\n        enableAddRow: false,\n        leaveSpaceForNewRows: false,\n        editable: false,\n        autoEdit: true,\n        enableCellNavigation: true,\n        enableColumnReorder: true,\n        asyncEditorLoading: false,\n        asyncEditorLoadDelay: 100,\n        forceFitColumns: false,\n        enableAsyncPostRender: false,\n        asyncPostRenderDelay: 50,\n        enableAsyncPostRenderCleanup: false,\n        asyncPostRenderCleanupDelay: 40,\n        autoHeight: false,\n        editorLock: Slick.GlobalEditorLock,\n        showHeaderRow: false,\n        headerRowHeight: 25,\n        createFooterRow: false,\n        showFooterRow: false,\n        footerRowHeight: 25,\n        createPreHeaderPanel: false,\n        showPreHeaderPanel: false,\n        preHeaderPanelHeight: 25,\n        showTopPanel: false,\n        topPanelHeight: 25,\n        formatterFactory: null,\n        editorFactory: null,\n        cellFlashingCssClass: 'flashing',\n        selectedCellCssClass: 'selected',\n        multiSelect: true,\n        enableTextSelectionOnCells: false,\n        dataItemColumnValueExtractor: null,\n        fullWidthRows: false,\n        multiColumnSort: false,\n        numberedMultiColumnSort: false,\n        tristateMultiColumnSort: false,\n        defaultFormatter: defaultFormatter,\n        forceSyncScrolling: false,\n        addNewRowCssClass: 'new-row',\n        preserveCopiedSelectionOnPaste: false,\n        showCellSelection: true\n    };\n    var columnDefaults = {\n        name: '',\n        resizable: true,\n        sortable: false,\n        minWidth: 30,\n        rerenderOnResize: false,\n        headerCssClass: null,\n        defaultSortAsc: true,\n        focusable: true,\n        selectable: true\n    };\n    // scroller\n    var th;\n    // virtual height\n    var h;\n    // real scrollable height\n    var ph;\n    // page height\n    var n;\n    // number of pages\n    var cj;\n    // \"jumpiness\" coefficient\n    var page = 0;\n    // current page\n    var offset = 0;\n    // current page offset\n    var vScrollDir = 1;\n    // private\n    var initialized = false;\n    var $container;\n    var uid = 'slickgrid_' + Math.round(1000000 * Math.random());\n    var self = this;\n    var $focusSink, $focusSink2;\n    var $headerScroller;\n    var $headers;\n    var $headerRow, $headerRowScroller, $headerRowSpacer;\n    var $footerRow, $footerRowScroller, $footerRowSpacer;\n    var $preHeaderPanel, $preHeaderPanelScroller, $preHeaderPanelSpacer;\n    var $topPanelScroller;\n    var $topPanel;\n    var $viewport;\n    var $canvas;\n    var $style;\n    var $boundAncestors;\n    var stylesheet, columnCssRulesL, columnCssRulesR;\n    var viewportH, viewportW;\n    var canvasWidth;\n    var viewportHasHScroll, viewportHasVScroll;\n    var headerColumnWidthDiff = 0, headerColumnHeightDiff = 0,\n        // border+padding\n        cellWidthDiff = 0, cellHeightDiff = 0, jQueryNewWidthBehaviour = false;\n    var absoluteColumnMinWidth;\n    var sortIndicatorCssClass = 'slick-sort-indicator';\n    var tabbingDirection = 1;\n    var activePosX;\n    var activeRow, activeCell;\n    var activeCellNode = null;\n    var currentEditor = null;\n    var serializedEditorValue;\n    var editController;\n    var rowsCache = {};\n    var renderedRows = 0;\n    var numVisibleRows;\n    var prevScrollTop = 0;\n    var scrollTop = 0;\n    var lastRenderedScrollTop = 0;\n    var lastRenderedScrollLeft = 0;\n    var prevScrollLeft = 0;\n    var scrollLeft = 0;\n    var selectionModel;\n    var selectedRows = [];\n    var plugins = [];\n    var cellCssClasses = {};\n    var columnsById = {};\n    var sortColumns = [];\n    var columnPosLeft = [];\n    var columnPosRight = [];\n    var pagingActive = false;\n    var pagingIsLastPage = false;\n    // async call handles\n    var h_editorLoader = null;\n    var h_render = null;\n    var h_postrender = null;\n    var h_postrenderCleanup = null;\n    var postProcessedRows = {};\n    var postProcessToRow = null;\n    var postProcessFromRow = null;\n    var postProcessedCleanupQueue = [];\n    var postProcessgroupId = 0;\n    // perf counters\n    var counter_rows_rendered = 0;\n    var counter_rows_removed = 0;\n    // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n    // See http://crbug.com/312427.\n    var rowNodeFromLastMouseWheelEvent;\n    // this node must not be deleted while inertial scrolling\n    var zombieRowNodeFromLastMouseWheelEvent;\n    // node that was hidden instead of getting deleted\n    var zombieRowCacheFromLastMouseWheelEvent;\n    // row cache for above node\n    var zombieRowPostProcessedFromLastMouseWheelEvent;\n    // post processing references for above node\n    // store css attributes if display:none is active in container or parent\n    var cssShow = {\n        position: 'absolute',\n        visibility: 'hidden',\n        display: 'block'\n    };\n    var $hiddenParents;\n    var oldProps = [];\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Initialization\n    function init() {\n        if (container instanceof $) {\n            $container = container;\n        } else {\n            $container = $(container);\n        }\n        if ($container.length < 1) {\n            throw new Error('SlickGrid requires a valid container, ' + container + ' does not exist in the DOM.');\n        }\n        cacheCssForHiddenInit();\n        // calculate these only once and share between grid instances\n        maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n        scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n        options = $.extend({}, defaults, options);\n        validateAndEnforceOptions();\n        columnDefaults.width = options.defaultColumnWidth;\n        columnsById = {};\n        for (var i = 0; i < columns.length; i++) {\n            var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n            columnsById[m.id] = i;\n            if (m.minWidth && m.width < m.minWidth) {\n                m.width = m.minWidth;\n            }\n            if (m.maxWidth && m.width > m.maxWidth) {\n                m.width = m.maxWidth;\n            }\n        }\n        // validate loaded JavaScript modules against requested options\n        if (options.enableColumnReorder && !$.fn.sortable) {\n            throw new Error('SlickGrid\\'s \\'enableColumnReorder = true\\' option requires jquery-ui.sortable module to be loaded');\n        }\n        editController = {\n            'commitCurrentEdit': commitCurrentEdit,\n            'cancelCurrentEdit': cancelCurrentEdit\n        };\n        $container.empty().css('overflow', 'hidden').css('outline', 0).addClass(uid).addClass('ui-widget');\n        // set up a positioning container if needed\n        if (!/relative|absolute|fixed/.test($container.css('position'))) {\n            $container.css('position', 'relative');\n        }\n        $focusSink = $('<div tabIndex=\\'0\\' hideFocus style=\\'position:fixed;width:0;height:0;top:0;left:0;outline:0;\\'></div>').appendTo($container);\n        if (options.createPreHeaderPanel) {\n            $preHeaderPanelScroller = $('<div class=\\'slick-preheader-panel ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n            $preHeaderPanel = $('<div />').appendTo($preHeaderPanelScroller);\n            $preHeaderPanelSpacer = $('<div style=\\'display:block;height:1px;position:absolute;top:0;left:0;\\'></div>').css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($preHeaderPanelScroller);\n            if (!options.showPreHeaderPanel) {\n                $preHeaderPanelScroller.hide();\n            }\n        }\n        $headerScroller = $('<div class=\\'slick-header ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n        $headers = $('<div class=\\'slick-header-columns\\' style=\\'left:-1000px\\' />').appendTo($headerScroller);\n        $headers.width(getHeadersWidth());\n        $headerRowScroller = $('<div class=\\'slick-headerrow ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n        $headerRow = $('<div class=\\'slick-headerrow-columns\\' />').appendTo($headerRowScroller);\n        $headerRowSpacer = $('<div style=\\'display:block;height:1px;position:absolute;top:0;left:0;\\'></div>').css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($headerRowScroller);\n        $topPanelScroller = $('<div class=\\'slick-top-panel-scroller ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n        $topPanel = $('<div class=\\'slick-top-panel\\' style=\\'width:10000px\\' />').appendTo($topPanelScroller);\n        if (!options.showTopPanel) {\n            $topPanelScroller.hide();\n        }\n        if (!options.showHeaderRow) {\n            $headerRowScroller.hide();\n        }\n        $viewport = $('<div class=\\'slick-viewport\\' style=\\'width:100%;overflow:auto;outline:0;position:relative;;\\'>').appendTo($container);\n        $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n        $canvas = $('<div class=\\'grid-canvas\\' />').appendTo($viewport);\n        if (options.createFooterRow) {\n            $footerRowScroller = $('<div class=\\'slick-footerrow ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n            $footerRow = $('<div class=\\'slick-footerrow-columns\\' />').appendTo($footerRowScroller);\n            $footerRowSpacer = $('<div style=\\'display:block;height:1px;position:absolute;top:0;left:0;\\'></div>').css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($footerRowScroller);\n            if (!options.showFooterRow) {\n                $footerRowScroller.hide();\n            }\n        }\n        if (options.numberedMultiColumnSort) {\n            sortIndicatorCssClass = 'slick-sort-indicator-numbered';\n        }\n        $focusSink2 = $focusSink.clone().appendTo($container);\n        if (!options.explicitInitialization) {\n            finishInitialization();\n        }\n    }\n    function finishInitialization() {\n        if (!initialized) {\n            initialized = true;\n            viewportW = parseFloat($.css($container[0], 'width', true));\n            // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n            // calculate the diff so we can set consistent sizes\n            measureCellPaddingAndBorder();\n            // for usability reasons, all text selection in SlickGrid is disabled\n            // with the exception of input and textarea elements (selection must\n            // be enabled there so that editors work as expected); note that\n            // selection in grid cells (grid body) is already unavailable in\n            // all browsers except IE\n            disableSelection($headers);\n            // disable all text selection in header (including input and textarea)\n            if (!options.enableTextSelectionOnCells) {\n                // disable text selection in grid cells except in input and textarea elements\n                // (this is IE-specific, because selectstart event will only fire in IE)\n                $viewport.on('selectstart.ui', function (event) {\n                    return $(event.target).is('input,textarea');\n                });\n            }\n            updateColumnCaches();\n            createColumnHeaders();\n            setupColumnSort();\n            createCssRules();\n            resizeCanvas();\n            bindAncestorScrollEvents();\n            $container.on('resize.slickgrid', resizeCanvas);\n            $viewport    //.on(\"click\", handleClick)\n.on('scroll', handleScroll);\n            $headerScroller.on('contextmenu', handleHeaderContextMenu).on('click', handleHeaderClick).on('mouseenter', '.slick-header-column', handleHeaderMouseEnter).on('mouseleave', '.slick-header-column', handleHeaderMouseLeave);\n            $headerRowScroller.on('scroll', handleHeaderRowScroll);\n            if (options.createFooterRow) {\n                $footerRowScroller.on('scroll', handleFooterRowScroll);\n            }\n            if (options.createPreHeaderPanel) {\n                $preHeaderPanelScroller.on('scroll', handlePreHeaderPanelScroll);\n            }\n            $focusSink.add($focusSink2).on('keydown', handleKeyDown);\n            $canvas.on('keydown', handleKeyDown).on('click', handleClick).on('dblclick', handleDblClick).on('contextmenu', handleContextMenu).on('draginit', handleDragInit).on('dragstart', { distance: 3 }, handleDragStart).on('drag', handleDrag).on('dragend', handleDragEnd).on('mouseenter', '.slick-cell', handleMouseEnter).on('mouseleave', '.slick-cell', handleMouseLeave);\n            // Work around http://crbug.com/312427.\n            if (navigator.userAgent.toLowerCase().match(/webkit/) && navigator.userAgent.toLowerCase().match(/macintosh/)) {\n                $canvas.on('mousewheel', handleMouseWheel);\n            }\n            restoreCssFromHiddenInit();\n        }\n    }\n    function cacheCssForHiddenInit() {\n        // handle display:none on container or container parents\n        $hiddenParents = $container.parents().addBack().not(':visible');\n        $hiddenParents.each(function () {\n            var old = {};\n            for (var name in cssShow) {\n                old[name] = this.style[name];\n                this.style[name] = cssShow[name];\n            }\n            oldProps.push(old);\n        });\n    }\n    function restoreCssFromHiddenInit() {\n        // finish handle display:none on container or container parents\n        // - put values back the way they were\n        $hiddenParents.each(function (i) {\n            var old = oldProps[i];\n            for (var name in cssShow) {\n                this.style[name] = old[name];\n            }\n        });\n    }\n    function registerPlugin(plugin) {\n        plugins.unshift(plugin);\n        plugin.init(self);\n    }\n    function unregisterPlugin(plugin) {\n        for (var i = plugins.length; i >= 0; i--) {\n            if (plugins[i] === plugin) {\n                if (plugins[i].destroy) {\n                    plugins[i].destroy();\n                }\n                plugins.splice(i, 1);\n                break;\n            }\n        }\n    }\n    function setSelectionModel(model) {\n        if (selectionModel) {\n            selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n            if (selectionModel.destroy) {\n                selectionModel.destroy();\n            }\n        }\n        selectionModel = model;\n        if (selectionModel) {\n            selectionModel.init(self);\n            selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n        }\n    }\n    function getSelectionModel() {\n        return selectionModel;\n    }\n    function getCanvasNode() {\n        return $canvas[0];\n    }\n    function measureScrollbar() {\n        var $c = $('<div style=\\'position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;\\'></div>').appendTo('body');\n        var dim = {\n            width: $c.width() - $c[0].clientWidth,\n            height: $c.height() - $c[0].clientHeight\n        };\n        $c.remove();\n        return dim;\n    }\n    function getColumnTotalWidth(includeScrollbar) {\n        var totalWidth = 0;\n        for (var i = 0, ii = columns.length; i < ii; i++) {\n            var width = columns[i].width;\n            totalWidth += width;\n        }\n        if (includeScrollbar) {\n            totalWidth += scrollbarDimensions.width;\n        }\n        return totalWidth;\n    }\n    function getHeadersWidth() {\n        var headersWidth = getColumnTotalWidth(true);\n        return Math.max(headersWidth, viewportW) + 1000;\n    }\n    function getCanvasWidth() {\n        var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n        var rowWidth = 0;\n        var i = columns.length;\n        while (i--) {\n            rowWidth += columns[i].width;\n        }\n        return options.fullWidthRows ? Math.max(rowWidth, availableWidth) : rowWidth;\n    }\n    function updateCanvasWidth(forceColumnWidthsUpdate) {\n        var oldCanvasWidth = canvasWidth;\n        canvasWidth = getCanvasWidth();\n        if (canvasWidth != oldCanvasWidth) {\n            $canvas.width(canvasWidth);\n            $headerRow.width(canvasWidth);\n            if (options.createFooterRow) {\n                $footerRow.width(canvasWidth);\n            }\n            if (options.createPreHeaderPanel) {\n                $preHeaderPanel.width(canvasWidth);\n            }\n            $headers.width(getHeadersWidth());\n            viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n        }\n        var w = canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0);\n        $headerRowSpacer.width(w);\n        if (options.createFooterRow) {\n            $footerRowSpacer.width(w);\n        }\n        if (options.createPreHeaderPanel) {\n            $preHeaderPanelSpacer.width(w);\n        }\n        if (canvasWidth != oldCanvasWidth || forceColumnWidthsUpdate) {\n            applyColumnWidths();\n        }\n    }\n    function disableSelection($target) {\n        if ($target && $target.jquery) {\n            $target.attr('unselectable', 'on').css('MozUserSelect', 'none').on('selectstart.ui', function () {\n                return false;\n            });    // from jquery:ui.core.js 1.7.2\n        }\n    }\n    function getMaxSupportedCssHeight() {\n        var supportedHeight = 1000000;\n        // FF reports the height back but still renders blank after ~6M px\n        var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n        var div = $('<div style=\\'display:none\\' />').appendTo(document.body);\n        while (true) {\n            var test = supportedHeight * 2;\n            div.css('height', test);\n            if (test > testUpTo || div.height() !== test) {\n                break;\n            } else {\n                supportedHeight = test;\n            }\n        }\n        div.remove();\n        return supportedHeight;\n    }\n    function getUID() {\n        return uid;\n    }\n    function getHeaderColumnWidthDiff() {\n        return headerColumnWidthDiff;\n    }\n    function getScrollbarDimensions() {\n        return scrollbarDimensions;\n    }\n    // TODO:  this is static.  need to handle page mutation.\n    function bindAncestorScrollEvents() {\n        var elem = $canvas[0];\n        while ((elem = elem.parentNode) != document.body && elem != null) {\n            // bind to scroll containers only\n            if (elem == $viewport[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\n                var $elem = $(elem);\n                if (!$boundAncestors) {\n                    $boundAncestors = $elem;\n                } else {\n                    $boundAncestors = $boundAncestors.add($elem);\n                }\n                $elem.on('scroll.' + uid, handleActiveCellPositionChange);\n            }\n        }\n    }\n    function unbindAncestorScrollEvents() {\n        if (!$boundAncestors) {\n            return;\n        }\n        $boundAncestors.off('scroll.' + uid);\n        $boundAncestors = null;\n    }\n    function updateColumnHeader(columnId, title, toolTip) {\n        if (!initialized) {\n            return;\n        }\n        var idx = getColumnIndex(columnId);\n        if (idx == null) {\n            return;\n        }\n        var columnDef = columns[idx];\n        var $header = $headers.children().eq(idx);\n        if ($header) {\n            if (title !== undefined) {\n                columns[idx].name = title;\n            }\n            if (toolTip !== undefined) {\n                columns[idx].toolTip = toolTip;\n            }\n            trigger(self.onBeforeHeaderCellDestroy, {\n                'node': $header[0],\n                'column': columnDef,\n                'grid': self\n            });\n            $header.attr('title', toolTip || '').children().eq(0).html(title);\n            trigger(self.onHeaderCellRendered, {\n                'node': $header[0],\n                'column': columnDef,\n                'grid': self\n            });\n        }\n    }\n    function getHeaderRow() {\n        return $headerRow[0];\n    }\n    function getFooterRow() {\n        return $footerRow[0];\n    }\n    function getPreHeaderPanel() {\n        return $preHeaderPanel[0];\n    }\n    function getHeaderRowColumn(columnId) {\n        var idx = getColumnIndex(columnId);\n        var $header = $headerRow.children().eq(idx);\n        return $header && $header[0];\n    }\n    function getFooterRowColumn(columnId) {\n        var idx = getColumnIndex(columnId);\n        var $footer = $footerRow.children().eq(idx);\n        return $footer && $footer[0];\n    }\n    function createColumnHeaders() {\n        function onMouseEnter() {\n            $(this).addClass('ui-state-hover');\n        }\n        function onMouseLeave() {\n            $(this).removeClass('ui-state-hover');\n        }\n        $headers.find('.slick-header-column').each(function () {\n            var columnDef = $(this).data('column');\n            if (columnDef) {\n                trigger(self.onBeforeHeaderCellDestroy, {\n                    'node': this,\n                    'column': columnDef,\n                    'grid': self\n                });\n            }\n        });\n        $headers.empty();\n        $headers.width(getHeadersWidth());\n        $headerRow.find('.slick-headerrow-column').each(function () {\n            var columnDef = $(this).data('column');\n            if (columnDef) {\n                trigger(self.onBeforeHeaderRowCellDestroy, {\n                    'node': this,\n                    'column': columnDef,\n                    'grid': self\n                });\n            }\n        });\n        $headerRow.empty();\n        if (options.createFooterRow) {\n            $footerRow.find('.slick-footerrow-column').each(function () {\n                var columnDef = $(this).data('column');\n                if (columnDef) {\n                    trigger(self.onBeforeFooterRowCellDestroy, {\n                        'node': this,\n                        'column': columnDef\n                    });\n                }\n            });\n            $footerRow.empty();\n        }\n        for (var i = 0; i < columns.length; i++) {\n            var m = columns[i];\n            var header = $('<div class=\\'ui-state-default slick-header-column\\' />').html('<span class=\\'slick-column-name\\'>' + m.name + '</span>').width(m.width - headerColumnWidthDiff).attr('id', '' + uid + m.id).attr('title', m.toolTip || '').data('column', m).addClass(m.headerCssClass || '').appendTo($headers);\n            if (options.enableColumnReorder || m.sortable) {\n                header.on('mouseenter', onMouseEnter).on('mouseleave', onMouseLeave);\n            }\n            if (m.sortable) {\n                header.addClass('slick-header-sortable');\n                header.append('<span class=\\'' + sortIndicatorCssClass + '\\' />');\n            }\n            trigger(self.onHeaderCellRendered, {\n                'node': header[0],\n                'column': m,\n                'grid': self\n            });\n            if (options.showHeaderRow) {\n                var headerRowCell = $('<div class=\\'ui-state-default slick-headerrow-column l' + i + ' r' + i + '\\'></div>').data('column', m).appendTo($headerRow);\n                trigger(self.onHeaderRowCellRendered, {\n                    'node': headerRowCell[0],\n                    'column': m,\n                    'grid': self\n                });\n            }\n            if (options.createFooterRow && options.showFooterRow) {\n                var footerRowCell = $('<div class=\\'ui-state-default slick-footerrow-column l' + i + ' r' + i + '\\'></div>').data('column', m).appendTo($footerRow);\n                trigger(self.onFooterRowCellRendered, {\n                    'node': footerRowCell[0],\n                    'column': m\n                });\n            }\n        }\n        setSortColumns(sortColumns);\n        setupColumnResize();\n        if (options.enableColumnReorder) {\n            if (typeof options.enableColumnReorder == 'function') {\n                options.enableColumnReorder(self, $headers, headerColumnWidthDiff, setColumns, setupColumnResize, columns, getColumnIndex, uid, trigger);\n            } else {\n                setupColumnReorder();\n            }\n        }\n    }\n    function setupColumnSort() {\n        $headers.click(function (e) {\n            // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n            e.metaKey = e.metaKey || e.ctrlKey;\n            if ($(e.target).hasClass('slick-resizable-handle')) {\n                return;\n            }\n            var $col = $(e.target).closest('.slick-header-column');\n            if (!$col.length) {\n                return;\n            }\n            var column = $col.data('column');\n            if (column.sortable) {\n                if (!getEditorLock().commitCurrentEdit()) {\n                    return;\n                }\n                var sortColumn = null;\n                var i = 0;\n                for (; i < sortColumns.length; i++) {\n                    if (sortColumns[i].columnId == column.id) {\n                        sortColumn = sortColumns[i];\n                        sortColumn.sortAsc = !sortColumn.sortAsc;\n                        break;\n                    }\n                }\n                var hadSortCol = !!sortColumn;\n                if (options.tristateMultiColumnSort) {\n                    if (!sortColumn) {\n                        sortColumn = {\n                            columnId: column.id,\n                            sortAsc: column.defaultSortAsc\n                        };\n                    }\n                    if (hadSortCol && sortColumn.sortAsc) {\n                        // three state: remove sort rather than go back to ASC\n                        sortColumns.splice(i, 1);\n                        sortColumn = null;\n                    }\n                    if (!options.multiColumnSort) {\n                        sortColumns = [];\n                    }\n                    if (sortColumn && (!hadSortCol || !options.multiColumnSort)) {\n                        sortColumns.push(sortColumn);\n                    }\n                } else {\n                    // legacy behaviour\n                    if (e.metaKey && options.multiColumnSort) {\n                        if (sortColumn) {\n                            sortColumns.splice(i, 1);\n                        }\n                    } else {\n                        if (!e.shiftKey && !e.metaKey || !options.multiColumnSort) {\n                            sortColumns = [];\n                        }\n                        if (!sortColumn) {\n                            sortColumn = {\n                                columnId: column.id,\n                                sortAsc: column.defaultSortAsc\n                            };\n                            sortColumns.push(sortColumn);\n                        } else if (sortColumns.length == 0) {\n                            sortColumns.push(sortColumn);\n                        }\n                    }\n                }\n                setSortColumns(sortColumns);\n                if (sortColumns.length > 0) {\n                    if (!options.multiColumnSort) {\n                        trigger(self.onSort, {\n                            multiColumnSort: false,\n                            sortCol: column,\n                            sortAsc: sortColumns[0].sortAsc,\n                            grid: self\n                        }, e);\n                    } else {\n                        trigger(self.onSort, {\n                            multiColumnSort: true,\n                            sortCols: $.map(sortColumns, function (col) {\n                                return {\n                                    sortCol: columns[getColumnIndex(col.columnId)],\n                                    sortAsc: col.sortAsc\n                                };\n                            }),\n                            grid: self\n                        }, e);\n                    }\n                }\n            }\n        });\n    }\n    function setupColumnReorder() {\n        $headers.filter(':ui-sortable').sortable('destroy');\n        $headers.sortable({\n            containment: 'parent',\n            distance: 3,\n            axis: 'x',\n            cursor: 'default',\n            tolerance: 'intersection',\n            helper: 'clone',\n            placeholder: 'slick-sortable-placeholder ui-state-default slick-header-column',\n            start: function (e, ui) {\n                ui.placeholder.width(ui.helper.outerWidth() - headerColumnWidthDiff);\n                $(ui.helper).addClass('slick-header-column-active');\n            },\n            beforeStop: function (e, ui) {\n                $(ui.helper).removeClass('slick-header-column-active');\n            },\n            stop: function (e) {\n                if (!getEditorLock().commitCurrentEdit()) {\n                    $(this).sortable('cancel');\n                    return;\n                }\n                var reorderedIds = $headers.sortable('toArray');\n                var reorderedColumns = [];\n                for (var i = 0; i < reorderedIds.length; i++) {\n                    reorderedColumns.push(columns[getColumnIndex(reorderedIds[i].replace(uid, ''))]);\n                }\n                setColumns(reorderedColumns);\n                trigger(self.onColumnsReordered, { grid: self });\n                e.stopPropagation();\n                setupColumnResize();\n            }\n        });\n    }\n    function setupColumnResize() {\n        var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n        columnElements = $headers.children();\n        columnElements.find('.slick-resizable-handle').remove();\n        columnElements.each(function (i, e) {\n            if (i >= columns.length) {\n                return;\n            }\n            if (columns[i].resizable) {\n                if (firstResizable === undefined) {\n                    firstResizable = i;\n                }\n                lastResizable = i;\n            }\n        });\n        if (firstResizable === undefined) {\n            return;\n        }\n        columnElements.each(function (i, e) {\n            if (i >= columns.length) {\n                return;\n            }\n            if (i < firstResizable || options.forceFitColumns && i >= lastResizable) {\n                return;\n            }\n            $col = $(e);\n            $('<div class=\\'slick-resizable-handle\\' />').appendTo(e).on('dragstart', function (e, dd) {\n                if (!getEditorLock().commitCurrentEdit()) {\n                    return false;\n                }\n                pageX = e.pageX;\n                $(this).parent().addClass('slick-header-column-active');\n                var shrinkLeewayOnRight = null, stretchLeewayOnRight = null;\n                // lock each column's width option to current width\n                columnElements.each(function (i, e) {\n                    if (i >= columns.length) {\n                        return;\n                    }\n                    columns[i].previousWidth = $(e).outerWidth();\n                });\n                if (options.forceFitColumns) {\n                    shrinkLeewayOnRight = 0;\n                    stretchLeewayOnRight = 0;\n                    // colums on right affect maxPageX/minPageX\n                    for (j = i + 1; j < columns.length; j++) {\n                        c = columns[j];\n                        if (c.resizable) {\n                            if (stretchLeewayOnRight !== null) {\n                                if (c.maxWidth) {\n                                    stretchLeewayOnRight += c.maxWidth - c.previousWidth;\n                                } else {\n                                    stretchLeewayOnRight = null;\n                                }\n                            }\n                            shrinkLeewayOnRight += c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                        }\n                    }\n                }\n                var shrinkLeewayOnLeft = 0, stretchLeewayOnLeft = 0;\n                for (j = 0; j <= i; j++) {\n                    // columns on left only affect minPageX\n                    c = columns[j];\n                    if (c.resizable) {\n                        if (stretchLeewayOnLeft !== null) {\n                            if (c.maxWidth) {\n                                stretchLeewayOnLeft += c.maxWidth - c.previousWidth;\n                            } else {\n                                stretchLeewayOnLeft = null;\n                            }\n                        }\n                        shrinkLeewayOnLeft += c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                    }\n                }\n                if (shrinkLeewayOnRight === null) {\n                    shrinkLeewayOnRight = 100000;\n                }\n                if (shrinkLeewayOnLeft === null) {\n                    shrinkLeewayOnLeft = 100000;\n                }\n                if (stretchLeewayOnRight === null) {\n                    stretchLeewayOnRight = 100000;\n                }\n                if (stretchLeewayOnLeft === null) {\n                    stretchLeewayOnLeft = 100000;\n                }\n                maxPageX = pageX + Math.min(shrinkLeewayOnRight, stretchLeewayOnLeft);\n                minPageX = pageX - Math.min(shrinkLeewayOnLeft, stretchLeewayOnRight);\n            }).on('drag', function (e, dd) {\n                var actualMinWidth, d = Math.min(maxPageX, Math.max(minPageX, e.pageX)) - pageX, x;\n                if (d < 0) {\n                    // shrink column\n                    x = d;\n                    for (j = i; j >= 0; j--) {\n                        c = columns[j];\n                        if (c.resizable) {\n                            actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                            if (x && c.previousWidth + x < actualMinWidth) {\n                                x += c.previousWidth - actualMinWidth;\n                                c.width = actualMinWidth;\n                            } else {\n                                c.width = c.previousWidth + x;\n                                x = 0;\n                            }\n                        }\n                    }\n                    if (options.forceFitColumns) {\n                        x = -d;\n                        for (j = i + 1; j < columns.length; j++) {\n                            c = columns[j];\n                            if (c.resizable) {\n                                if (x && c.maxWidth && c.maxWidth - c.previousWidth < x) {\n                                    x -= c.maxWidth - c.previousWidth;\n                                    c.width = c.maxWidth;\n                                } else {\n                                    c.width = c.previousWidth + x;\n                                    x = 0;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    // stretch column\n                    x = d;\n                    for (j = i; j >= 0; j--) {\n                        c = columns[j];\n                        if (c.resizable) {\n                            if (x && c.maxWidth && c.maxWidth - c.previousWidth < x) {\n                                x -= c.maxWidth - c.previousWidth;\n                                c.width = c.maxWidth;\n                            } else {\n                                c.width = c.previousWidth + x;\n                                x = 0;\n                            }\n                        }\n                    }\n                    if (options.forceFitColumns) {\n                        x = -d;\n                        for (j = i + 1; j < columns.length; j++) {\n                            c = columns[j];\n                            if (c.resizable) {\n                                actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                                if (x && c.previousWidth + x < actualMinWidth) {\n                                    x += c.previousWidth - actualMinWidth;\n                                    c.width = actualMinWidth;\n                                } else {\n                                    c.width = c.previousWidth + x;\n                                    x = 0;\n                                }\n                            }\n                        }\n                    }\n                }\n                applyColumnHeaderWidths();\n                if (options.syncColumnCellResize) {\n                    applyColumnWidths();\n                }\n            }).on('dragend', function (e, dd) {\n                var newWidth;\n                $(this).parent().removeClass('slick-header-column-active');\n                for (j = 0; j < columns.length; j++) {\n                    c = columns[j];\n                    newWidth = $(columnElements[j]).outerWidth();\n                    if (c.previousWidth !== newWidth && c.rerenderOnResize) {\n                        invalidateAllRows();\n                    }\n                }\n                updateCanvasWidth(true);\n                render();\n                trigger(self.onColumnsResized, { grid: self });\n            });\n        });\n    }\n    function getVBoxDelta($el) {\n        var p = [\n            'borderTopWidth',\n            'borderBottomWidth',\n            'paddingTop',\n            'paddingBottom'\n        ];\n        var delta = 0;\n        $.each(p, function (n, val) {\n            delta += parseFloat($el.css(val)) || 0;\n        });\n        return delta;\n    }\n    function measureCellPaddingAndBorder() {\n        var el;\n        var h = [\n            'borderLeftWidth',\n            'borderRightWidth',\n            'paddingLeft',\n            'paddingRight'\n        ];\n        var v = [\n            'borderTopWidth',\n            'borderBottomWidth',\n            'paddingTop',\n            'paddingBottom'\n        ];\n        // jquery prior to version 1.8 handles .width setter/getter as a direct css write/read\n        // jquery 1.8 changed .width to read the true inner element width if box-sizing is set to border-box, and introduced a setter for .outerWidth\n        // so for equivalent functionality, prior to 1.8 use .width, and after use .outerWidth\n        var verArray = $.fn.jquery.split('.');\n        jQueryNewWidthBehaviour = verArray[0] == 1 && verArray[1] >= 8 || verArray[0] >= 2;\n        el = $('<div class=\\'ui-state-default slick-header-column\\' style=\\'visibility:hidden\\'>-</div>').appendTo($headers);\n        headerColumnWidthDiff = headerColumnHeightDiff = 0;\n        if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box') {\n            $.each(h, function (n, val) {\n                headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n            });\n            $.each(v, function (n, val) {\n                headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n            });\n        }\n        el.remove();\n        var r = $('<div class=\\'slick-row\\' />').appendTo($canvas);\n        el = $('<div class=\\'slick-cell\\' id=\\'\\' style=\\'visibility:hidden\\'>-</div>').appendTo(r);\n        cellWidthDiff = cellHeightDiff = 0;\n        if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box') {\n            $.each(h, function (n, val) {\n                cellWidthDiff += parseFloat(el.css(val)) || 0;\n            });\n            $.each(v, function (n, val) {\n                cellHeightDiff += parseFloat(el.css(val)) || 0;\n            });\n        }\n        r.remove();\n        absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n    }\n    function createCssRules() {\n        $style = $('<style type=\\'text/css\\' rel=\\'stylesheet\\' />').appendTo($('head'));\n        var rowHeight = options.rowHeight - cellHeightDiff;\n        var rules = [\n            '.' + uid + ' .slick-header-column { left: 1000px; }',\n            '.' + uid + ' .slick-top-panel { height:' + options.topPanelHeight + 'px; }',\n            '.' + uid + ' .slick-preheader-panel { height:' + options.preHeaderPanelHeight + 'px; }',\n            '.' + uid + ' .slick-headerrow-columns { height:' + options.headerRowHeight + 'px; }',\n            '.' + uid + ' .slick-footerrow-columns { height:' + options.footerRowHeight + 'px; }',\n            '.' + uid + ' .slick-cell { height:' + rowHeight + 'px; }',\n            '.' + uid + ' .slick-row { height:' + options.rowHeight + 'px; }'\n        ];\n        for (var i = 0; i < columns.length; i++) {\n            rules.push('.' + uid + ' .l' + i + ' { }');\n            rules.push('.' + uid + ' .r' + i + ' { }');\n        }\n        if ($style[0].styleSheet) {\n            // IE\n            $style[0].styleSheet.cssText = rules.join(' ');\n        } else {\n            $style[0].appendChild(document.createTextNode(rules.join(' ')));\n        }\n    }\n    function getColumnCssRules(idx) {\n        var i;\n        if (!stylesheet) {\n            var sheets = document.styleSheets;\n            for (i = 0; i < sheets.length; i++) {\n                if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]) {\n                    stylesheet = sheets[i];\n                    break;\n                }\n            }\n            if (!stylesheet) {\n                throw new Error('Cannot find stylesheet.');\n            }\n            // find and cache column CSS rules\n            columnCssRulesL = [];\n            columnCssRulesR = [];\n            var cssRules = stylesheet.cssRules || stylesheet.rules;\n            var matches, columnIdx;\n            for (i = 0; i < cssRules.length; i++) {\n                var selector = cssRules[i].selectorText;\n                if (matches = /\\.l\\d+/.exec(selector)) {\n                    columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n                    columnCssRulesL[columnIdx] = cssRules[i];\n                } else if (matches = /\\.r\\d+/.exec(selector)) {\n                    columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n                    columnCssRulesR[columnIdx] = cssRules[i];\n                }\n            }\n        }\n        return {\n            'left': columnCssRulesL[idx],\n            'right': columnCssRulesR[idx]\n        };\n    }\n    function removeCssRules() {\n        $style.remove();\n        stylesheet = null;\n    }\n    function destroy() {\n        getEditorLock().cancelCurrentEdit();\n        trigger(self.onBeforeDestroy, { grid: self });\n        var i = plugins.length;\n        while (i--) {\n            unregisterPlugin(plugins[i]);\n        }\n        if (options.enableColumnReorder) {\n            $headers.filter(':ui-sortable').sortable('destroy');\n        }\n        unbindAncestorScrollEvents();\n        $container.off('.slickgrid');\n        removeCssRules();\n        $canvas.off('draginit dragstart dragend drag');\n        $container.empty().removeClass(uid);\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // General\n    function trigger(evt, args, e) {\n        e = e || new Slick.EventData();\n        args = args || {};\n        args.grid = self;\n        return evt.notify(args, e, self);\n    }\n    function getEditorLock() {\n        return options.editorLock;\n    }\n    function getEditController() {\n        return editController;\n    }\n    function getColumnIndex(id) {\n        return columnsById[id];\n    }\n    function autosizeColumns() {\n        var i, c, widths = [], shrinkLeeway = 0, total = 0, prevTotal, availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n        for (i = 0; i < columns.length; i++) {\n            c = columns[i];\n            widths.push(c.width);\n            total += c.width;\n            if (c.resizable) {\n                shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n            }\n        }\n        // shrink\n        prevTotal = total;\n        while (total > availWidth && shrinkLeeway) {\n            var shrinkProportion = (total - availWidth) / shrinkLeeway;\n            for (i = 0; i < columns.length && total > availWidth; i++) {\n                c = columns[i];\n                var width = widths[i];\n                if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth) {\n                    continue;\n                }\n                var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n                var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n                shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n                total -= shrinkSize;\n                shrinkLeeway -= shrinkSize;\n                widths[i] -= shrinkSize;\n            }\n            if (prevTotal <= total) {\n                // avoid infinite loop\n                break;\n            }\n            prevTotal = total;\n        }\n        // grow\n        prevTotal = total;\n        while (total < availWidth) {\n            var growProportion = availWidth / total;\n            for (i = 0; i < columns.length && total < availWidth; i++) {\n                c = columns[i];\n                var currentWidth = widths[i];\n                var growSize;\n                if (!c.resizable || c.maxWidth <= currentWidth) {\n                    growSize = 0;\n                } else {\n                    growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, c.maxWidth - currentWidth || 1000000) || 1;\n                }\n                total += growSize;\n                widths[i] += total <= availWidth ? growSize : 0;\n            }\n            if (prevTotal >= total) {\n                // avoid infinite loop\n                break;\n            }\n            prevTotal = total;\n        }\n        var reRender = false;\n        for (i = 0; i < columns.length; i++) {\n            if (columns[i].rerenderOnResize && columns[i].width != widths[i]) {\n                reRender = true;\n            }\n            columns[i].width = widths[i];\n        }\n        applyColumnHeaderWidths();\n        updateCanvasWidth(true);\n        if (reRender) {\n            invalidateAllRows();\n            render();\n        }\n    }\n    function applyColumnHeaderWidths() {\n        if (!initialized) {\n            return;\n        }\n        var h;\n        for (var i = 0, headers = $headers.children(), ii = columns.length; i < ii; i++) {\n            h = $(headers[i]);\n            if (jQueryNewWidthBehaviour) {\n                if (h.outerWidth() !== columns[i].width) {\n                    h.outerWidth(columns[i].width);\n                }\n            } else {\n                if (h.width() !== columns[i].width - headerColumnWidthDiff) {\n                    h.width(columns[i].width - headerColumnWidthDiff);\n                }\n            }\n        }\n        updateColumnCaches();\n    }\n    function applyColumnWidths() {\n        var x = 0, w, rule;\n        for (var i = 0; i < columns.length; i++) {\n            w = columns[i].width;\n            rule = getColumnCssRules(i);\n            rule.left.style.left = x + 'px';\n            rule.right.style.right = canvasWidth - x - w + 'px';\n            x += columns[i].width;\n        }\n    }\n    function setSortColumn(columnId, ascending) {\n        setSortColumns([{\n                columnId: columnId,\n                sortAsc: ascending\n            }]);\n    }\n    function setSortColumns(cols) {\n        sortColumns = cols;\n        var numberCols = options.numberedMultiColumnSort && sortColumns.length > 1;\n        var headerColumnEls = $headers.children();\n        var sortIndicatorEl = headerColumnEls.removeClass('slick-header-column-sorted').find('.' + sortIndicatorCssClass).removeClass('slick-sort-indicator-asc slick-sort-indicator-desc');\n        if (numberCols) {\n            sortIndicatorEl.text('');\n        }\n        $.each(sortColumns, function (i, col) {\n            if (col.sortAsc == null) {\n                col.sortAsc = true;\n            }\n            var columnIndex = getColumnIndex(col.columnId);\n            if (columnIndex != null) {\n                sortIndicatorEl = headerColumnEls.eq(columnIndex).addClass('slick-header-column-sorted').find('.' + sortIndicatorCssClass).addClass(col.sortAsc ? 'slick-sort-indicator-asc' : 'slick-sort-indicator-desc');\n                if (numberCols) {\n                    sortIndicatorEl.text(i + 1);\n                }\n            }\n        });\n    }\n    function getSortColumns() {\n        return sortColumns;\n    }\n    function handleSelectedRangesChanged(e, ranges) {\n        selectedRows = [];\n        var hash = {};\n        for (var i = 0; i < ranges.length; i++) {\n            for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n                if (!hash[j]) {\n                    // prevent duplicates\n                    selectedRows.push(j);\n                    hash[j] = {};\n                }\n                for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n                    if (canCellBeSelected(j, k)) {\n                        hash[j][columns[k].id] = options.selectedCellCssClass;\n                    }\n                }\n            }\n        }\n        setCellCssStyles(options.selectedCellCssClass, hash);\n        trigger(self.onSelectedRowsChanged, {\n            rows: getSelectedRows(),\n            grid: self\n        }, e);\n    }\n    function getColumns() {\n        return columns;\n    }\n    function updateColumnCaches() {\n        // Pre-calculate cell boundaries.\n        columnPosLeft = [];\n        columnPosRight = [];\n        var x = 0;\n        for (var i = 0, ii = columns.length; i < ii; i++) {\n            columnPosLeft[i] = x;\n            columnPosRight[i] = x + columns[i].width;\n            x += columns[i].width;\n        }\n    }\n    function setColumns(columnDefinitions) {\n        columns = columnDefinitions;\n        columnsById = {};\n        for (var i = 0; i < columns.length; i++) {\n            var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n            columnsById[m.id] = i;\n            if (m.minWidth && m.width < m.minWidth) {\n                m.width = m.minWidth;\n            }\n            if (m.maxWidth && m.width > m.maxWidth) {\n                m.width = m.maxWidth;\n            }\n        }\n        updateColumnCaches();\n        if (initialized) {\n            invalidateAllRows();\n            createColumnHeaders();\n            removeCssRules();\n            createCssRules();\n            resizeCanvas();\n            applyColumnWidths();\n            handleScroll();\n        }\n    }\n    function getOptions() {\n        return options;\n    }\n    function setOptions(args, suppressRender) {\n        if (!getEditorLock().commitCurrentEdit()) {\n            return;\n        }\n        makeActiveCellNormal();\n        if (options.enableAddRow !== args.enableAddRow) {\n            invalidateRow(getDataLength());\n        }\n        options = $.extend(options, args);\n        validateAndEnforceOptions();\n        $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n        if (!suppressRender) {\n            render();\n        }\n    }\n    function validateAndEnforceOptions() {\n        if (options.autoHeight) {\n            options.leaveSpaceForNewRows = false;\n        }\n    }\n    function setData(newData, scrollToTop) {\n        data = newData;\n        invalidateAllRows();\n        updateRowCount();\n        if (scrollToTop) {\n            scrollTo(0);\n        }\n    }\n    function getData() {\n        return data;\n    }\n    function getDataLength() {\n        if (data.getLength) {\n            return data.getLength();\n        } else {\n            return data.length;\n        }\n    }\n    function getDataLengthIncludingAddNew() {\n        return getDataLength() + (!options.enableAddRow ? 0 : !pagingActive || pagingIsLastPage ? 1 : 0);\n    }\n    function getDataItem(i) {\n        if (data.getItem) {\n            return data.getItem(i);\n        } else {\n            return data[i];\n        }\n    }\n    function getTopPanel() {\n        return $topPanel[0];\n    }\n    function setTopPanelVisibility(visible) {\n        if (options.showTopPanel != visible) {\n            options.showTopPanel = visible;\n            if (visible) {\n                $topPanelScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $topPanelScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function setHeaderRowVisibility(visible) {\n        if (options.showHeaderRow != visible) {\n            options.showHeaderRow = visible;\n            if (visible) {\n                $headerRowScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $headerRowScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function setFooterRowVisibility(visible) {\n        if (options.showFooterRow != visible) {\n            options.showFooterRow = visible;\n            if (visible) {\n                $footerRowScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $footerRowScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function setPreHeaderPanelVisibility(visible) {\n        if (options.showPreHeaderPanel != visible) {\n            options.showPreHeaderPanel = visible;\n            if (visible) {\n                $preHeaderPanelScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $preHeaderPanelScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function getContainerNode() {\n        return $container.get(0);\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Rendering / Scrolling\n    function getRowTop(row) {\n        return options.rowHeight * row - offset;\n    }\n    function getRowFromPosition(y) {\n        return Math.floor((y + offset) / options.rowHeight);\n    }\n    function scrollTo(y) {\n        y = Math.max(y, 0);\n        y = Math.min(y, th - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0));\n        var oldOffset = offset;\n        page = Math.min(n - 1, Math.floor(y / ph));\n        offset = Math.round(page * cj);\n        var newScrollTop = y - offset;\n        if (offset != oldOffset) {\n            var range = getVisibleRange(newScrollTop);\n            cleanupRows(range);\n            updateRowPositions();\n        }\n        if (prevScrollTop != newScrollTop) {\n            vScrollDir = prevScrollTop + oldOffset < newScrollTop + offset ? 1 : -1;\n            $viewport[0].scrollTop = lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop;\n            trigger(self.onViewportChanged, { grid: self });\n        }\n    }\n    function defaultFormatter(row, cell, value, columnDef, dataContext) {\n        if (value == null) {\n            return '';\n        } else {\n            return (value + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n    }\n    function getFormatter(row, column) {\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        // look up by id, then index\n        var columnOverrides = rowMetadata && rowMetadata.columns && (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n        return columnOverrides && columnOverrides.formatter || rowMetadata && rowMetadata.formatter || column.formatter || options.formatterFactory && options.formatterFactory.getFormatter(column) || options.defaultFormatter;\n    }\n    function getEditor(row, cell) {\n        var column = columns[cell];\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        var columnMetadata = rowMetadata && rowMetadata.columns;\n        if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined) {\n            return columnMetadata[column.id].editor;\n        }\n        if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\n            return columnMetadata[cell].editor;\n        }\n        return column.editor || options.editorFactory && options.editorFactory.getEditor(column);\n    }\n    function getDataItemValueForColumn(item, columnDef) {\n        if (options.dataItemColumnValueExtractor) {\n            return options.dataItemColumnValueExtractor(item, columnDef);\n        }\n        return item[columnDef.field];\n    }\n    function appendRowHtml(stringArray, row, range, dataLength) {\n        var d = getDataItem(row);\n        var dataLoading = row < dataLength && !d;\n        var rowCss = 'slick-row' + (dataLoading ? ' loading' : '') + (row === activeRow ? ' active' : '') + (row % 2 == 1 ? ' odd' : ' even');\n        if (!d) {\n            rowCss += ' ' + options.addNewRowCssClass;\n        }\n        var metadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (metadata && metadata.cssClasses) {\n            rowCss += ' ' + metadata.cssClasses;\n        }\n        stringArray.push('<div class=\\'ui-widget-content ' + rowCss + '\\' style=\\'top:' + getRowTop(row) + 'px\\'>');\n        var colspan, m;\n        for (var i = 0, ii = columns.length; i < ii; i++) {\n            m = columns[i];\n            colspan = 1;\n            if (metadata && metadata.columns) {\n                var columnData = metadata.columns[m.id] || metadata.columns[i];\n                colspan = columnData && columnData.colspan || 1;\n                if (colspan === '*') {\n                    colspan = ii - i;\n                }\n            }\n            // Do not render cells outside of the viewport.\n            if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n                if (columnPosLeft[i] > range.rightPx) {\n                    // All columns to the right are outside the range.\n                    break;\n                }\n                appendCellHtml(stringArray, row, i, colspan, d);\n            }\n            if (colspan > 1) {\n                i += colspan - 1;\n            }\n        }\n        stringArray.push('</div>');\n    }\n    function appendCellHtml(stringArray, row, cell, colspan, item) {\n        // stringArray: stringBuilder containing the HTML parts\n        // row, cell: row and column index\n        // colspan: HTML colspan\n        // item: grid data for row\n        var m = columns[cell];\n        var cellCss = 'slick-cell l' + cell + ' r' + Math.min(columns.length - 1, cell + colspan - 1) + (m.cssClass ? ' ' + m.cssClass : '');\n        if (row === activeRow && cell === activeCell) {\n            cellCss += ' active';\n        }\n        // TODO:  merge them together in the setter\n        for (var key in cellCssClasses) {\n            if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]) {\n                cellCss += ' ' + cellCssClasses[key][row][m.id];\n            }\n        }\n        var value = null;\n        if (item) {\n            value = getDataItemValueForColumn(item, m);\n        }\n        var formatterResult = getFormatter(row, m)(row, cell, value, m, item);\n        // get addl css class names from object type formatter return and from string type return of onBeforeAppendCell\n        var addlCssClasses = trigger(self.onBeforeAppendCell, {\n            row: row,\n            cell: cell,\n            grid: self,\n            value: value,\n            dataContext: item\n        }) || '';\n        addlCssClasses += formatterResult.addClasses ? (addlCssClasses ? ' ' : '') + formatterResult.addClasses : '';\n        stringArray.push('<div class=\\'' + cellCss + (addlCssClasses ? ' ' + addlCssClasses : '') + '\\'>');\n        // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n        if (item) {\n            stringArray.push(typeof formatterResult !== 'object' ? formatterResult : formatterResult.text);\n        }\n        stringArray.push('</div>');\n        rowsCache[row].cellRenderQueue.push(cell);\n        rowsCache[row].cellColSpans[cell] = colspan;\n    }\n    function cleanupRows(rangeToKeep) {\n        for (var i in rowsCache) {\n            if ((i = parseInt(i, 10)) !== activeRow && (i < rangeToKeep.top || i > rangeToKeep.bottom)) {\n                removeRowFromCache(i);\n            }\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n    }\n    function invalidate() {\n        updateRowCount();\n        invalidateAllRows();\n        render();\n    }\n    function invalidateAllRows() {\n        if (currentEditor) {\n            makeActiveCellNormal();\n        }\n        for (var row in rowsCache) {\n            removeRowFromCache(row);\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n    }\n    function queuePostProcessedRowForCleanup(cacheEntry, postProcessedRow, rowIdx) {\n        postProcessgroupId++;\n        // store and detach node for later async cleanup\n        for (var columnIdx in postProcessedRow) {\n            if (postProcessedRow.hasOwnProperty(columnIdx)) {\n                postProcessedCleanupQueue.push({\n                    actionType: 'C',\n                    groupId: postProcessgroupId,\n                    node: cacheEntry.cellNodesByColumnIdx[columnIdx | 0],\n                    columnIdx: columnIdx | 0,\n                    rowIdx: rowIdx\n                });\n            }\n        }\n        postProcessedCleanupQueue.push({\n            actionType: 'R',\n            groupId: postProcessgroupId,\n            node: cacheEntry.rowNode\n        });\n        $(cacheEntry.rowNode).detach();\n    }\n    function queuePostProcessedCellForCleanup(cellnode, columnIdx, rowIdx) {\n        postProcessedCleanupQueue.push({\n            actionType: 'C',\n            groupId: postProcessgroupId,\n            node: cellnode,\n            columnIdx: columnIdx,\n            rowIdx: rowIdx\n        });\n        $(cellnode).detach();\n    }\n    function removeRowFromCache(row) {\n        var cacheEntry = rowsCache[row];\n        if (!cacheEntry) {\n            return;\n        }\n        if (rowNodeFromLastMouseWheelEvent === cacheEntry.rowNode) {\n            cacheEntry.rowNode.style.display = 'none';\n            zombieRowNodeFromLastMouseWheelEvent = rowNodeFromLastMouseWheelEvent;\n            zombieRowCacheFromLastMouseWheelEvent = cacheEntry;\n            zombieRowPostProcessedFromLastMouseWheelEvent = postProcessedRows[row];    // ignore post processing cleanup in this case - it will be dealt with later\n        } else {\n            if (options.enableAsyncPostRenderCleanup && postProcessedRows[row]) {\n                queuePostProcessedRowForCleanup(cacheEntry, postProcessedRows[row], row);\n            } else {\n                $canvas[0].removeChild(cacheEntry.rowNode);\n            }\n        }\n        delete rowsCache[row];\n        delete postProcessedRows[row];\n        renderedRows--;\n        counter_rows_removed++;\n    }\n    function invalidateRows(rows) {\n        var i, rl;\n        if (!rows || !rows.length) {\n            return;\n        }\n        vScrollDir = 0;\n        rl = rows.length;\n        for (i = 0; i < rl; i++) {\n            if (currentEditor && activeRow === rows[i]) {\n                makeActiveCellNormal();\n            }\n            if (rowsCache[rows[i]]) {\n                removeRowFromCache(rows[i]);\n            }\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n    }\n    function invalidateRow(row) {\n        invalidateRows([row]);\n    }\n    function applyFormatResultToCellNode(formatterResult, cellNode, suppressRemove) {\n        if (typeof formatterResult !== 'object') {\n            cellNode.innerHTML = formatterResult;\n            return;\n        }\n        cellNode.innerHTML = formatterResult.text;\n        if (formatterResult.removeClasses && !suppressRemove) {\n            cellNode.removeClass(formatterResult.removeClasses);\n        }\n        if (formatterResult.addClasses) {\n            cellNode.addClass(formatterResult.addClasses);\n        }\n    }\n    function updateCell(row, cell) {\n        var cellNode = getCellNode(row, cell);\n        if (!cellNode) {\n            return;\n        }\n        var m = columns[cell], d = getDataItem(row);\n        if (currentEditor && activeRow === row && activeCell === cell) {\n            currentEditor.loadValue(d);\n        } else {\n            var formatterResult = d ? getFormatter(row, m)(row, cell, getDataItemValueForColumn(d, m), m, d) : '';\n            applyFormatResultToCellNode(formatterResult, cellNode);\n            invalidatePostProcessingResults(row);\n        }\n    }\n    function updateRow(row) {\n        var cacheEntry = rowsCache[row];\n        if (!cacheEntry) {\n            return;\n        }\n        ensureCellNodesInRowsCache(row);\n        var formatterResult, d = getDataItem(row);\n        for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n            if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n                continue;\n            }\n            columnIdx = columnIdx | 0;\n            var m = columns[columnIdx], node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n            if (row === activeRow && columnIdx === activeCell && currentEditor) {\n                currentEditor.loadValue(d);\n            } else if (d) {\n                formatterResult = getFormatter(row, m)(row, columnIdx, getDataItemValueForColumn(d, m), m, d);\n                applyFormatResultToCellNode(formatterResult, node);\n            } else {\n                node.innerHTML = '';\n            }\n        }\n        invalidatePostProcessingResults(row);\n    }\n    function getViewportHeight() {\n        return parseFloat($.css($container[0], 'height', true)) - parseFloat($.css($container[0], 'paddingTop', true)) - parseFloat($.css($container[0], 'paddingBottom', true)) - parseFloat($.css($headerScroller[0], 'height')) - getVBoxDelta($headerScroller) - (options.showTopPanel ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0) - (options.showHeaderRow ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0) - (options.createFooterRow && options.showFooterRow ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0) - (options.createPreHeaderPanel && options.showPreHeaderPanel ? options.preHeaderPanelHeight + getVBoxDelta($preHeaderPanelScroller) : 0);\n    }\n    function resizeCanvas() {\n        if (!initialized) {\n            return;\n        }\n        if (options.autoHeight) {\n            viewportH = options.rowHeight * getDataLengthIncludingAddNew();\n        } else {\n            viewportH = getViewportHeight();\n        }\n        numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n        viewportW = parseFloat($.css($container[0], 'width', true));\n        if (!options.autoHeight) {\n            $viewport.height(viewportH);\n        }\n        if (options.forceFitColumns) {\n            autosizeColumns();\n        }\n        updateRowCount();\n        handleScroll();\n        // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n        lastRenderedScrollLeft = -1;\n        render();\n    }\n    function updatePagingStatusFromView(pagingInfo) {\n        pagingActive = pagingInfo.pageSize !== 0;\n        pagingIsLastPage = pagingInfo.pageNum == pagingInfo.totalPages - 1;\n    }\n    function updateRowCount() {\n        if (!initialized) {\n            return;\n        }\n        var dataLength = getDataLength();\n        var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n        var numberOfRows = dataLengthIncludingAddNew + (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n        var oldViewportHasVScroll = viewportHasVScroll;\n        // with autoHeight, we do not need to accommodate the vertical scroll bar\n        viewportHasVScroll = !options.autoHeight && numberOfRows * options.rowHeight > viewportH;\n        viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n        makeActiveCellNormal();\n        // remove the rows that are now outside of the data range\n        // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n        var r1 = dataLength - 1;\n        for (var i in rowsCache) {\n            if (i > r1) {\n                removeRowFromCache(i);\n            }\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n        if (activeCellNode && activeRow > r1) {\n            resetActiveCell();\n        }\n        var oldH = h;\n        th = Math.max(options.rowHeight * numberOfRows, viewportH - scrollbarDimensions.height);\n        if (th < maxSupportedCssHeight) {\n            // just one page\n            h = ph = th;\n            n = 1;\n            cj = 0;\n        } else {\n            // break into pages\n            h = maxSupportedCssHeight;\n            ph = h / 100;\n            n = Math.floor(th / ph);\n            cj = (th - h) / (n - 1);\n        }\n        if (h !== oldH) {\n            $canvas.css('height', h);\n            scrollTop = $viewport[0].scrollTop;\n        }\n        var oldScrollTopInRange = scrollTop + offset <= th - viewportH;\n        if (th == 0 || scrollTop == 0) {\n            page = offset = 0;\n        } else if (oldScrollTopInRange) {\n            // maintain virtual position\n            scrollTo(scrollTop + offset);\n        } else {\n            // scroll to bottom\n            scrollTo(th - viewportH);\n        }\n        if (h != oldH && options.autoHeight) {\n            resizeCanvas();\n        }\n        if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll) {\n            autosizeColumns();\n        }\n        updateCanvasWidth(false);\n    }\n    function getVisibleRange(viewportTop, viewportLeft) {\n        if (viewportTop == null) {\n            viewportTop = scrollTop;\n        }\n        if (viewportLeft == null) {\n            viewportLeft = scrollLeft;\n        }\n        return {\n            top: getRowFromPosition(viewportTop),\n            bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n            leftPx: viewportLeft,\n            rightPx: viewportLeft + viewportW\n        };\n    }\n    function getRenderedRange(viewportTop, viewportLeft) {\n        var range = getVisibleRange(viewportTop, viewportLeft);\n        var buffer = Math.round(viewportH / options.rowHeight);\n        var minBuffer = 3;\n        if (vScrollDir == -1) {\n            range.top -= buffer;\n            range.bottom += minBuffer;\n        } else if (vScrollDir == 1) {\n            range.top -= minBuffer;\n            range.bottom += buffer;\n        } else {\n            range.top -= minBuffer;\n            range.bottom += minBuffer;\n        }\n        range.top = Math.max(0, range.top);\n        range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n        range.leftPx -= viewportW;\n        range.rightPx += viewportW;\n        range.leftPx = Math.max(0, range.leftPx);\n        range.rightPx = Math.min(canvasWidth, range.rightPx);\n        return range;\n    }\n    function ensureCellNodesInRowsCache(row) {\n        var cacheEntry = rowsCache[row];\n        if (cacheEntry) {\n            if (cacheEntry.cellRenderQueue.length) {\n                var lastChild = cacheEntry.rowNode.lastChild;\n                while (cacheEntry.cellRenderQueue.length) {\n                    var columnIdx = cacheEntry.cellRenderQueue.pop();\n                    cacheEntry.cellNodesByColumnIdx[columnIdx] = lastChild;\n                    lastChild = lastChild.previousSibling;\n                }\n            }\n        }\n    }\n    function cleanUpCells(range, row) {\n        var totalCellsRemoved = 0;\n        var cacheEntry = rowsCache[row];\n        // Remove cells outside the range.\n        var cellsToRemove = [];\n        for (var i in cacheEntry.cellNodesByColumnIdx) {\n            // I really hate it when people mess with Array.prototype.\n            if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)) {\n                continue;\n            }\n            // This is a string, so it needs to be cast back to a number.\n            i = i | 0;\n            var colspan = cacheEntry.cellColSpans[i];\n            if (columnPosLeft[i] > range.rightPx || columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx) {\n                if (!(row == activeRow && i == activeCell)) {\n                    cellsToRemove.push(i);\n                }\n            }\n        }\n        var cellToRemove, node;\n        postProcessgroupId++;\n        while ((cellToRemove = cellsToRemove.pop()) != null) {\n            node = cacheEntry.cellNodesByColumnIdx[cellToRemove];\n            if (options.enableAsyncPostRenderCleanup && postProcessedRows[row] && postProcessedRows[row][cellToRemove]) {\n                queuePostProcessedCellForCleanup(node, cellToRemove, row);\n            } else {\n                cacheEntry.rowNode.removeChild(node);\n            }\n            delete cacheEntry.cellColSpans[cellToRemove];\n            delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n            if (postProcessedRows[row]) {\n                delete postProcessedRows[row][cellToRemove];\n            }\n            totalCellsRemoved++;\n        }\n    }\n    function cleanUpAndRenderCells(range) {\n        var cacheEntry;\n        var stringArray = [];\n        var processedRows = [];\n        var cellsAdded;\n        var totalCellsAdded = 0;\n        var colspan;\n        for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n            cacheEntry = rowsCache[row];\n            if (!cacheEntry) {\n                continue;\n            }\n            // cellRenderQueue populated in renderRows() needs to be cleared first\n            ensureCellNodesInRowsCache(row);\n            cleanUpCells(range, row);\n            // Render missing cells.\n            cellsAdded = 0;\n            var metadata = data.getItemMetadata && data.getItemMetadata(row);\n            metadata = metadata && metadata.columns;\n            var d = getDataItem(row);\n            // TODO:  shorten this loop (index? heuristics? binary search?)\n            for (var i = 0, ii = columns.length; i < ii; i++) {\n                // Cells to the right are outside the range.\n                if (columnPosLeft[i] > range.rightPx) {\n                    break;\n                }\n                // Already rendered.\n                if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n                    i += colspan > 1 ? colspan - 1 : 0;\n                    continue;\n                }\n                colspan = 1;\n                if (metadata) {\n                    var columnData = metadata[columns[i].id] || metadata[i];\n                    colspan = columnData && columnData.colspan || 1;\n                    if (colspan === '*') {\n                        colspan = ii - i;\n                    }\n                }\n                if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n                    appendCellHtml(stringArray, row, i, colspan, d);\n                    cellsAdded++;\n                }\n                i += colspan > 1 ? colspan - 1 : 0;\n            }\n            if (cellsAdded) {\n                totalCellsAdded += cellsAdded;\n                processedRows.push(row);\n            }\n        }\n        if (!stringArray.length) {\n            return;\n        }\n        var x = document.createElement('div');\n        x.innerHTML = stringArray.join('');\n        var processedRow;\n        var node;\n        while ((processedRow = processedRows.pop()) != null) {\n            cacheEntry = rowsCache[processedRow];\n            var columnIdx;\n            while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n                node = x.lastChild;\n                cacheEntry.rowNode.appendChild(node);\n                cacheEntry.cellNodesByColumnIdx[columnIdx] = node;\n            }\n        }\n    }\n    function renderRows(range) {\n        var parentNode = $canvas[0], stringArray = [], rows = [], needToReselectCell = false, dataLength = getDataLength();\n        for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n            if (rowsCache[i]) {\n                continue;\n            }\n            renderedRows++;\n            rows.push(i);\n            // Create an entry right away so that appendRowHtml() can\n            // start populatating it.\n            rowsCache[i] = {\n                'rowNode': null,\n                // ColSpans of rendered cells (by column idx).\n                // Can also be used for checking whether a cell has been rendered.\n                'cellColSpans': [],\n                // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n                'cellNodesByColumnIdx': [],\n                // Column indices of cell nodes that have been rendered, but not yet indexed in\n                // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n                // end of the row.\n                'cellRenderQueue': []\n            };\n            appendRowHtml(stringArray, i, range, dataLength);\n            if (activeCellNode && activeRow === i) {\n                needToReselectCell = true;\n            }\n            counter_rows_rendered++;\n        }\n        if (!rows.length) {\n            return;\n        }\n        var x = document.createElement('div');\n        x.innerHTML = stringArray.join('');\n        for (var i = 0, ii = rows.length; i < ii; i++) {\n            rowsCache[rows[i]].rowNode = parentNode.appendChild(x.firstChild);\n        }\n        if (needToReselectCell) {\n            activeCellNode = getCellNode(activeRow, activeCell);\n        }\n    }\n    function startPostProcessing() {\n        if (!options.enableAsyncPostRender) {\n            return;\n        }\n        clearTimeout(h_postrender);\n        h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n    }\n    function startPostProcessingCleanup() {\n        if (!options.enableAsyncPostRenderCleanup) {\n            return;\n        }\n        clearTimeout(h_postrenderCleanup);\n        h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n    }\n    function invalidatePostProcessingResults(row) {\n        // change status of columns to be re-rendered\n        for (var columnIdx in postProcessedRows[row]) {\n            if (postProcessedRows[row].hasOwnProperty(columnIdx)) {\n                postProcessedRows[row][columnIdx] = 'C';\n            }\n        }\n        postProcessFromRow = Math.min(postProcessFromRow, row);\n        postProcessToRow = Math.max(postProcessToRow, row);\n        startPostProcessing();\n    }\n    function updateRowPositions() {\n        for (var row in rowsCache) {\n            rowsCache[row].rowNode.style.top = getRowTop(row) + 'px';\n        }\n    }\n    function render() {\n        if (!initialized) {\n            return;\n        }\n        var visible = getVisibleRange();\n        var rendered = getRenderedRange();\n        // remove rows no longer in the viewport\n        cleanupRows(rendered);\n        // add new rows & missing cells in existing rows\n        if (lastRenderedScrollLeft != scrollLeft) {\n            cleanUpAndRenderCells(rendered);\n        }\n        // render missing rows\n        renderRows(rendered);\n        postProcessFromRow = visible.top;\n        postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n        startPostProcessing();\n        lastRenderedScrollTop = scrollTop;\n        lastRenderedScrollLeft = scrollLeft;\n        h_render = null;\n    }\n    function handleHeaderRowScroll() {\n        var scrollLeft = $headerRowScroller[0].scrollLeft;\n        if (scrollLeft != $viewport[0].scrollLeft) {\n            $viewport[0].scrollLeft = scrollLeft;\n        }\n    }\n    function handleFooterRowScroll() {\n        var scrollLeft = $footerRowScroller[0].scrollLeft;\n        if (scrollLeft != $viewport[0].scrollLeft) {\n            $viewport[0].scrollLeft = scrollLeft;\n        }\n    }\n    function handlePreHeaderPanelScroll() {\n        var scrollLeft = $preHeaderPanelScroller[0].scrollLeft;\n        if (scrollLeft != $viewport[0].scrollLeft) {\n            $viewport[0].scrollLeft = scrollLeft;\n        }\n    }\n    function handleScroll() {\n        scrollTop = $viewport[0].scrollTop;\n        scrollLeft = $viewport[0].scrollLeft;\n        var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n        var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n        if (hScrollDist) {\n            prevScrollLeft = scrollLeft;\n            $headerScroller[0].scrollLeft = scrollLeft;\n            $topPanelScroller[0].scrollLeft = scrollLeft;\n            $headerRowScroller[0].scrollLeft = scrollLeft;\n            if (options.createFooterRow) {\n                $footerRowScroller[0].scrollLeft = scrollLeft;\n            }\n            if (options.createPreHeaderPanel) {\n                $preHeaderPanelScroller[0].scrollLeft = scrollLeft;\n            }\n        }\n        if (vScrollDist) {\n            vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n            prevScrollTop = scrollTop;\n            // switch virtual pages if needed\n            if (vScrollDist < viewportH) {\n                scrollTo(scrollTop + offset);\n            } else {\n                var oldOffset = offset;\n                if (h == viewportH) {\n                    page = 0;\n                } else {\n                    page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n                }\n                offset = Math.round(page * cj);\n                if (oldOffset != offset) {\n                    invalidateAllRows();\n                }\n            }\n        }\n        if (hScrollDist || vScrollDist) {\n            if (h_render) {\n                clearTimeout(h_render);\n            }\n            if (Math.abs(lastRenderedScrollTop - scrollTop) > 20 || Math.abs(lastRenderedScrollLeft - scrollLeft) > 20) {\n                if (options.forceSyncScrolling || Math.abs(lastRenderedScrollTop - scrollTop) < viewportH && Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW) {\n                    render();\n                } else {\n                    h_render = setTimeout(render, 50);\n                }\n                trigger(self.onViewportChanged, { grid: self });\n            }\n        }\n        trigger(self.onScroll, {\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            grid: self\n        });\n    }\n    function asyncPostProcessRows() {\n        var dataLength = getDataLength();\n        while (postProcessFromRow <= postProcessToRow) {\n            var row = vScrollDir >= 0 ? postProcessFromRow++ : postProcessToRow--;\n            var cacheEntry = rowsCache[row];\n            if (!cacheEntry || row >= dataLength) {\n                continue;\n            }\n            if (!postProcessedRows[row]) {\n                postProcessedRows[row] = {};\n            }\n            ensureCellNodesInRowsCache(row);\n            for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n                if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n                    continue;\n                }\n                columnIdx = columnIdx | 0;\n                var m = columns[columnIdx];\n                var processedStatus = postProcessedRows[row][columnIdx];\n                // C=cleanup and re-render, R=rendered\n                if (m.asyncPostRender && processedStatus !== 'R') {\n                    var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n                    if (node) {\n                        m.asyncPostRender(node, row, getDataItem(row), m, processedStatus === 'C');\n                    }\n                    postProcessedRows[row][columnIdx] = 'R';\n                }\n            }\n            h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n            return;\n        }\n    }\n    function asyncPostProcessCleanupRows() {\n        if (postProcessedCleanupQueue.length > 0) {\n            var groupId = postProcessedCleanupQueue[0].groupId;\n            // loop through all queue members with this groupID\n            while (postProcessedCleanupQueue.length > 0 && postProcessedCleanupQueue[0].groupId == groupId) {\n                var entry = postProcessedCleanupQueue.shift();\n                if (entry.actionType == 'R') {\n                    $(entry.node).remove();\n                }\n                if (entry.actionType == 'C') {\n                    var column = columns[entry.columnIdx];\n                    if (column.asyncPostRenderCleanup && entry.node) {\n                        // cleanup must also remove element\n                        column.asyncPostRenderCleanup(entry.node, entry.rowIdx, column);\n                    }\n                }\n            }\n            // call this function again after the specified delay\n            h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n        }\n    }\n    function updateCellCssStylesOnRenderedRows(addedHash, removedHash) {\n        var node, columnId, addedRowHash, removedRowHash;\n        for (var row in rowsCache) {\n            removedRowHash = removedHash && removedHash[row];\n            addedRowHash = addedHash && addedHash[row];\n            if (removedRowHash) {\n                for (columnId in removedRowHash) {\n                    if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n                        node = getCellNode(row, getColumnIndex(columnId));\n                        if (node) {\n                            $(node).removeClass(removedRowHash[columnId]);\n                        }\n                    }\n                }\n            }\n            if (addedRowHash) {\n                for (columnId in addedRowHash) {\n                    if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n                        node = getCellNode(row, getColumnIndex(columnId));\n                        if (node) {\n                            $(node).addClass(addedRowHash[columnId]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function addCellCssStyles(key, hash) {\n        if (cellCssClasses[key]) {\n            throw new Error('addCellCssStyles: cell CSS hash with key \\'' + key + '\\' already exists.');\n        }\n        cellCssClasses[key] = hash;\n        updateCellCssStylesOnRenderedRows(hash, null);\n        trigger(self.onCellCssStylesChanged, {\n            'key': key,\n            'hash': hash,\n            'grid': self\n        });\n    }\n    function removeCellCssStyles(key) {\n        if (!cellCssClasses[key]) {\n            return;\n        }\n        updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n        delete cellCssClasses[key];\n        trigger(self.onCellCssStylesChanged, {\n            'key': key,\n            'hash': null,\n            'grid': self\n        });\n    }\n    function setCellCssStyles(key, hash) {\n        var prevHash = cellCssClasses[key];\n        cellCssClasses[key] = hash;\n        updateCellCssStylesOnRenderedRows(hash, prevHash);\n        trigger(self.onCellCssStylesChanged, {\n            'key': key,\n            'hash': hash,\n            'grid': self\n        });\n    }\n    function getCellCssStyles(key) {\n        return cellCssClasses[key];\n    }\n    function flashCell(row, cell, speed) {\n        speed = speed || 100;\n        if (rowsCache[row]) {\n            var $cell = $(getCellNode(row, cell));\n            var toggleCellClass = function (times) {\n                if (!times) {\n                    return;\n                }\n                setTimeout(function () {\n                    $cell.queue(function () {\n                        $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n                        toggleCellClass(times - 1);\n                    });\n                }, speed);\n            };\n            toggleCellClass(4);\n        }\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Interactivity\n    function handleMouseWheel(e) {\n        var rowNode = $(e.target).closest('.slick-row')[0];\n        if (rowNode != rowNodeFromLastMouseWheelEvent) {\n            if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent != rowNode) {\n                if (options.enableAsyncPostRenderCleanup && zombieRowPostProcessedFromLastMouseWheelEvent) {\n                    queuePostProcessedRowForCleanup(zombieRowCacheFromLastMouseWheelEvent, zombieRowPostProcessedFromLastMouseWheelEvent);\n                } else {\n                    $canvas[0].removeChild(zombieRowNodeFromLastMouseWheelEvent);\n                }\n                zombieRowNodeFromLastMouseWheelEvent = null;\n                zombieRowCacheFromLastMouseWheelEvent = null;\n                zombieRowPostProcessedFromLastMouseWheelEvent = null;\n                if (options.enableAsyncPostRenderCleanup) {\n                    startPostProcessingCleanup();\n                }\n            }\n            rowNodeFromLastMouseWheelEvent = rowNode;\n        }\n    }\n    function handleDragInit(e, dd) {\n        var cell = getCellFromEvent(e);\n        if (!cell || !cellExists(cell.row, cell.cell)) {\n            return false;\n        }\n        var retval = trigger(self.onDragInit, dd, e);\n        if (e.isImmediatePropagationStopped()) {\n            return retval;\n        }\n        // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n        // cancel out of it\n        return false;\n    }\n    function handleDragStart(e, dd) {\n        var cell = getCellFromEvent(e);\n        if (!cell || !cellExists(cell.row, cell.cell)) {\n            return false;\n        }\n        var retval = trigger(self.onDragStart, dd, e);\n        if (e.isImmediatePropagationStopped()) {\n            return retval;\n        }\n        return false;\n    }\n    function handleDrag(e, dd) {\n        return trigger(self.onDrag, dd, e);\n    }\n    function handleDragEnd(e, dd) {\n        trigger(self.onDragEnd, dd, e);\n    }\n    function handleKeyDown(e) {\n        trigger(self.onKeyDown, {\n            row: activeRow,\n            cell: activeCell,\n            grid: self\n        }, e);\n        var handled = e.isImmediatePropagationStopped();\n        var keyCode = Slick.keyCode;\n        if (!handled) {\n            if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n                // editor may specify an array of keys to bubble\n                if (options.editable && currentEditor && currentEditor.keyCaptureList) {\n                    if (currentEditor.keyCaptureList.indexOf(e.which) > -1) {\n                        return;\n                    }\n                }\n                if (e.which == keyCode.ESCAPE) {\n                    if (!getEditorLock().isActive()) {\n                        return;    // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n                    }\n                    cancelEditAndSetFocus();\n                } else if (e.which == keyCode.PAGE_DOWN) {\n                    navigatePageDown();\n                    handled = true;\n                } else if (e.which == keyCode.PAGE_UP) {\n                    navigatePageUp();\n                    handled = true;\n                } else if (e.which == keyCode.LEFT) {\n                    handled = navigateLeft();\n                } else if (e.which == keyCode.RIGHT) {\n                    handled = navigateRight();\n                } else if (e.which == keyCode.UP) {\n                    handled = navigateUp();\n                } else if (e.which == keyCode.DOWN) {\n                    handled = navigateDown();\n                } else if (e.which == keyCode.TAB) {\n                    handled = navigateNext();\n                } else if (e.which == keyCode.ENTER) {\n                    if (options.editable) {\n                        if (currentEditor) {\n                            // adding new row\n                            if (activeRow === getDataLength()) {\n                                navigateDown();\n                            } else {\n                                commitEditAndSetFocus();\n                            }\n                        } else {\n                            if (getEditorLock().commitCurrentEdit()) {\n                                makeActiveCellEditable();\n                            }\n                        }\n                    }\n                    handled = true;\n                }\n            } else if (e.which == keyCode.TAB && e.shiftKey && !e.ctrlKey && !e.altKey) {\n                handled = navigatePrev();\n            }\n        }\n        if (handled) {\n            // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n            e.stopPropagation();\n            e.preventDefault();\n            try {\n                e.originalEvent.keyCode = 0;    // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n            } // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n            // (hitting control key only, nothing else), \"Shift\" (maybe others)\n            catch (error) {\n            }\n        }\n    }\n    function handleClick(e) {\n        if (!currentEditor) {\n            // if this click resulted in some cell child node getting focus,\n            // don't steal it back - keyboard events will still bubble up\n            // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n            if (e.target != document.activeElement || $(e.target).hasClass('slick-cell')) {\n                setFocus();\n            }\n        }\n        var cell = getCellFromEvent(e);\n        if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n            return;\n        }\n        trigger(self.onClick, {\n            row: cell.row,\n            cell: cell.cell,\n            grid: self\n        }, e);\n        if (e.isImmediatePropagationStopped()) {\n            return;\n        }\n        // this optimisation causes trouble - MLeibman #329\n        //if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)) {\n        if (canCellBeActive(cell.row, cell.cell)) {\n            if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()) {\n                scrollRowIntoView(cell.row, false);\n                var preClickModeOn = e.target && e.target.className === Slick.preClickClassName;\n                setActiveCellInternal(getCellNode(cell.row, cell.cell), null, preClickModeOn);\n            }\n        }\n    }\n    function handleContextMenu(e) {\n        var $cell = $(e.target).closest('.slick-cell', $canvas);\n        if ($cell.length === 0) {\n            return;\n        }\n        // are we editing this cell?\n        if (activeCellNode === $cell[0] && currentEditor !== null) {\n            return;\n        }\n        trigger(self.onContextMenu, { grid: self }, e);\n    }\n    function handleDblClick(e) {\n        var cell = getCellFromEvent(e);\n        if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n            return;\n        }\n        trigger(self.onDblClick, {\n            row: cell.row,\n            cell: cell.cell,\n            grid: self\n        }, e);\n        if (e.isImmediatePropagationStopped()) {\n            return;\n        }\n        if (options.editable) {\n            gotoCell(cell.row, cell.cell, true);\n        }\n    }\n    function handleHeaderMouseEnter(e) {\n        trigger(self.onHeaderMouseEnter, {\n            'column': $(this).data('column'),\n            'grid': self\n        }, e);\n    }\n    function handleHeaderMouseLeave(e) {\n        trigger(self.onHeaderMouseLeave, {\n            'column': $(this).data('column'),\n            'grid': self\n        }, e);\n    }\n    function handleHeaderContextMenu(e) {\n        var $header = $(e.target).closest('.slick-header-column', '.slick-header-columns');\n        var column = $header && $header.data('column');\n        trigger(self.onHeaderContextMenu, {\n            column: column,\n            grid: self\n        }, e);\n    }\n    function handleHeaderClick(e) {\n        var $header = $(e.target).closest('.slick-header-column', '.slick-header-columns');\n        var column = $header && $header.data('column');\n        if (column) {\n            trigger(self.onHeaderClick, {\n                column: column,\n                grid: self\n            }, e);\n        }\n    }\n    function handleMouseEnter(e) {\n        trigger(self.onMouseEnter, { grid: self }, e);\n    }\n    function handleMouseLeave(e) {\n        trigger(self.onMouseLeave, { grid: self }, e);\n    }\n    function cellExists(row, cell) {\n        return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n    }\n    function getCellFromPoint(x, y) {\n        var row = getRowFromPosition(y);\n        var cell = 0;\n        var w = 0;\n        for (var i = 0; i < columns.length && w < x; i++) {\n            w += columns[i].width;\n            cell++;\n        }\n        if (cell < 0) {\n            cell = 0;\n        }\n        return {\n            row: row,\n            cell: cell - 1\n        };\n    }\n    function getCellFromNode(cellNode) {\n        // read column number from .l<columnNumber> CSS class\n        var cls = /l\\d+/.exec(cellNode.className);\n        if (!cls) {\n            throw new Error('getCellFromNode: cannot get cell - ' + cellNode.className);\n        }\n        return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n    }\n    function getRowFromNode(rowNode) {\n        for (var row in rowsCache) {\n            if (rowsCache[row].rowNode === rowNode) {\n                return row | 0;\n            }\n        }\n        return null;\n    }\n    function getCellFromEvent(e) {\n        var $cell = $(e.target).closest('.slick-cell', $canvas);\n        if (!$cell.length) {\n            return null;\n        }\n        var row = getRowFromNode($cell[0].parentNode);\n        var cell = getCellFromNode($cell[0]);\n        if (row == null || cell == null) {\n            return null;\n        } else {\n            return {\n                'row': row,\n                'cell': cell\n            };\n        }\n    }\n    function getCellNodeBox(row, cell) {\n        if (!cellExists(row, cell)) {\n            return null;\n        }\n        var y1 = getRowTop(row);\n        var y2 = y1 + options.rowHeight - 1;\n        var x1 = 0;\n        for (var i = 0; i < cell; i++) {\n            x1 += columns[i].width;\n        }\n        var x2 = x1 + columns[cell].width;\n        return {\n            top: y1,\n            left: x1,\n            bottom: y2,\n            right: x2\n        };\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Cell switching\n    function resetActiveCell() {\n        setActiveCellInternal(null, false);\n    }\n    function setFocus() {\n        if (tabbingDirection == -1) {\n            $focusSink[0].focus();\n        } else {\n            $focusSink2[0].focus();\n        }\n    }\n    function scrollCellIntoView(row, cell, doPaging) {\n        scrollRowIntoView(row, doPaging);\n        var colspan = getColspan(row, cell);\n        internalScrollColumnIntoView(columnPosLeft[cell], columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)]);\n    }\n    function internalScrollColumnIntoView(left, right) {\n        var scrollRight = scrollLeft + viewportW;\n        if (left < scrollLeft) {\n            $viewport.scrollLeft(left);\n            handleScroll();\n            render();\n        } else if (right > scrollRight) {\n            $viewport.scrollLeft(Math.min(left, right - $viewport[0].clientWidth));\n            handleScroll();\n            render();\n        }\n    }\n    function scrollColumnIntoView(cell) {\n        internalScrollColumnIntoView(columnPosLeft[cell], columnPosRight[cell]);\n    }\n    function setActiveCellInternal(newCell, opt_editMode, preClickModeOn, suppressActiveCellChangedEvent) {\n        if (activeCellNode !== null) {\n            makeActiveCellNormal();\n            $(activeCellNode).removeClass('active');\n            if (rowsCache[activeRow]) {\n                $(rowsCache[activeRow].rowNode).removeClass('active');\n            }\n        }\n        var activeCellChanged = activeCellNode !== newCell;\n        activeCellNode = newCell;\n        if (activeCellNode != null) {\n            activeRow = getRowFromNode(activeCellNode.parentNode);\n            activeCell = activePosX = getCellFromNode(activeCellNode);\n            if (opt_editMode == null) {\n                opt_editMode = activeRow == getDataLength() || options.autoEdit;\n            }\n            if (options.showCellSelection) {\n                $(activeCellNode).addClass('active');\n                $(rowsCache[activeRow].rowNode).addClass('active');\n            }\n            if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)) {\n                clearTimeout(h_editorLoader);\n                if (options.asyncEditorLoading) {\n                    h_editorLoader = setTimeout(function () {\n                        makeActiveCellEditable(undefined, preClickModeOn);\n                    }, options.asyncEditorLoadDelay);\n                } else {\n                    makeActiveCellEditable(undefined, preClickModeOn);\n                }\n            }\n        } else {\n            activeRow = activeCell = null;\n        }\n        // this optimisation causes trouble - MLeibman #329\n        //if (activeCellChanged) {\n        if (!suppressActiveCellChangedEvent) {\n            trigger(self.onActiveCellChanged, getActiveCell());\n        }    //}\n    }\n    function clearTextSelection() {\n        if (document.selection && document.selection.empty) {\n            try {\n                //IE fails here if selected element is not in dom\n                document.selection.empty();\n            } catch (e) {\n            }\n        } else if (window.getSelection) {\n            var sel = window.getSelection();\n            if (sel && sel.removeAllRanges) {\n                sel.removeAllRanges();\n            }\n        }\n    }\n    function isCellPotentiallyEditable(row, cell) {\n        var dataLength = getDataLength();\n        // is the data for this row loaded?\n        if (row < dataLength && !getDataItem(row)) {\n            return false;\n        }\n        // are we in the Add New row?  can we create new from this cell?\n        if (columns[cell].cannotTriggerInsert && row >= dataLength) {\n            return false;\n        }\n        // does this cell have an editor?\n        if (!getEditor(row, cell)) {\n            return false;\n        }\n        return true;\n    }\n    function makeActiveCellNormal() {\n        if (!currentEditor) {\n            return;\n        }\n        trigger(self.onBeforeCellEditorDestroy, {\n            editor: currentEditor,\n            grid: self\n        });\n        currentEditor.destroy();\n        currentEditor = null;\n        if (activeCellNode) {\n            var d = getDataItem(activeRow);\n            $(activeCellNode).removeClass('editable invalid');\n            if (d) {\n                var column = columns[activeCell];\n                var formatter = getFormatter(activeRow, column);\n                var formatterResult = formatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d, self);\n                applyFormatResultToCellNode(formatterResult, activeCellNode);\n                invalidatePostProcessingResults(activeRow);\n            }\n        }\n        // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n        // IE can't set focus to anything else correctly\n        if (navigator.userAgent.toLowerCase().match(/msie/)) {\n            clearTextSelection();\n        }\n        getEditorLock().deactivate(editController);\n    }\n    function makeActiveCellEditable(editor, preClickModeOn) {\n        if (!activeCellNode) {\n            return;\n        }\n        if (!options.editable) {\n            throw new Error('Grid : makeActiveCellEditable : should never get called when options.editable is false');\n        }\n        // cancel pending async call if there is one\n        clearTimeout(h_editorLoader);\n        if (!isCellPotentiallyEditable(activeRow, activeCell)) {\n            return;\n        }\n        var columnDef = columns[activeCell];\n        var item = getDataItem(activeRow);\n        if (trigger(self.onBeforeEditCell, {\n                row: activeRow,\n                cell: activeCell,\n                item: item,\n                column: columnDef,\n                grid: self\n            }) === false) {\n            setFocus();\n            return;\n        }\n        getEditorLock().activate(editController);\n        $(activeCellNode).addClass('editable');\n        var useEditor = editor || getEditor(activeRow, activeCell);\n        // don't clear the cell if a custom editor is passed through\n        if (!editor && !useEditor.suppressClearOnEdit) {\n            activeCellNode.innerHTML = '';\n        }\n        currentEditor = new useEditor({\n            grid: self,\n            gridPosition: absBox($container[0]),\n            position: absBox(activeCellNode),\n            container: activeCellNode,\n            column: columnDef,\n            item: item || {},\n            commitChanges: commitEditAndSetFocus,\n            cancelChanges: cancelEditAndSetFocus\n        });\n        if (item) {\n            currentEditor.loadValue(item);\n            if (preClickModeOn && currentEditor.preClick) {\n                currentEditor.preClick();\n            }\n        }\n        serializedEditorValue = currentEditor.serializeValue();\n        if (currentEditor.position) {\n            handleActiveCellPositionChange();\n        }\n    }\n    function commitEditAndSetFocus() {\n        // if the commit fails, it would do so due to a validation error\n        // if so, do not steal the focus from the editor\n        if (getEditorLock().commitCurrentEdit()) {\n            setFocus();\n            if (options.autoEdit) {\n                navigateDown();\n            }\n        }\n    }\n    function cancelEditAndSetFocus() {\n        if (getEditorLock().cancelCurrentEdit()) {\n            setFocus();\n        }\n    }\n    function absBox(elem) {\n        var box = {\n            top: elem.offsetTop,\n            left: elem.offsetLeft,\n            bottom: 0,\n            right: 0,\n            width: $(elem).outerWidth(),\n            height: $(elem).outerHeight(),\n            visible: true\n        };\n        box.bottom = box.top + box.height;\n        box.right = box.left + box.width;\n        // walk up the tree\n        var offsetParent = elem.offsetParent;\n        while ((elem = elem.parentNode) != document.body) {\n            if (elem == null)\n                break;\n            if (box.visible && elem.scrollHeight != elem.offsetHeight && $(elem).css('overflowY') != 'visible') {\n                box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n            }\n            if (box.visible && elem.scrollWidth != elem.offsetWidth && $(elem).css('overflowX') != 'visible') {\n                box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n            }\n            box.left -= elem.scrollLeft;\n            box.top -= elem.scrollTop;\n            if (elem === offsetParent) {\n                box.left += elem.offsetLeft;\n                box.top += elem.offsetTop;\n                offsetParent = elem.offsetParent;\n            }\n            box.bottom = box.top + box.height;\n            box.right = box.left + box.width;\n        }\n        return box;\n    }\n    function getActiveCellPosition() {\n        return absBox(activeCellNode);\n    }\n    function getGridPosition() {\n        return absBox($container[0]);\n    }\n    function handleActiveCellPositionChange() {\n        if (!activeCellNode) {\n            return;\n        }\n        trigger(self.onActiveCellPositionChanged, { grid: self });\n        if (currentEditor) {\n            var cellBox = getActiveCellPosition();\n            if (currentEditor.show && currentEditor.hide) {\n                if (!cellBox.visible) {\n                    currentEditor.hide();\n                } else {\n                    currentEditor.show();\n                }\n            }\n            if (currentEditor.position) {\n                currentEditor.position(cellBox);\n            }\n        }\n    }\n    function getCellEditor() {\n        return currentEditor;\n    }\n    function getActiveCell() {\n        if (!activeCellNode) {\n            return null;\n        } else {\n            return {\n                row: activeRow,\n                cell: activeCell,\n                grid: self\n            };\n        }\n    }\n    function getActiveCellNode() {\n        return activeCellNode;\n    }\n    function scrollRowIntoView(row, doPaging) {\n        var rowAtTop = row * options.rowHeight;\n        var rowAtBottom = (row + 1) * options.rowHeight - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0);\n        // need to page down?\n        if ((row + 1) * options.rowHeight > scrollTop + viewportH + offset) {\n            scrollTo(doPaging ? rowAtTop : rowAtBottom);\n            render();\n        }    // or page up?\n        else if (row * options.rowHeight < scrollTop + offset) {\n            scrollTo(doPaging ? rowAtBottom : rowAtTop);\n            render();\n        }\n    }\n    function scrollRowToTop(row) {\n        scrollTo(row * options.rowHeight);\n        render();\n    }\n    function scrollPage(dir) {\n        var deltaRows = dir * numVisibleRows;\n        scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n        render();\n        if (options.enableCellNavigation && activeRow != null) {\n            var row = activeRow + deltaRows;\n            var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n            if (row >= dataLengthIncludingAddNew) {\n                row = dataLengthIncludingAddNew - 1;\n            }\n            if (row < 0) {\n                row = 0;\n            }\n            var cell = 0, prevCell = null;\n            var prevActivePosX = activePosX;\n            while (cell <= activePosX) {\n                if (canCellBeActive(row, cell)) {\n                    prevCell = cell;\n                }\n                cell += getColspan(row, cell);\n            }\n            if (prevCell !== null) {\n                setActiveCellInternal(getCellNode(row, prevCell));\n                activePosX = prevActivePosX;\n            } else {\n                resetActiveCell();\n            }\n        }\n    }\n    function navigatePageDown() {\n        scrollPage(1);\n    }\n    function navigatePageUp() {\n        scrollPage(-1);\n    }\n    function getColspan(row, cell) {\n        var metadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (!metadata || !metadata.columns) {\n            return 1;\n        }\n        var columnData = metadata.columns[columns[cell].id] || metadata.columns[cell];\n        var colspan = columnData && columnData.colspan;\n        if (colspan === '*') {\n            colspan = columns.length - cell;\n        } else {\n            colspan = colspan || 1;\n        }\n        return colspan;\n    }\n    function findFirstFocusableCell(row) {\n        var cell = 0;\n        while (cell < columns.length) {\n            if (canCellBeActive(row, cell)) {\n                return cell;\n            }\n            cell += getColspan(row, cell);\n        }\n        return null;\n    }\n    function findLastFocusableCell(row) {\n        var cell = 0;\n        var lastFocusableCell = null;\n        while (cell < columns.length) {\n            if (canCellBeActive(row, cell)) {\n                lastFocusableCell = cell;\n            }\n            cell += getColspan(row, cell);\n        }\n        return lastFocusableCell;\n    }\n    function gotoRight(row, cell, posX) {\n        if (cell >= columns.length) {\n            return null;\n        }\n        do {\n            cell += getColspan(row, cell);\n        } while (cell < columns.length && !canCellBeActive(row, cell));\n        if (cell < columns.length) {\n            return {\n                'row': row,\n                'cell': cell,\n                'posX': cell\n            };\n        }\n        return null;\n    }\n    function gotoLeft(row, cell, posX) {\n        if (cell <= 0) {\n            return null;\n        }\n        var firstFocusableCell = findFirstFocusableCell(row);\n        if (firstFocusableCell === null || firstFocusableCell >= cell) {\n            return null;\n        }\n        var prev = {\n            'row': row,\n            'cell': firstFocusableCell,\n            'posX': firstFocusableCell\n        };\n        var pos;\n        while (true) {\n            pos = gotoRight(prev.row, prev.cell, prev.posX);\n            if (!pos) {\n                return null;\n            }\n            if (pos.cell >= cell) {\n                return prev;\n            }\n            prev = pos;\n        }\n    }\n    function gotoDown(row, cell, posX) {\n        var prevCell;\n        var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n        while (true) {\n            if (++row >= dataLengthIncludingAddNew) {\n                return null;\n            }\n            prevCell = cell = 0;\n            while (cell <= posX) {\n                prevCell = cell;\n                cell += getColspan(row, cell);\n            }\n            if (canCellBeActive(row, prevCell)) {\n                return {\n                    'row': row,\n                    'cell': prevCell,\n                    'posX': posX\n                };\n            }\n        }\n    }\n    function gotoUp(row, cell, posX) {\n        var prevCell;\n        while (true) {\n            if (--row < 0) {\n                return null;\n            }\n            prevCell = cell = 0;\n            while (cell <= posX) {\n                prevCell = cell;\n                cell += getColspan(row, cell);\n            }\n            if (canCellBeActive(row, prevCell)) {\n                return {\n                    'row': row,\n                    'cell': prevCell,\n                    'posX': posX\n                };\n            }\n        }\n    }\n    function gotoNext(row, cell, posX) {\n        if (row == null && cell == null) {\n            row = cell = posX = 0;\n            if (canCellBeActive(row, cell)) {\n                return {\n                    'row': row,\n                    'cell': cell,\n                    'posX': cell\n                };\n            }\n        }\n        var pos = gotoRight(row, cell, posX);\n        if (pos) {\n            return pos;\n        }\n        var firstFocusableCell = null;\n        var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n        // if at last row, cycle through columns rather than get stuck in the last one\n        if (row === dataLengthIncludingAddNew - 1) {\n            row--;\n        }\n        while (++row < dataLengthIncludingAddNew) {\n            firstFocusableCell = findFirstFocusableCell(row);\n            if (firstFocusableCell !== null) {\n                return {\n                    'row': row,\n                    'cell': firstFocusableCell,\n                    'posX': firstFocusableCell\n                };\n            }\n        }\n        return null;\n    }\n    function gotoPrev(row, cell, posX) {\n        if (row == null && cell == null) {\n            row = getDataLengthIncludingAddNew() - 1;\n            cell = posX = columns.length - 1;\n            if (canCellBeActive(row, cell)) {\n                return {\n                    'row': row,\n                    'cell': cell,\n                    'posX': cell\n                };\n            }\n        }\n        var pos;\n        var lastSelectableCell;\n        while (!pos) {\n            pos = gotoLeft(row, cell, posX);\n            if (pos) {\n                break;\n            }\n            if (--row < 0) {\n                return null;\n            }\n            cell = 0;\n            lastSelectableCell = findLastFocusableCell(row);\n            if (lastSelectableCell !== null) {\n                pos = {\n                    'row': row,\n                    'cell': lastSelectableCell,\n                    'posX': lastSelectableCell\n                };\n            }\n        }\n        return pos;\n    }\n    function navigateRight() {\n        return navigate('right');\n    }\n    function navigateLeft() {\n        return navigate('left');\n    }\n    function navigateDown() {\n        return navigate('down');\n    }\n    function navigateUp() {\n        return navigate('up');\n    }\n    function navigateNext() {\n        return navigate('next');\n    }\n    function navigatePrev() {\n        return navigate('prev');\n    }\n    /**\r\n     * @param {string} dir Navigation direction.\r\n     * @return {boolean} Whether navigation resulted in a change of active cell.\r\n     */\n    function navigate(dir) {\n        if (!options.enableCellNavigation) {\n            return false;\n        }\n        if (!activeCellNode && dir != 'prev' && dir != 'next') {\n            return false;\n        }\n        if (!getEditorLock().commitCurrentEdit()) {\n            return true;\n        }\n        setFocus();\n        var tabbingDirections = {\n            'up': -1,\n            'down': 1,\n            'left': -1,\n            'right': 1,\n            'prev': -1,\n            'next': 1\n        };\n        tabbingDirection = tabbingDirections[dir];\n        var stepFunctions = {\n            'up': gotoUp,\n            'down': gotoDown,\n            'left': gotoLeft,\n            'right': gotoRight,\n            'prev': gotoPrev,\n            'next': gotoNext\n        };\n        var stepFn = stepFunctions[dir];\n        var pos = stepFn(activeRow, activeCell, activePosX);\n        if (pos) {\n            var isAddNewRow = pos.row == getDataLength();\n            scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n            setActiveCellInternal(getCellNode(pos.row, pos.cell));\n            activePosX = pos.posX;\n            return true;\n        } else {\n            setActiveCellInternal(getCellNode(activeRow, activeCell));\n            return false;\n        }\n    }\n    function getCellNode(row, cell) {\n        if (rowsCache[row]) {\n            ensureCellNodesInRowsCache(row);\n            return rowsCache[row].cellNodesByColumnIdx[cell];\n        }\n        return null;\n    }\n    function setActiveCell(row, cell, opt_editMode, preClickModeOn, suppressActiveCellChangedEvent) {\n        if (!initialized) {\n            return;\n        }\n        if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n            return;\n        }\n        if (!options.enableCellNavigation) {\n            return;\n        }\n        scrollCellIntoView(row, cell, false);\n        setActiveCellInternal(getCellNode(row, cell), opt_editMode, preClickModeOn, suppressActiveCellChangedEvent);\n    }\n    function canCellBeActive(row, cell) {\n        if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() || row < 0 || cell >= columns.length || cell < 0) {\n            return false;\n        }\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (rowMetadata && typeof rowMetadata.focusable === 'boolean') {\n            return rowMetadata.focusable;\n        }\n        var columnMetadata = rowMetadata && rowMetadata.columns;\n        if (columnMetadata && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable === 'boolean') {\n            return columnMetadata[columns[cell].id].focusable;\n        }\n        if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === 'boolean') {\n            return columnMetadata[cell].focusable;\n        }\n        return columns[cell].focusable;\n    }\n    function canCellBeSelected(row, cell) {\n        if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n            return false;\n        }\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (rowMetadata && typeof rowMetadata.selectable === 'boolean') {\n            return rowMetadata.selectable;\n        }\n        var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n        if (columnMetadata && typeof columnMetadata.selectable === 'boolean') {\n            return columnMetadata.selectable;\n        }\n        return columns[cell].selectable;\n    }\n    function gotoCell(row, cell, forceEdit) {\n        if (!initialized) {\n            return;\n        }\n        if (!canCellBeActive(row, cell)) {\n            return;\n        }\n        if (!getEditorLock().commitCurrentEdit()) {\n            return;\n        }\n        scrollCellIntoView(row, cell, false);\n        var newCell = getCellNode(row, cell);\n        // if selecting the 'add new' row, start editing right away\n        setActiveCellInternal(newCell, forceEdit || row === getDataLength() || options.autoEdit);\n        // if no editor was created, set the focus back on the grid\n        if (!currentEditor) {\n            setFocus();\n        }\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // IEditor implementation for the editor lock\n    function commitCurrentEdit() {\n        var item = getDataItem(activeRow);\n        var column = columns[activeCell];\n        if (currentEditor) {\n            if (currentEditor.isValueChanged()) {\n                var validationResults = currentEditor.validate();\n                if (validationResults.valid) {\n                    if (activeRow < getDataLength()) {\n                        var editCommand = {\n                            row: activeRow,\n                            cell: activeCell,\n                            editor: currentEditor,\n                            serializedValue: currentEditor.serializeValue(),\n                            prevSerializedValue: serializedEditorValue,\n                            execute: function () {\n                                this.editor.applyValue(item, this.serializedValue);\n                                updateRow(this.row);\n                                trigger(self.onCellChange, {\n                                    row: activeRow,\n                                    cell: activeCell,\n                                    item: item,\n                                    grid: self\n                                });\n                            },\n                            undo: function () {\n                                this.editor.applyValue(item, this.prevSerializedValue);\n                                updateRow(this.row);\n                                trigger(self.onCellChange, {\n                                    row: activeRow,\n                                    cell: activeCell,\n                                    item: item,\n                                    grid: self\n                                });\n                            }\n                        };\n                        if (options.editCommandHandler) {\n                            makeActiveCellNormal();\n                            options.editCommandHandler(item, column, editCommand);\n                        } else {\n                            editCommand.execute();\n                            makeActiveCellNormal();\n                        }\n                    } else {\n                        var newItem = {};\n                        currentEditor.applyValue(newItem, currentEditor.serializeValue());\n                        makeActiveCellNormal();\n                        trigger(self.onAddNewRow, {\n                            item: newItem,\n                            column: column,\n                            grid: self\n                        });\n                    }\n                    // check whether the lock has been re-acquired by event handlers\n                    return !getEditorLock().isActive();\n                } else {\n                    // Re-add the CSS class to trigger transitions, if any.\n                    $(activeCellNode).removeClass('invalid');\n                    $(activeCellNode).width();\n                    // force layout\n                    $(activeCellNode).addClass('invalid');\n                    trigger(self.onValidationError, {\n                        editor: currentEditor,\n                        cellNode: activeCellNode,\n                        validationResults: validationResults,\n                        row: activeRow,\n                        cell: activeCell,\n                        column: column,\n                        grid: self\n                    });\n                    currentEditor.focus();\n                    return false;\n                }\n            }\n            makeActiveCellNormal();\n        }\n        return true;\n    }\n    function cancelCurrentEdit() {\n        makeActiveCellNormal();\n        return true;\n    }\n    function rowsToRanges(rows) {\n        var ranges = [];\n        var lastCell = columns.length - 1;\n        for (var i = 0; i < rows.length; i++) {\n            ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n        }\n        return ranges;\n    }\n    function getSelectedRows() {\n        if (!selectionModel) {\n            throw new Error('Selection model is not set');\n        }\n        return selectedRows;\n    }\n    function setSelectedRows(rows) {\n        if (!selectionModel) {\n            throw new Error('Selection model is not set');\n        }\n        selectionModel.setSelectedRanges(rowsToRanges(rows));\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Debug\n    this.debug = function () {\n        var s = '';\n        s += '\\n' + 'counter_rows_rendered:  ' + counter_rows_rendered;\n        s += '\\n' + 'counter_rows_removed:  ' + counter_rows_removed;\n        s += '\\n' + 'renderedRows:  ' + renderedRows;\n        s += '\\n' + 'numVisibleRows:  ' + numVisibleRows;\n        s += '\\n' + 'maxSupportedCssHeight:  ' + maxSupportedCssHeight;\n        s += '\\n' + 'n(umber of pages):  ' + n;\n        s += '\\n' + '(current) page:  ' + page;\n        s += '\\n' + 'page height (ph):  ' + ph;\n        s += '\\n' + 'vScrollDir:  ' + vScrollDir;\n        alert(s);\n    };\n    // a debug helper to be able to access private members\n    this.eval = function (expr) {\n        return eval(expr);\n    };\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Public API\n    $.extend(this, {\n        'slickGridVersion': '2.3.4',\n        // Events\n        'onScroll': new Slick.Event(),\n        'onSort': new Slick.Event(),\n        'onHeaderMouseEnter': new Slick.Event(),\n        'onHeaderMouseLeave': new Slick.Event(),\n        'onHeaderContextMenu': new Slick.Event(),\n        'onHeaderClick': new Slick.Event(),\n        'onHeaderCellRendered': new Slick.Event(),\n        'onBeforeHeaderCellDestroy': new Slick.Event(),\n        'onHeaderRowCellRendered': new Slick.Event(),\n        'onFooterRowCellRendered': new Slick.Event(),\n        'onBeforeHeaderRowCellDestroy': new Slick.Event(),\n        'onBeforeFooterRowCellDestroy': new Slick.Event(),\n        'onMouseEnter': new Slick.Event(),\n        'onMouseLeave': new Slick.Event(),\n        'onClick': new Slick.Event(),\n        'onDblClick': new Slick.Event(),\n        'onContextMenu': new Slick.Event(),\n        'onKeyDown': new Slick.Event(),\n        'onAddNewRow': new Slick.Event(),\n        'onBeforeAppendCell': new Slick.Event(),\n        'onValidationError': new Slick.Event(),\n        'onViewportChanged': new Slick.Event(),\n        'onColumnsReordered': new Slick.Event(),\n        'onColumnsResized': new Slick.Event(),\n        'onCellChange': new Slick.Event(),\n        'onBeforeEditCell': new Slick.Event(),\n        'onBeforeCellEditorDestroy': new Slick.Event(),\n        'onBeforeDestroy': new Slick.Event(),\n        'onActiveCellChanged': new Slick.Event(),\n        'onActiveCellPositionChanged': new Slick.Event(),\n        'onDragInit': new Slick.Event(),\n        'onDragStart': new Slick.Event(),\n        'onDrag': new Slick.Event(),\n        'onDragEnd': new Slick.Event(),\n        'onSelectedRowsChanged': new Slick.Event(),\n        'onCellCssStylesChanged': new Slick.Event(),\n        // Methods\n        'registerPlugin': registerPlugin,\n        'unregisterPlugin': unregisterPlugin,\n        'getColumns': getColumns,\n        'setColumns': setColumns,\n        'getColumnIndex': getColumnIndex,\n        'updateColumnHeader': updateColumnHeader,\n        'setSortColumn': setSortColumn,\n        'setSortColumns': setSortColumns,\n        'getSortColumns': getSortColumns,\n        'autosizeColumns': autosizeColumns,\n        'getOptions': getOptions,\n        'setOptions': setOptions,\n        'getData': getData,\n        'getDataLength': getDataLength,\n        'getDataItem': getDataItem,\n        'setData': setData,\n        'getSelectionModel': getSelectionModel,\n        'setSelectionModel': setSelectionModel,\n        'getSelectedRows': getSelectedRows,\n        'setSelectedRows': setSelectedRows,\n        'getContainerNode': getContainerNode,\n        'updatePagingStatusFromView': updatePagingStatusFromView,\n        'render': render,\n        'invalidate': invalidate,\n        'invalidateRow': invalidateRow,\n        'invalidateRows': invalidateRows,\n        'invalidateAllRows': invalidateAllRows,\n        'updateCell': updateCell,\n        'updateRow': updateRow,\n        'getViewport': getVisibleRange,\n        'getRenderedRange': getRenderedRange,\n        'resizeCanvas': resizeCanvas,\n        'updateRowCount': updateRowCount,\n        'scrollRowIntoView': scrollRowIntoView,\n        'scrollRowToTop': scrollRowToTop,\n        'scrollCellIntoView': scrollCellIntoView,\n        'scrollColumnIntoView': scrollColumnIntoView,\n        'getCanvasNode': getCanvasNode,\n        'getUID': getUID,\n        'getHeaderColumnWidthDiff': getHeaderColumnWidthDiff,\n        'getScrollbarDimensions': getScrollbarDimensions,\n        'getHeadersWidth': getHeadersWidth,\n        'getCanvasWidth': getCanvasWidth,\n        'focus': setFocus,\n        'getCellFromPoint': getCellFromPoint,\n        'getCellFromEvent': getCellFromEvent,\n        'getActiveCell': getActiveCell,\n        'setActiveCell': setActiveCell,\n        'getActiveCellNode': getActiveCellNode,\n        'getActiveCellPosition': getActiveCellPosition,\n        'resetActiveCell': resetActiveCell,\n        'editActiveCell': makeActiveCellEditable,\n        'getCellEditor': getCellEditor,\n        'getCellNode': getCellNode,\n        'getCellNodeBox': getCellNodeBox,\n        'canCellBeSelected': canCellBeSelected,\n        'canCellBeActive': canCellBeActive,\n        'navigatePrev': navigatePrev,\n        'navigateNext': navigateNext,\n        'navigateUp': navigateUp,\n        'navigateDown': navigateDown,\n        'navigateLeft': navigateLeft,\n        'navigateRight': navigateRight,\n        'navigatePageUp': navigatePageUp,\n        'navigatePageDown': navigatePageDown,\n        'gotoCell': gotoCell,\n        'getTopPanel': getTopPanel,\n        'setTopPanelVisibility': setTopPanelVisibility,\n        'getPreHeaderPanel': getPreHeaderPanel,\n        'setPreHeaderPanelVisibility': setPreHeaderPanelVisibility,\n        'setHeaderRowVisibility': setHeaderRowVisibility,\n        'getHeaderRow': getHeaderRow,\n        'getHeaderRowColumn': getHeaderRowColumn,\n        'setFooterRowVisibility': setFooterRowVisibility,\n        'getFooterRow': getFooterRow,\n        'getFooterRowColumn': getFooterRowColumn,\n        'getGridPosition': getGridPosition,\n        'flashCell': flashCell,\n        'addCellCssStyles': addCellCssStyles,\n        'setCellCssStyles': setCellCssStyles,\n        'removeCellCssStyles': removeCellCssStyles,\n        'getCellCssStyles': getCellCssStyles,\n        'init': finishInitialization,\n        'destroy': destroy,\n        // IEditor implementation\n        'getEditorLock': getEditorLock,\n        'getEditController': getEditController\n    });\n    init();\n}\nmodule.exports = { Grid: SlickGrid };","module.exports = typeof $ !== 'undefined' ? $ : require(410    /* jquery */);","'use strict';\nvar _ = require(419    /* ./underscore.template */);\nvar UnderscoreTemplate = _.template;\nfunction Template(text, data, settings) {\n    return UnderscoreTemplate(text, data, settings);\n}\nTemplate._ = _;\nmodule.exports = Template;\n// If we're in the browser,\n// define it if we're using AMD, otherwise leak a global.\nif (typeof define === 'function' && define.amd) {\n    define(function () {\n        return Template;\n    });\n} else if (typeof window !== 'undefined' || typeof navigator !== 'undefined') {\n    window.UnderscoreTemplate = Template;\n}","'use strict';\n//     Underscore.js 1.5.2\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n// Establish the object that gets returned to break out of a loop iteration.\nvar breaker = {};\n// Save bytes in the minified (but not gzipped) version:\nvar ArrayProto = Array.prototype, ObjProto = Object.prototype;\n// Create quick reference variables for speed access to core prototypes.\nvar slice = ArrayProto.slice, toString = ObjProto.toString, hasOwnProperty = ObjProto.hasOwnProperty;\n// All **ECMAScript 5** native function implementations that we hope to use\n// are declared here.\nvar nativeForEach = ArrayProto.forEach, nativeKeys = Object.keys, nativeIsArray = Array.isArray;\n// Create a safe reference to the Underscore object for use below.\nvar _ = function () {\n};\n// Collection Functions\n// --------------------\n// The cornerstone, an `each` implementation, aka `forEach`.\n// Handles objects with the built-in `forEach`, arrays, and raw objects.\n// Delegates to **ECMAScript 5**'s native `forEach` if available.\nvar each = _.each = _.forEach = function (obj, iterator, context) {\n    if (obj == null)\n        return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n        for (var i = 0, length = obj.length; i < length; i++) {\n            if (iterator.call(context, obj[i], i, obj) === breaker)\n                return;\n        }\n    } else {\n        var keys = _.keys(obj);\n        for (var i = 0, length = keys.length; i < length; i++) {\n            if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker)\n                return;\n        }\n    }\n};\n// Object Functions\n// ----------------\n// Retrieve the names of an object's properties.\n// Delegates to **ECMAScript 5**'s native `Object.keys`\n_.keys = nativeKeys || function (obj) {\n    if (obj !== Object(obj))\n        throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj)\n        if (_.has(obj, key))\n            keys.push(key);\n    return keys;\n};\n// Fill in a given object with default properties.\n_.defaults = function (obj) {\n    each(slice.call(arguments, 1), function (source) {\n        if (source) {\n            for (var prop in source) {\n                if (obj[prop] === void 0)\n                    obj[prop] = source[prop];\n            }\n        }\n    });\n    return obj;\n};\n// Is a given value an array?\n// Delegates to ECMA5's native Array.isArray\n_.isArray = nativeIsArray || function (obj) {\n    return toString.call(obj) === '[object Array]';\n};\n// Shortcut function for checking if an object has a given property directly\n// on itself (in other words, not on a prototype).\n_.has = function (obj, path) {\n    if (!_.isArray(path)) {\n        return obj != null && hasOwnProperty.call(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n        var key = path[i];\n        if (obj == null || !hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n        obj = obj[key];\n    }\n    return !!length;\n};\n// List of HTML entities for escaping.\nvar entityMap = {\n    escape: {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        '\\'': '&#x27;'\n    }\n};\n// Regexes containing the keys and values listed immediately above.\nvar entityRegexes = { escape: new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g') };\n// Functions for escaping and unescaping strings to/from HTML interpolation.\n_.each(['escape'], function (method) {\n    _[method] = function (string) {\n        if (string == null)\n            return '';\n        return ('' + string).replace(entityRegexes[method], function (match) {\n            return entityMap[method][match];\n        });\n    };\n});\n// By default, Underscore uses ERB-style template delimiters, change the\n// following template settings to use alternative delimiters.\n_.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n};\n// When customizing `templateSettings`, if you don't want to define an\n// interpolation, evaluation or escaping regex, we need one that is\n// guaranteed not to match.\nvar noMatch = /(.)^/;\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar escapes = {\n    '\\'': '\\'',\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n};\nvar escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n// JavaScript micro-templating, similar to John Resig's implementation.\n// Underscore templating handles arbitrary delimiters, preserves whitespace,\n// and correctly escapes quotes within interpolated code.\n_.template = function (text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp([\n        (settings.escape || noMatch).source,\n        (settings.interpolate || noMatch).source,\n        (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = '__p+=\\'';\n    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n        source += text.slice(index, offset).replace(escaper, function (match) {\n            return '\\\\' + escapes[match];\n        });\n        if (escape) {\n            source += '\\'+\\n((__t=(' + escape + '))==null?\\'\\':_.escape(__t))+\\n\\'';\n        }\n        if (interpolate) {\n            source += '\\'+\\n((__t=(' + interpolate + '))==null?\\'\\':__t)+\\n\\'';\n        }\n        if (evaluate) {\n            source += '\\';\\n' + evaluate + '\\n__p+=\\'';\n        }\n        index = offset + match.length;\n        return match;\n    });\n    source += '\\';\\n';\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable)\n        source = 'with(obj||{}){\\n' + source + '}\\n';\n    source = 'var __t,__p=\\'\\',__j=Array.prototype.join,' + 'print=function(){__p+=__j.call(arguments,\\'\\');};\\n' + source + 'return __p;\\n';\n    try {\n        render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n        e.source = source;\n        throw e;\n    }\n    if (data)\n        return render(data, _);\n    var template = function (data) {\n        return render.call(this, data, _);\n    };\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n    return template;\n};\nmodule.exports = _;"]}